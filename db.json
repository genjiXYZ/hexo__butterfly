{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"ed1114c6da49d2f0047641659b7b84b1cca36d8d","modified":1600322093563},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1600290353852},{"_id":"themes/butterfly/README_CN.md","hash":"dc38de6a558b66e05188fc62c5047ec982a74ff3","modified":1615168751948},{"_id":"themes/butterfly/_config.yml","hash":"55d2c60a861a6946f6c940380fb76762cf77c1db","modified":1615168751948},{"_id":"themes/butterfly/package.json","hash":"dcece2e743a150d0213caf68ad6dcc1018a860d7","modified":1615168752039},{"_id":"themes/butterfly/README.md","hash":"32ada08cfe64b38f8d5ac5de31cfb92956ff407c","modified":1615168751947},{"_id":"themes/butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":1600290353852},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1600290353855},{"_id":"themes/butterfly/layout/category.pug","hash":"60c1b795b6e227b5dd81963b51d29d1b81d0bf49","modified":1615168751951},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"741e522b2387f94764a73844e7b084cc7e927c54","modified":1615168751949},{"_id":"themes/butterfly/languages/default.yml","hash":"7ca673fb629ea74f5ba5e75b4f0f95248cfb5090","modified":1615168751949},{"_id":"themes/butterfly/layout/flink.pug","hash":"308b706f2326e792d75337a3bbdba16d336efa62","modified":1600290353855},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1600290353871},{"_id":"themes/butterfly/layout/page.pug","hash":"82aa988527a11835e7ac86ce4f23b8cd20014dfa","modified":1615168752037},{"_id":"themes/butterfly/layout/post.pug","hash":"8d398c8925182699d9f2b9f1b727f06228488312","modified":1615168752038},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1601493082722},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":1615168751945},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"79a50c40d9f5463f1fa42aa870ac6b8b84540412","modified":1615168751950},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1600290353851},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":1600290353851},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1615168751952},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"aa105ea4eaecc951f7474b549b6ac0095a5fab1f","modified":1615168751957},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"76d672c91f6bb6f20c6936e05067c42f7917ac61","modified":1615168751961},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"a3298d12181d739dedd2ea20b65594797e42e6d7","modified":1615168751972},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"2b34e587030516afe2faf1a8cb20aebaead012f1","modified":1615168751976},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"2d0453adf92a3fd3466cf0793f14685d17b8b51d","modified":1615168751976},{"_id":"themes/butterfly/scripts/events/404.js","hash":"3c30dbd8b910ce7d8d7d8353cf2266cbc5d8775d","modified":1600290353873},{"_id":"themes/butterfly/scripts/events/check_hexo.js","hash":"15c58a4cb86f64581f71c37d9f2e1395e22a52bf","modified":1600290353873},{"_id":"themes/butterfly/scripts/events/replace_config.js","hash":"cdb4f462bceb155f59b98cd705efadbdc1fb5309","modified":1600290353873},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1600290353873},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"e9cf275c362d8634f093e63068da7ed1e53c7600","modified":1600290353873},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"9821872007cf57efae4b728dc575ef9d004547bb","modified":1615168752043},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1615168752044},{"_id":"themes/butterfly/layout/404.pug","hash":"58cfa5985e58e10c97a9f8a9dc354f1c766154b3","modified":1615168751951},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1615168752044},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"1da73cd47b78c6dbc3f04ce500d6cc5711c94412","modified":1615168752045},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"0d8ba6120dce617a2a1fbc9167572db2ee9f22ef","modified":1615168752046},{"_id":"themes/butterfly/scripts/tags/button.js","hash":"e75283267f3a4773e6d803593d557e218396f260","modified":1600290353875},{"_id":"themes/butterfly/scripts/tags/gallery.js","hash":"77e657eb74a7718b7e11e04284827e4a85805b86","modified":1600290353875},{"_id":"themes/butterfly/scripts/tags/hide.js","hash":"ea5939e3d5b3d3106527093a4fe0adaaf1fef2f8","modified":1600290353876},{"_id":"themes/butterfly/scripts/tags/mermaid.js","hash":"f358a6a5b7979290263e5b02766d0b9449e60841","modified":1600290353876},{"_id":"themes/butterfly/languages/en.yml","hash":"cd333235ff1648a6bf58dfafc81f2c57672a15a5","modified":1615168751949},{"_id":"themes/butterfly/scripts/tags/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1601493082726},{"_id":"themes/butterfly/scripts/tags/tabs.js","hash":"1f3bff5bbab30bb103e256ea6fb5b71a1bfe6dc1","modified":1600290353876},{"_id":"themes/butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1615168752079},{"_id":"themes/butterfly/source/css/var.styl","hash":"e92eaefda462315051872b7894a6f6eb70a29006","modified":1615168752080},{"_id":"themes/butterfly/source/js/main.js","hash":"8cf2fb897890fa5fbbffbe936d6fa80b383584d9","modified":1615168752084},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1615168752086},{"_id":"themes/butterfly/source/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1615168752087},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"4156224c47bfc2482281ac4e4df701c30476ff00","modified":1615168751952},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1600290353891},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1600290353892},{"_id":"themes/butterfly/source/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1600290353893},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1600290353892},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"90d01b88d0f406d00184960b1afe9230aec2ebe6","modified":1615168751953},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"d43e7209864627a06b06879867d51841025ab9ee","modified":1615168751953},{"_id":"themes/butterfly/layout/includes/head/aplayer.pug","hash":"b24959f00ac75f12f66b445158aad143ee860795","modified":1600290353857},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1600290353891},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"798dbbe9146e8e2379b39a49acf8c8a1eeabb8fb","modified":1615168751954},{"_id":"themes/butterfly/layout/includes/head/darkmode.pug","hash":"6f7cbc741e3c00a5321e1aa762a85d68d9ba6a85","modified":1601493082707},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1600290353858},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1615168751953},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1601493082707},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"e55f8bdb876d5429a908498db1307b94094c0d06","modified":1615168751955},{"_id":"themes/butterfly/source/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1600290353893},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1600290353859},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"62cf37e28795d8b68a0e850ec8c94987b9e08db5","modified":1600290353859},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"1d439b0d0691f3ed8be42df200245fbf9c2c526c","modified":1615168751958},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"92f81a437c9db49f7ebcf608bc09488ecdb55a21","modified":1615168751960},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"c205b9fd72b2fe19e6d15c5b5ab0fb38c653032e","modified":1615168751959},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1600290353860},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1600290353860},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"6058de23612ab1ed17d2ad93f5866d5f745135f0","modified":1615168751967},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"44d231314d4bfffdb93096c1fa18d05de7293267","modified":1615168751958},{"_id":"themes/butterfly/layout/includes/mobile-sidebar/mobile-menus.pug","hash":"b13d95c53c5031e6305ec1fe83d6758f52fa96ee","modified":1600290353861},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1615168751962},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"edebe930a2e3c4a4de5a35b9c1b1409cdd401372","modified":1615168751974},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"68dfd3c6a0f00b3ffc0333c81e165b4626f7425f","modified":1600290353860},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1615168752013},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":1615168752020},{"_id":"themes/butterfly/layout/includes/mobile-sidebar/index.pug","hash":"d12fab033fb32b55abbc9be9b04cc6ab6465b98e","modified":1600290353861},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1600290353867},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"ba128f305d6ce3bdcb7cd056b888ac4be7bfb0c0","modified":1615168752020},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1600290353861},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"50f0574a1db1c62d56042b10880ba348d65d8fd9","modified":1615168752025},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1615168752027},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"3e4e83a41a444f7454ff682620369a8af1f960c9","modified":1615168752029},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"3d8e3706a056389176f55dd21956aabc78046761","modified":1615168752026},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1615168752029},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"36b368516b5a746be84a6aa08767ee24d220d509","modified":1615168752030},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1615168752026},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e356f916ceb28702812d8f66c1fea0ae75eece47","modified":1615168752033},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1615168752034},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1615168752035},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"9e91f2543ab39815309268d07ae248a78887acf9","modified":1615168752035},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"6ba9dcda7ff1ceda4e07c8c08517259e8b7dbcd5","modified":1615168752052},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"fa7a4c1685f391d60ed863e869b9604b59746c27","modified":1600290353878},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"eda47f3e807a466ba8275627ea936c5100c43818","modified":1615168752051},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"6317bc18152e474b8faa7994fc5fbc3c9e455a84","modified":1615168752059},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1600290353879},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"3305ab95795801339bc515affca56c11ddc954e6","modified":1615168752054},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"f1b63892baafa48ab872bc79671d57aafd511f6c","modified":1615168752060},{"_id":"themes/butterfly/source/css/_layout/404.styl","hash":"d6548e332e6e57e2a7ba2eb53cdd838c3cd1846d","modified":1615168752058},{"_id":"themes/butterfly/source/css/_layout/flink.styl","hash":"43f00986410f3dc0eed9e0bf9478801da32be24f","modified":1600290353879},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"dd8cdf639ba2b726437c77fa7aa8d5edbabe8f9b","modified":1615168752061},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"cb1770e1dfc82ad5fb5ef3dc7f5fa7a5b0dc3297","modified":1615168752062},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"7d18a7be9cfea65091de3ef00014063d2d649912","modified":1601493082729},{"_id":"themes/butterfly/source/css/_layout/mobile-sidebar.styl","hash":"d153816b11eb5f5458ce9ceb41e2bba9a2343fad","modified":1601493082729},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"90fe01c968696a9f791cb2b84fca621cbbb56f47","modified":1615168752063},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"e639219e12069f9a71c8f325364a8f656454b999","modified":1615168752063},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"0551c5893d1589a3d17ce161e50ecb1d724cc6e8","modified":1615168752064},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"7a072589e6097dbe942783131964f2372fdf1eb6","modified":1615168752065},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"ea1ba40dd5954c2ed718a126336fb7f94da4e66f","modified":1615168752064},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7a6e1f21173022a3a1f18a62785cdd657a1af0a1","modified":1615168752066},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"788a28f68e29fad5328dc03be2f3268324281652","modified":1615168752066},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"c2d35443807a121e20c7ac3c1caa50f848bacd59","modified":1615168752068},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"e554549f0a0ae85362f0b0e8687981741f486f6b","modified":1601493082732},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a6f8637e90e44e23338209d4a3438e3e67766971","modified":1615168752070},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"7c4152162a03aa8331a783df5695e4ebbb816a8c","modified":1615168752071},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9a881c031f463c486bd25248c2814fd09f97892b","modified":1601493082732},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"e6f1ec543fe50acd16ffe0e76f6f124218135e59","modified":1615168752067},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"89e744abc5e41f4855e7b87b13b854f4ec4ffc0e","modified":1600290353886},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"51f2bd03a2d0787911d0c090fb555a664b3fac8b","modified":1615168752074},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6874adc2e276443f354bbe50d0072e9bec37243c","modified":1600290353883},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"53ecae272e16223a436c497abbf25dd5f0fc4aaa","modified":1615168752075},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d0386ba6d8d63afc72b9673e8f3e89df6446ffc2","modified":1600290353887},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"6b05ca4409d2dc09e123af4e0af9f9d0f7142b73","modified":1615168752073},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"21964fdd6d74ffbea519418bab65024aee5f3736","modified":1615168752076},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"86fee274a62f7f034547342930f445c47378eb55","modified":1601493082734},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"1756791581c0ec51cb03353a09dac4778d944349","modified":1600290353889},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"a7fc7624a8d893bdf9444f14154484c29c790e99","modified":1601493082733},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1600290353889},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1615168752085},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1615168752086},{"_id":"themes/butterfly/source/js/third-party/canvas-nest.js","hash":"38cb4f2b025f6354124dadb69fe0e0ce57d35094","modified":1600290353897},{"_id":"themes/butterfly/source/js/third-party/activate-power-mode.js","hash":"2c4ab494225b7d04eed934efc43a43791e596f4a","modified":1600290353896},{"_id":"themes/butterfly/source/js/third-party/canvas-ribbon.js","hash":"1ddf4f6896175e77518f0fbd45776132b2954fb6","modified":1600290353898},{"_id":"themes/butterfly/source/js/third-party/click_heart.js","hash":"004ea645ed8c5e354711b5fc0dbfe015e181916b","modified":1600290353898},{"_id":"themes/butterfly/source/js/third-party/ClickShowText.js","hash":"32864aee35b5d739a36702b8d916b17bac52b17e","modified":1600290353896},{"_id":"themes/butterfly/source/js/third-party/fireworks.js","hash":"a048478f020a5a5b4781dd7b4946e9bfe30d7560","modified":1600290353898},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1600290353863},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1600290353862},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1600290353863},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1600290353863},{"_id":"themes/butterfly/source/js/third-party/piao.js","hash":"8846788202ee4ad18a814fa492ac39bb7f09548a","modified":1600290353899},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1600290353863},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"353ebd0bdecdfde6dee32c3aa208cc87c72b15c0","modified":1615168752008},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b2fb4af74d54f1daa39d4afc321d38a2a72e0ddd","modified":1615168752008},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1600290353862},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0b7571919e8ad51285deda56a1868fccf8c563d7","modified":1615168752009},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"da9813f8dc0d388869c15413cf056012cfb69e1a","modified":1615168752009},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"bafb3d5710824caa59a56017afb058fd2b4eac65","modified":1615168752010},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1600290353864},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"b871ea208e36398b4d668db9a9a0b61c79415381","modified":1600290353864},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f617cacf5d1e8335abba96ee1ce4b79c17411e1e","modified":1600290353863},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"2b45fe09d5b591dca156b76dae99981f8d8e1c61","modified":1615168752012},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"21b7ec96c606823d3d72e72775495ef77502b4cb","modified":1615168752015},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"4afc12ce42d067fa4012039aa444343a36f73599","modified":1615168752016},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"3f3a3cd8bea2103dedd754f767aca5cb84d5f586","modified":1615168752016},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"a13246714c9b9c6d6e5093f131a57bb49d653940","modified":1615168752018},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"18dcf05ab58107bbff426376aef2577f59583fc2","modified":1615168752018},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1615168752014},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/leancloud.pug","hash":"c002c905b338fc5ab567ceb0a42284a11638381e","modified":1601493082717},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1600290353867},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"613280d61b8ab9612014ec016ae3d3698d36fd1a","modified":1615168752022},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"9820d731bb66a1d9c2e0083361d0c99c68c93fdf","modified":1615168752017},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1600290353868},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1615168752024},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1615168752025},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"d8f59e94eafc669c49349561dc5bbea3915aecb7","modified":1615168752021},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"52c63a50a37fa315753e72b3661676156aeae794","modified":1615168752054},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"897a18a82c0cad141b3ed9e2f1b4af60c24c334b","modified":1615168752056},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1600290353868},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"d40f1baec16c4a62e4a3a9a0379d1ca3ac6746b2","modified":1600290353878},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"3bcd66576d13db8f93fa5b799a973d55e060a708","modified":1600290353878},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1600290353878},{"_id":"source/.DS_Store","hash":"e8a5b21c3b341646398ae810e667330a36391b14","modified":1603389505297},{"_id":"source/about/index.md","hash":"878a6b3880b4ecf26438d34ac513ec5ec8859b36","modified":1600325316972},{"_id":"source/categories/index.md","hash":"35fa3ae24d18994b476f244a8bf15a64d0f74e6d","modified":1600327116261},{"_id":"source/comment/index.md","hash":"1403e299db6c96f3d26086ce66a911ffd59ec207","modified":1601500480528},{"_id":"source/link/index.md","hash":"960040966c540b08d1f4b130c1bb76812afb76c8","modified":1600325317036},{"_id":"source/tags/index.md","hash":"46949bd3f3eabaf5d728c656eb8f80ec759dd163","modified":1600347823000},{"_id":"source/_posts/.DS_Store","hash":"ff68a2cfa3c72a8d35745f6cef4a06dc9687ec75","modified":1615444431747},{"_id":"source/_posts/ddns.md","hash":"bc95db5c2272bf56eb8a2e9e862e8d8e6a25cd4b","modified":1601486179867},{"_id":"source/_posts/deploy_travis_pages.md","hash":"e14e0576b7f8650e0cd9db8c10bc44b2f11f4fec","modified":1601504110515},{"_id":"source/_posts/deploy_travis_server.md","hash":"7f75d764a49403cb5e523e5d99ebd58086131658","modified":1601504110515},{"_id":"source/_posts/frp.md","hash":"aaf3d27ef9acf605232f798e9a10f0aca91c4d10","modified":1601489786710},{"_id":"source/_posts/docker_bahs.md","hash":"428245091414660f8fb1b75673a38801d911d729","modified":1601453560672},{"_id":"source/_posts/git_bash.md","hash":"d04ff41bd7e86e70f21fd0b723d0605045be6408","modified":1600503532407},{"_id":"source/_posts/git_error.md","hash":"e42256c6584fdd1c8d2b897b37d18dded0926d4d","modified":1601868567174},{"_id":"source/_posts/git_push.md","hash":"f93721226d6492d94d9bd2e5e8459e2b08bdb179","modified":1600495514343},{"_id":"source/_posts/responsive_rem.md","hash":"2972eb254664ac48898a09988b83d8a75d3f46a7","modified":1601489947593},{"_id":"source/_posts/tag_plugins.md","hash":"ea7b64b5f770343b75a1d53dc9e97c156688b6df","modified":1600360543685},{"_id":"public/search.xml","hash":"18c99e1d528acce07c41b9b5ddf1621801ca2728","modified":1615450490203},{"_id":"public/404.html","hash":"2c37dbebcd55977b01a4e2f6e60c2a79568c5454","modified":1615450490203},{"_id":"public/about/index.html","hash":"98b3a0a141af5aaefaa720dc24b88fef56a439eb","modified":1615450490203},{"_id":"public/categories/index.html","hash":"83729239ff1be6dedce5d100acace40ab4b3368d","modified":1615450490203},{"_id":"public/comment/index.html","hash":"ee2fd105a95a3fd32a9e960f44c5d238d35e6bbf","modified":1615450490203},{"_id":"public/link/index.html","hash":"aefe9b12a1b910db15fe82283bfaac7047af74f2","modified":1600349605230},{"_id":"public/tags/index.html","hash":"36cece176d0242f7b3e25fae77113d05b867da16","modified":1615450490203},{"_id":"public/2020/09/17/tag_plugins/index.html","hash":"447b22fb5563aff6a8be7f9e6ac8be5555117e15","modified":1600349605230},{"_id":"public/2020/09/17/docker_bahs/index.html","hash":"da4f79335a752b8f881eba90e7198ea0066bb646","modified":1600349605230},{"_id":"public/2020/09/17/ddns/index.html","hash":"ea672e096b7bb3d8ce83611bcb264d5e55fc3d4d","modified":1600349605230},{"_id":"public/2018/01/05/deploy_travis_pages/index.html","hash":"682c54f020a59676d21ed20ee70394fa29e123a5","modified":1600349605230},{"_id":"public/2018/01/05/deploy_travis_server/index.html","hash":"5544da5f72a59167dd861e9950d5b6260a300f58","modified":1600349605230},{"_id":"public/2018/01/05/frp/index.html","hash":"fc3aac0b6979ff632de52f563f157500b0200601","modified":1600349605230},{"_id":"public/2018/01/05/git_push/index.html","hash":"c594b5582fc0d5a7e0ad7cb0465b19013f93a750","modified":1600349605230},{"_id":"public/2018/01/05/git_bash/index.html","hash":"12d8eb2d7521027be0a722793618fea286dded51","modified":1600349605230},{"_id":"public/2018/01/05/git_error/index.html","hash":"fad3834c7193df0d6f8e3e522e6921ab9576dcf7","modified":1600349605230},{"_id":"public/2018/01/05/responsive_rem/index.html","hash":"2d80fea2fb3db0a07c63a6698236b5f25379cff7","modified":1600349605230},{"_id":"public/archives/index.html","hash":"f52b3a9bb6919308915b608d1d08dc3651a0619f","modified":1615450490203},{"_id":"public/archives/2018/index.html","hash":"9756f00883ad02118e76d21d24742b66b7640322","modified":1600349605230},{"_id":"public/archives/2018/01/index.html","hash":"d1881e3ccaaf0e9837c04289235304a5c9f2fbcf","modified":1600349605230},{"_id":"public/archives/2020/index.html","hash":"23ab823a8c6c7c3f611cb1e0523e7200709966f0","modified":1615450490203},{"_id":"public/archives/2020/09/index.html","hash":"afea3238082104d72af6f1a6fb5d2b86df5ddb4d","modified":1615450490203},{"_id":"public/categories/网络/index.html","hash":"6134283ef2dae3a21688fbeb773e6bc8f0566252","modified":1600349605230},{"_id":"public/categories/CI-CD/index.html","hash":"4d4307ae9038fca60d9eb4579b458f2c6304df51","modified":1600349605230},{"_id":"public/categories/frp/index.html","hash":"e7f7609d426a113a8857ff3e7f1bc9e410b46a65","modified":1600349605230},{"_id":"public/categories/git/index.html","hash":"a1437d60337c1436a1d975a81f659417462a32fd","modified":1600349605230},{"_id":"public/categories/responsive/index.html","hash":"f3296275e5dc1cb4c895b9ce79a092fc5c6c02e0","modified":1600349605230},{"_id":"public/index.html","hash":"b231b3834b6e3c7f439113fde35f7fab653fa6b9","modified":1615450490203},{"_id":"public/tags/ddns/index.html","hash":"3fb69ca2c07ef042154e3728253bd2ab4542e595","modified":1615450490203},{"_id":"public/tags/旁路由/index.html","hash":"c61e6c0f867b8d3f1b90bdf65f449f791f373913","modified":1615450490203},{"_id":"public/tags/Travis/index.html","hash":"7aff049095e4744b014ada9bbcb756731c0a67c1","modified":1615450490203},{"_id":"public/tags/github-pages/index.html","hash":"a54baf5c04cef867c739843fce0105446d59ad1d","modified":1615450490203},{"_id":"public/tags/CNAME/index.html","hash":"1bbd36ba578e0293a7112c35a61ceeea8354934a","modified":1615450490203},{"_id":"public/tags/ssh/index.html","hash":"7de2295649be409bb8b9ae3857b7389779fc4a0c","modified":1615450490203},{"_id":"public/tags/frp/index.html","hash":"dc40be58afb5499fb36308d1f4049dc859803d0b","modified":1615450490203},{"_id":"public/tags/内网穿透/index.html","hash":"166f917f4524cdca2f563c8a04d62438316fa13f","modified":1615450490203},{"_id":"public/tags/docker/index.html","hash":"d20ba9af20fb8e35f43bae78fdcdd3659b2d3403","modified":1615450490203},{"_id":"public/tags/linux/index.html","hash":"5a587e911b8fc59aa700d43c56409e6693a5cbea","modified":1600349605230},{"_id":"public/tags/git/index.html","hash":"b87fb3026399f44cfcfc3616000b9e139ca07d77","modified":1615450490203},{"_id":"public/tags/error/index.html","hash":"33d8b73ff6b3d6f39bf144250841de2421ae3859","modified":1615450490203},{"_id":"public/tags/rem/index.html","hash":"cdeb2400613d40bbbf0e25aeb207ac682b8ce5c3","modified":1615450490203},{"_id":"public/tags/meta/index.html","hash":"77360fe0b07cf52c1845b797662efec8c0528143","modified":1615450490203},{"_id":"public/tags/postcss/index.html","hash":"3c8a8d9d0011f0adeea692d8e61d7a9117b72aad","modified":1615450490203},{"_id":"public/tags/px2rem/index.html","hash":"bee9c78034f76462a0955c36b62875561acf7b3d","modified":1615450490203},{"_id":"public/tags/移动端/index.html","hash":"00fa9d56aae803aefb6300853dfb35e7014deff4","modified":1615450490203},{"_id":"public/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1615450490203},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1615450490203},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1615450490203},{"_id":"public/img/icp.png","hash":"cb1fd69b38ec23ce8366668ddffbbd0160de0104","modified":1600349605230},{"_id":"public/img/loading.gif","hash":"5f0287fb8fb98872fe1998c6f781111819e71806","modified":1615450490203},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1615450490203},{"_id":"public/css/index.css","hash":"22fd19c1fcb864d84b73988ba99ef8d0ab7f9723","modified":1615450490203},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1615450490203},{"_id":"public/js/utils.js","hash":"41481019ef510c74e744f4f7ec4d0a13b5ccc04c","modified":1615450490203},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1615450490203},{"_id":"public/js/search/local-search.js","hash":"459e2541afda483916d16fce4aaa56b41bcd42ba","modified":1615450490203},{"_id":"public/js/third-party/canvas-nest.js","hash":"38cb4f2b025f6354124dadb69fe0e0ce57d35094","modified":1600349605230},{"_id":"public/js/third-party/activate-power-mode.js","hash":"2c4ab494225b7d04eed934efc43a43791e596f4a","modified":1600349605230},{"_id":"public/js/third-party/ClickShowText.js","hash":"32864aee35b5d739a36702b8d916b17bac52b17e","modified":1600349605230},{"_id":"public/js/third-party/canvas-ribbon.js","hash":"1ddf4f6896175e77518f0fbd45776132b2954fb6","modified":1600349605230},{"_id":"public/js/third-party/click_heart.js","hash":"004ea645ed8c5e354711b5fc0dbfe015e181916b","modified":1600349605230},{"_id":"public/js/third-party/fireworks.js","hash":"a048478f020a5a5b4781dd7b4946e9bfe30d7560","modified":1600349605230},{"_id":"public/js/third-party/piao.js","hash":"8846788202ee4ad18a814fa492ac39bb7f09548a","modified":1600349605230},{"_id":"public/js/main.js","hash":"8cf2fb897890fa5fbbffbe936d6fa80b383584d9","modified":1615450490203},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1615450490203},{"_id":"source/_posts/docker_error.md","hash":"d05cc51f268b1ecb790f08c4cdeca234216baa3f","modified":1601504064069},{"_id":"source/_posts/路由器.md","hash":"f28f51a383de260602cfce388309cb659c53ad59","modified":1601487109001},{"_id":"source/_posts/Front-matter.md","hash":"0fed257cf3e3350b2f9bc537f605a48479cc8bb3","modified":1600503502735},{"_id":"source/_posts/awtrix.md","hash":"9c9dc0af553337972e0c141ee59a79aca5494e25","modified":1601484566450},{"_id":"source/_posts/deploy_github_action.md","hash":"3324d80f7edadb09f1087ee474fbad808390dc47","modified":1601504108707},{"_id":"source/_posts/proxy_terminal.md","hash":"ccc11481b2013a71e41dedc42c3e0bad0d93fb84","modified":1601868378896},{"_id":"source/_posts/bg2019091201.jpg","hash":"9d8d2ab949409a6405b16f8fc167285f7c7540b8","modified":1601448730816},{"_id":"source/_posts/deploy_github_webhooks.md","hash":"b78a57692c3be5419a5d2428f3fa750e25d1b8de","modified":1601504110505},{"_id":"source/_posts/docker_bash.md","hash":"6440d3637bff8c4124aa82b6af6c01fe709175bb","modified":1601487710303},{"_id":"source/_posts/tips-1489021.jpg","hash":"9b76a1db510d1fe1307630a6fb698d522ed933e5","modified":1601489021207},{"_id":"source/_posts/tips.jpg","hash":"9b76a1db510d1fe1307630a6fb698d522ed933e5","modified":1601488873171},{"_id":"source/_posts/tips.md","hash":"18ad64bf29f710ea5d89f0531f0bc87d6ed5a7be","modified":1601868158049},{"_id":"source/_posts/Tag_plugins.md","hash":"73577fed4a0d013adeb122c05f4f5083164db963","modified":1601489657672},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"1f30952fed73dec21b42e2e30b7fe2e84618d2e4","modified":1601493082710},{"_id":"themes/butterfly/layout/includes/page/artitalk.pug","hash":"46bc194907f481a3a5dec1bb36b30ccf953e1970","modified":1601493082710},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"dbec869c62135695495703a29ad7655e9965d461","modified":1615168751970},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"45f0d36b1ac686b5984909dae55d3c522f549c3a","modified":1615168751971},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"93d4ebc7dc8228c7a10ddeb5a553d0dcdabbe145","modified":1601493082710},{"_id":"themes/butterfly/layout/includes/third-party/artitalk.pug","hash":"11f5227d3518bc91a85fdbd650a381aedfc10fe5","modified":1601493082712},{"_id":"themes/butterfly/layout/includes/third-party/baidu_push.pug","hash":"a3552fb4d969f72af0d1b099201faac1236e01d9","modified":1601493082712},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"d60b7a94a7adeac489b8c1afdf7e679994829742","modified":1615168752071},{"_id":"source/_posts/TravisC.png","hash":"09a2c199767d23d8f1d30386a3d9d5eb841e04cb","modified":1601499229544},{"_id":"source/_posts/sketch.md","hash":"c38f53301615bb3febb8ef24a98e6210192c560d","modified":1602319930417},{"_id":"source/_posts/gitea.md","hash":"d31a5e805efbb11a72df8d8a3dd1152485e2c966","modified":1601869382821},{"_id":"source/_posts/mac常用指令和快捷键.md","hash":"181aadb902bd267688ee31dd6e196bb0fdecb834","modified":1601868267691},{"_id":"source/_posts/mongoDB.md","hash":"0552506644b8168a781fcff643dfdc146ad82d65","modified":1601868109530},{"_id":"source/_posts/npm_error.md","hash":"969efb68e44c8352d7bf3228f5f752fed9c9316b","modified":1601615403073},{"_id":"source/_posts/macbook-pro-13-inch.jpg","hash":"d227101e3afe8a7537f9ee05850d606e300f24d8","modified":1601507572293},{"_id":"source/_posts/Mark_mac常用指令和快捷键.md","hash":"181aadb902bd267688ee31dd6e196bb0fdecb834","modified":1601868596819},{"_id":"source/_posts/net_ddns.md","hash":"bc95db5c2272bf56eb8a2e9e862e8d8e6a25cd4b","modified":1601868634896},{"_id":"source/_posts/net_proxy_terminal.md","hash":"ccc11481b2013a71e41dedc42c3e0bad0d93fb84","modified":1601868646257},{"_id":"source/_posts/net_路由器.md","hash":"f28f51a383de260602cfce388309cb659c53ad59","modified":1601868627458},{"_id":"source/_posts/DB_mongoDB.md","hash":"abb1ab9a863cb7e7910420fe9eb2d6fe40780c74","modified":1601869647621},{"_id":"source/_posts/Mark_error.md","hash":"6fd6f581ea8f0ed673a7812e43a88218945e6f4a","modified":1602050902133},{"_id":"source/_posts/diy_awtrix.md","hash":"9c9dc0af553337972e0c141ee59a79aca5494e25","modified":1601868980937},{"_id":"source/_posts/web_responsive_rem.md","hash":"2972eb254664ac48898a09988b83d8a75d3f46a7","modified":1601869146702},{"_id":"source/_posts/web_tips.md","hash":"18ad64bf29f710ea5d89f0531f0bc87d6ed5a7be","modified":1601869136622},{"_id":"source/_posts/workflow_github_action.md","hash":"3324d80f7edadb09f1087ee474fbad808390dc47","modified":1601504671436},{"_id":"source/_posts/workflow_github_webhooks.md","hash":"b78a57692c3be5419a5d2428f3fa750e25d1b8de","modified":1601504110505},{"_id":"source/_posts/workflow_travis_pages.md","hash":"e14e0576b7f8650e0cd9db8c10bc44b2f11f4fec","modified":1601504110515},{"_id":"source/_posts/workflow_travis_server.md","hash":"7f75d764a49403cb5e523e5d99ebd58086131658","modified":1601504110515},{"_id":"source/_posts/Diy_awtrix.md","hash":"fae7d434717f4cb8d8317b98466652e66a555444","modified":1601869664697},{"_id":"source/_posts/Diy_gitea.md","hash":"98248dc49f8d85b94912f4ba1bb3950d24a85af6","modified":1601869913579},{"_id":"source/_posts/Docker_bash.md","hash":"6440d3637bff8c4124aa82b6af6c01fe709175bb","modified":1601869468058},{"_id":"source/_posts/Git_bash.md","hash":"e5bd7bc4da8924c559a9bf15c2e0126a10b73464","modified":1601869682778},{"_id":"source/_posts/Git_push.md","hash":"8461d5d2b2a140279543970419eb3949dff2589f","modified":1601869699723},{"_id":"source/_posts/Net_ddns.md","hash":"bc95db5c2272bf56eb8a2e9e862e8d8e6a25cd4b","modified":1601868634896},{"_id":"source/_posts/Net_proxy_terminal.md","hash":"ccc11481b2013a71e41dedc42c3e0bad0d93fb84","modified":1601868646257},{"_id":"source/_posts/Net_frp.md","hash":"aaf3d27ef9acf605232f798e9a10f0aca91c4d10","modified":1601489786000},{"_id":"source/_posts/Net_路由器.md","hash":"f28f51a383de260602cfce388309cb659c53ad59","modified":1601868627458},{"_id":"source/_posts/Web_responsive_rem.md","hash":"2972eb254664ac48898a09988b83d8a75d3f46a7","modified":1601869146702},{"_id":"source/_posts/Workflow_github_action.md","hash":"3324d80f7edadb09f1087ee474fbad808390dc47","modified":1601504671436},{"_id":"source/_posts/Web_tips.md","hash":"18ad64bf29f710ea5d89f0531f0bc87d6ed5a7be","modified":1601869136622},{"_id":"source/_posts/Workflow_github_webhooks.md","hash":"b78a57692c3be5419a5d2428f3fa750e25d1b8de","modified":1601504110505},{"_id":"source/_posts/Workflow_travis_pages.md","hash":"e14e0576b7f8650e0cd9db8c10bc44b2f11f4fec","modified":1601504110515},{"_id":"source/_posts/Workflow_travis_server.md","hash":"7f75d764a49403cb5e523e5d99ebd58086131658","modified":1601504110515},{"_id":"source/_posts/2020-02-01_Workflow_travis_pages.md","hash":"e14e0576b7f8650e0cd9db8c10bc44b2f11f4fec","modified":1602051456734},{"_id":"source/_posts/2020-02-02_Workflow_travis_server.md","hash":"7f75d764a49403cb5e523e5d99ebd58086131658","modified":1602051420827},{"_id":"source/_posts/2020-04-01_DB_mongoDB.md","hash":"646e2d47e95b03e6300ffc7233544950955fadae","modified":1605458316297},{"_id":"source/_posts/2020-01-01_Tag_plugins.md","hash":"a6b36796661ff7010b1c11130e6b6dab56d210e4","modified":1602170921857},{"_id":"source/_posts/2020-01-01_Web_responsive_rem.md","hash":"ca6164d369074e2cfc5698bf3229f6ffb3be2cce","modified":1605459596901},{"_id":"source/_posts/2020-01-01_Web_tips.md","hash":"18ad64bf29f710ea5d89f0531f0bc87d6ed5a7be","modified":1602051624553},{"_id":"source/_posts/2020-01-02_Git_bash.md","hash":"e5bd7bc4da8924c559a9bf15c2e0126a10b73464","modified":1602051535544},{"_id":"source/_posts/2020-01-02_Git_push.md","hash":"8461d5d2b2a140279543970419eb3949dff2589f","modified":1602051544302},{"_id":"source/_posts/2020-01-03_Net_proxy_terminal.md","hash":"ccc11481b2013a71e41dedc42c3e0bad0d93fb84","modified":1602051595110},{"_id":"source/_posts/2020-01-06_Net_ddns.md","hash":"bc95db5c2272bf56eb8a2e9e862e8d8e6a25cd4b","modified":1602051573822},{"_id":"source/_posts/2020-01-02_Mark_error.md","hash":"6fd6f581ea8f0ed673a7812e43a88218945e6f4a","modified":1602051551830},{"_id":"source/_posts/2020-01-06_Net_frp.md","hash":"aaf3d27ef9acf605232f798e9a10f0aca91c4d10","modified":1602051634165},{"_id":"source/_posts/2020-01-07_Net_路由器.md","hash":"f28f51a383de260602cfce388309cb659c53ad59","modified":1602051563633},{"_id":"source/_posts/2020-01-20_Docker_bash.md","hash":"6440d3637bff8c4124aa82b6af6c01fe709175bb","modified":1602051526040},{"_id":"source/_posts/2020-02-03_Workflow_github_webhooks.md","hash":"b78a57692c3be5419a5d2428f3fa750e25d1b8de","modified":1602051651453},{"_id":"source/_posts/2020-02-04_Workflow_github_action.md","hash":"3762cceb64fa35f4dc6324ced6b48f192200918e","modified":1605418883338},{"_id":"source/_posts/2020-02-15_Mark_mac常用指令和快捷键.md","hash":"6dcb36ac1a2f98a9f05360dc7d6e05984f546a35","modified":1605458661898},{"_id":"source/_posts/2020-03-01_Diy_gitea.md","hash":"4a9dbdbda2d0fabc75584d31e0ca65331a409c52","modified":1602319777299},{"_id":"source/_posts/2020-09-02_Diy_awtrix.md","hash":"eea39b84d842c050c18d7e9f4b2daa544ada682b","modified":1602317850638},{"_id":"source/_posts/2020-03-01_Markdown 语法.md","hash":"4dd348860faac1e599771ff6844bff9e68b24d93","modified":1602186106017},{"_id":"source/_posts/c4a6db3cba16fc150e3db76ca3c326d2-20201008232630322.png","hash":"855a17a9f8b6f42a6e782ad5aff1b54c3a6fa965","modified":1602170790322},{"_id":"source/_posts/c4a6db3cba16fc150e3db76ca3c326d2.png","hash":"855a17a9f8b6f42a6e782ad5aff1b54c3a6fa965","modified":1602170717774},{"_id":"source/_posts/2020-10-10_Diy_openWrt_smartDns.md","hash":"d6bb7f39fbf78f32132030b6cec4f3703be71c45","modified":1602317421592},{"_id":"source/_posts/2020-10-10_Mark_openwrt_n1的副本.md","hash":"210bf7f40e45bb859146819d8f9b914a3f655614","modified":1603372588250},{"_id":"source/_posts/2020-10-22_Web_JS_Arr_reduce.md","hash":"a98f3952c0a7a529d3f4961b9ecd0b6a8a20ba58","modified":1603614781131},{"_id":"source/_posts/2020-10-22_Web_JS_Arr_sort.md","hash":"4ecceb872bf5adea3997ed959fdcff3c25fe3075","modified":1603390004029},{"_id":"source/_posts/2020-10-10_Mark_openwrt_n1.md","hash":"511a6ac0a03d5650da486871558ce261ae9785f1","modified":1603345035186},{"_id":"source/_posts/Untitled.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1603375158586},{"_id":"source/_posts/2020-10-22_Web_JS_Arr_filter.md","hash":"dfc90240c357653d450b094ae13c1b6a7b8f597a","modified":1603615885435},{"_id":"source/_posts/2020-10-22_Web_JS_Arr_find_indexOf_findIndex_some_includes.md","hash":"1ed6f366de2cc9e373546652856e8bc0f71175f2","modified":1603625079098},{"_id":"source/_posts/Untitled 1.md","hash":"86ef4ec80441e5142d14f819747a3d6e6b69affe","modified":1603567475708},{"_id":"source/_posts/2020-10-22_Web_JS_Arr_Remove Duplicates .md","hash":"4603ffdbafbfa5449da96e4b89fd045281732342","modified":1603624537608},{"_id":"source/_posts/2020-10-22_Web_JS_Arr_sort的副本.md","hash":"4ecceb872bf5adea3997ed959fdcff3c25fe3075","modified":1603390004029},{"_id":"source/_posts/表格 copy.md","hash":"4971c93242b5bcad70f2bdf55be4799d43cc9464","modified":1603614631292},{"_id":"source/_posts/表格.md","hash":"02c280b4b7073f43a7f4ffdc25e289f3b4a83805","modified":1603624838050},{"_id":"source/_posts/2020-10-10_Mark_一些写法.md","hash":"933a5f20b8897ed509f95bdf387ba0a48a29ee46","modified":1603624641449},{"_id":"source/_posts/2020-10-22_Web_JS_Arr_loop.md","hash":"c16b67cc20dfec1a2f38f7ca236ea1192d717797","modified":1603618025758},{"_id":"source/_posts/2020-10-10_Diy_openwrt_n1.md","hash":"511a6ac0a03d5650da486871558ce261ae9785f1","modified":1603623730089},{"_id":"source/_posts/f18b33adf235b721b009eddbc00645e9_720w.jpg","hash":"9722141fc8bfda45fe27f42212d9a9f40332139c","modified":1603617762665},{"_id":"source/_posts/2020-03-01_Mark_Markdown 语法.md","hash":"7f70e73c4ef33e647244ab50b3049cf34b002111","modified":1603624751402},{"_id":"source/_posts/2020-10-22_Web_JS_奇淫的题.md","hash":"0667ea936c924224606d9757115d48bfd6550533","modified":1603625096722},{"_id":"source/_posts/2020-11-15_npm_publish.md","hash":"123b86f39fb6211933705a2a64be2d51699c5a5f","modified":1606467585036},{"_id":"source/_posts/image-20201115145749248.png","hash":"ee8f9ab8f684a9d497717d4533d8c229ebe760bb","modified":1605423469249},{"_id":"source/_posts/image-20201115150045695.png","hash":"e5e2076a90a2886a2511e6fe062f31eded055232","modified":1605423645695},{"_id":"source/_posts/test/test.md","hash":"f572d396fae9206628714fb2ce00f72e94f2258f","modified":1606509812202},{"_id":"source/_posts/Git/2020-01-02_Git_bash.md","hash":"e5bd7bc4da8924c559a9bf15c2e0126a10b73464","modified":1606509946970},{"_id":"source/_posts/Git/2020-01-02_Git_push.md","hash":"8461d5d2b2a140279543970419eb3949dff2589f","modified":1606509944496},{"_id":"source/_posts/Docker/2020-01-20_Docker_bash.md","hash":"d4043ee845ea3bf327376f39c2aff16d468f0111","modified":1606513827795},{"_id":"source/_posts/Mark/2020-03-01_Mark_Markdown 语法.md","hash":"7f70e73c4ef33e647244ab50b3049cf34b002111","modified":1606510304690},{"_id":"source/_posts/Useless/2020-01-06_Net_ddns.md","hash":"9605c93590e94ac91439511e87a7ec9f98b877df","modified":1606510871803},{"_id":"source/_posts/Useless/2020-01-06_Net_frp.md","hash":"1db5dcd5a251e5fb8db9e38182fa1acc9e06e0b1","modified":1606510871803},{"_id":"source/_posts/Useless/2020-09-02_Diy_awtrix.md","hash":"422f15d53bed7bad6ed965f8aa4531428f41241f","modified":1615195760836},{"_id":"source/_posts/Useless/2020-01-07_Net_路由器.md","hash":"42c8797260e6997e62a2f7c7071bc37d6a5ab096","modified":1615172355542},{"_id":"source/_posts/Useless/2020-10-10_Diy_openWrt_smartDns.md","hash":"097557fca43afc9e131c8e5784454c65fd8141b9","modified":1606510868981},{"_id":"source/_posts/Useless/2020-10-10_Diy_openwrt_n1.md","hash":"0fcbd2de96a6e068234b32de314a4f648712633b","modified":1606510922934},{"_id":"source/_posts/DB/mongodb/2020-04-01_DB_mongoDB.md","hash":"646e2d47e95b03e6300ffc7233544950955fadae","modified":1606510366432},{"_id":"source/_posts/Mark/error/2020-01-02_Mark_error.md","hash":"6fd6f581ea8f0ed673a7812e43a88218945e6f4a","modified":1606510044633},{"_id":"source/_posts/前端/css/2020-01-01_Web_responsive_rem.md","hash":"5f692d0fdb90896c5fc8772d00e017fcecb560c3","modified":1606510686054},{"_id":"source/_posts/前端/npm/2020-11-15_npm_publish.md","hash":"65e481ac85471a9550e518291effd65ef6409a1d","modified":1606510740054},{"_id":"source/_posts/前端/CI/CD/2020-02-01_Workflow_travis_pages.md","hash":"7fb39fda0e40fe27522c15bf727edcde8d4029ee","modified":1615173954729},{"_id":"source/_posts/Mark/2020-01-01_Web_tips.md","hash":"18ad64bf29f710ea5d89f0531f0bc87d6ed5a7be","modified":1606510536560},{"_id":"source/_posts/Useless/2020-01-03_Net_proxy_terminal.md","hash":"9f8bd5c428bbf661b0b1f9d004569a4eb190ce23","modified":1615174753695},{"_id":"source/_posts/Useless/2020-01-01_Tag_plugins.md","hash":"a6b36796661ff7010b1c11130e6b6dab56d210e4","modified":1606510526303},{"_id":"source/_posts/Mark/2020-10-10_Mark_一些写法.md","hash":"933a5f20b8897ed509f95bdf387ba0a48a29ee46","modified":1606510515304},{"_id":"source/_posts/Useless/2020-03-01_Diy_gitea.md","hash":"11e7571b866fa7723c1891883ea09539bf54c8a1","modified":1606510871803},{"_id":"source/_posts/Useless/2020-02-15_Mark_mac常用指令和快捷键.md","hash":"78004c2479efee0cc5494633dc0add805eb9c7ff","modified":1606510871803},{"_id":"source/_posts/前端/js/2020-10-22_Web_JS_Arr_Remove Duplicates .md","hash":"4603ffdbafbfa5449da96e4b89fd045281732342","modified":1606510499848},{"_id":"source/_posts/前端/js/2020-10-22_Web_JS_Arr_find_indexOf_findIndex_some_includes.md","hash":"1ed6f366de2cc9e373546652856e8bc0f71175f2","modified":1606510499735},{"_id":"source/_posts/前端/js/2020-10-22_Web_JS_Arr_loop.md","hash":"c16b67cc20dfec1a2f38f7ca236ea1192d717797","modified":1606510499786},{"_id":"source/_posts/前端/js/2020-10-22_Web_JS_Arr_sort.md","hash":"4ecceb872bf5adea3997ed959fdcff3c25fe3075","modified":1606510499899},{"_id":"source/_posts/前端/js/2020-10-22_Web_JS_奇淫的题.md","hash":"0667ea936c924224606d9757115d48bfd6550533","modified":1606510500040},{"_id":"source/_posts/前端/CI/CD/2020-02-02_Workflow_travis_server.md","hash":"292dd4b9791ad9e54d91c35ca48390a314296cda","modified":1606510611263},{"_id":"source/_posts/前端/CI/CD/2020-02-03_Workflow_github_webhooks.md","hash":"2781952219abf2bb6a4863aa22d6be6881a0081a","modified":1615173828336},{"_id":"source/_posts/前端/CI/CD/2020-02-04_Workflow_github_action.md","hash":"b1c3d545c9cc205993966789cee8c180351090ad","modified":1615193982646},{"_id":"source/_posts/Useless/黑苹果.md","hash":"0297cae525d69ff28f6f23e9e108461762a29a35","modified":1606513041635},{"_id":"source/_posts/Useless/webp-20201128053125360","hash":"a1b34a232ffd7f41dfc0f1a1fcd85c23f3f10a9c","modified":1606512685360},{"_id":"source/_posts/Useless/image-20201128053243350.png","hash":"7e1e6e7114041c661fe55d064b18eb7cb6d85260","modified":1606512763350},{"_id":"source/_posts/Useless/image-20201128053146108.png","hash":"722a4a559b17a47d71e58b6f1c97302083d4bcac","modified":1606512706108},{"_id":"source/_posts/前端/node/Nodemailer.md","hash":"b8c2fcb75c15e8c9557cf58fbd10da207a27fcdf","modified":1615445309334},{"_id":"source/_posts/前端/js/console.md","hash":"bfb5d5016cb9234ed896a5453b4a320657de8d40","modified":1615473131320},{"_id":"source/_posts/前端/js/image-20201128140913499.png","hash":"7c27a14aa6db65652b0243feabb0c4d4966a7a6d","modified":1615196968430},{"_id":"source/_posts/前端/js/image-20201128140338413.png","hash":"b18d7d02c3f5823298729cdf33e909bd132e07a3","modified":1615196968377},{"_id":"source/_posts/前端/js/image-20201128143256514.png","hash":"5de7fe0c2b469851ef19e938e92b89faa42ea309","modified":1615196968429},{"_id":"source/_posts/前端/js/image-20201128143405251.png","hash":"2be3e47f370f1f5a6652ba6a1a6737423297e56e","modified":1615196968379},{"_id":"source/_posts/前端/js/image-20201128145644045.png","hash":"f063440c8ce8e13786269ad1c9a40e56bf3dd1e5","modified":1615196969277},{"_id":"source/_posts/前端/js/image-20201128143417986.png","hash":"2be3e47f370f1f5a6652ba6a1a6737423297e56e","modified":1615196968430},{"_id":"source/_posts/前端/js/image-20201128145939043.png","hash":"df7898b89306346677b37921282cb199235166e3","modified":1615196969450},{"_id":"source/_posts/前端/js/image-20201128144734279.png","hash":"abe2e619f27cf7afd60effc60db565c205c65ce5","modified":1615196969295},{"_id":"source/_posts/前端/js/image-20201128151533877.png","hash":"4f7f0ec317e49500db8ce32bc4fe98ca74d7a1be","modified":1615196969432},{"_id":"source/_posts/前端/js/image-20201128160732266.png","hash":"c7df213bdeaf86bca3522907e1c8756daa977968","modified":1615196969967},{"_id":"source/_posts/前端/.DS_Store","hash":"379e54c41210b007dbbe77a3821330d7336f1715","modified":1615472737607},{"_id":"source/_posts/前端/css/滚动视差 scroll parallax.md","hash":"38cd0229f5fcf524a5d9c7e9be7a3cf5560d9eb0","modified":1606845401716},{"_id":"source/_posts/前端/node/未命名.md","hash":"9d7b4206d0b4a775ac344c7b4988839f5911a1d1","modified":1606902039349},{"_id":"source/_posts/前端/node/js爬虫 初体验.md","hash":"0c963f161e465583cb29ffc8d07016264b910e66","modified":1606923199540},{"_id":"source/_posts/前端/node/image-20201202174646454.png","hash":"20c134e22becf9a038b289ec612eaa1173eab197","modified":1606902406455},{"_id":"source/_posts/前端/test.md","hash":"597213223d1ac79ca9552b7a0d5be8d93ff824b1","modified":1606923069600},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1615168751947},{"_id":"themes/butterfly/scripts/events/init.js","hash":"43b245c308797c2d62cb70429a85f1a05d3395ab","modified":1615168752041},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"81459adf885a15c6e9784bc2275c07efe67ab0b4","modified":1615168752045},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"e75283267f3a4773e6d803593d557e218396f260","modified":1615168752047},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":1615168752048},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1615168752049},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"94826ea6bcc4d2304199adae12c4e2b272caf529","modified":1615168752047},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"35f073021db93699fcac9ef351e26c59c31aadf7","modified":1615168752048},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1615168752049},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1615168751977},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"ae9336bf31cdad08ff586ead4295912a96563c76","modified":1615168752031},{"_id":"themes/butterfly/layout/includes/widget/card_self.pug","hash":"a1b2f5575b6804c5c4b9288db143b5164cbbd289","modified":1615168752034},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1615168751980},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1615168751979},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":1615168751982},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":1615168751983},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":1615168751986},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"76c061a16d7e5935f02acd27c6cdb4933c642b97","modified":1615168751993},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"16378d8646ea3f4ac99c18f0296dd85b13f9d775","modified":1615168752011},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"9657b1b08ff3f98e49ca250ed47a81b8b202ac7a","modified":1615168752019},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"87b097f791f56ca17319657de7901853b798555d","modified":1615168752013},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"59b4c26a827ace5a54855881d199977103ff6f50","modified":1615168752019},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"cb38ffe911023092a90a28f2ba8317a92b22cd0c","modified":1615168752019},{"_id":"source/_posts/模板.md","hash":"9bdd25d1f1a3980e5064a73a19b246d5d3abc13b","modified":1615443622156},{"_id":"source/_posts/Diy/2020-01-01_Tag_plugins.md","hash":"2f29c43d6acfd37024efa2eb9f1ac7f0379bd7f4","modified":1615443228391},{"_id":"source/_posts/Diy/2020-01-06_Net_ddns.md","hash":"e9e5703cbe1c96af33b1d1ccc5cfff792293b071","modified":1615443228393},{"_id":"source/_posts/Diy/2020-01-06_Net_frp.md","hash":"a0b308ef9ce6ec907c4721d6c43f65cf3509a879","modified":1615443228391},{"_id":"source/_posts/Diy/2020-01-07_Net_路由器.md","hash":"fb6319e91808ce01b59463cdf06a7baca5ff54e7","modified":1615443228391},{"_id":"source/_posts/Diy/2020-03-01_Diy_gitea.md","hash":"6eef57051b2cfddd920c8c45a54b7b46d2a756d8","modified":1615443228391},{"_id":"source/_posts/Diy/2020-09-02_Diy_awtrix.md","hash":"26dfd2a2da28ac2a3cb50936ad642b7cfda6cd88","modified":1615443228391},{"_id":"source/_posts/Diy/2020-10-10_Diy_openWrt_smartDns.md","hash":"139f84b7f7679f3f179c12c031838778ec4bf1e3","modified":1615443226420},{"_id":"source/_posts/Diy/2020-10-10_Diy_openwrt_n1.md","hash":"0f23ca604222c7ab277caf9a7603214539bb147e","modified":1615443228382},{"_id":"source/_posts/Diy/黑苹果.md","hash":"de37f8babfc68d302a117a3507c4cd64ba50ddad","modified":1615444359039},{"_id":"source/_posts/Mark/Git/2020-01-02_Git_bash.md","hash":"ed53351d0e3dd4f67fcf17d494bd583f608ebb7b","modified":1615443318048},{"_id":"source/_posts/Mark/Git/2020-01-02_Git_push.md","hash":"8461d5d2b2a140279543970419eb3949dff2589f","modified":1606509944490},{"_id":"source/_posts/DB/2020-04-01_DB_mongoDB.md","hash":"ac1ab14222f19ad8670b4c5f89d85462d71850a5","modified":1615444444676},{"_id":"source/_posts/Diy/awtrix.md","hash":"26dfd2a2da28ac2a3cb50936ad642b7cfda6cd88","modified":1615443960037},{"_id":"source/_posts/Diy/ddns.md","hash":"e9e5703cbe1c96af33b1d1ccc5cfff792293b071","modified":1615443980199},{"_id":"source/_posts/Diy/gitea.md","hash":"1e89de37d2657e9d9411fe0df8534fe48b408069","modified":1615444905767},{"_id":"source/_posts/Diy/frp.md","hash":"a0b308ef9ce6ec907c4721d6c43f65cf3509a879","modified":1615443976960},{"_id":"source/_posts/Diy/openwrt_n1.md","hash":"4fd43585112fbd3eb8fb11be05191c8f921e0447","modified":1615443941278},{"_id":"source/_posts/Diy/外挂标签.md","hash":"82c867f7fc4a0e6dbde7213776408300eb251023","modified":1615443986839},{"_id":"source/_posts/Diy/smartDns.md","hash":"139f84b7f7679f3f179c12c031838778ec4bf1e3","modified":1615443933278},{"_id":"source/_posts/Diy/路由器.md","hash":"fb6319e91808ce01b59463cdf06a7baca5ff54e7","modified":1615443970862},{"_id":"source/_posts/Mark/mac常用指令和快捷键.md","hash":"0337233a166bf5afa86d9bb3a656db152be65e5f","modified":1615444757358},{"_id":"source/_posts/Mark/终端代理.md","hash":"ec75f5193d314dc5653fe93a7abd7afd6aed109b","modified":1615444149997},{"_id":"source/_posts/前端/js/js好的写法.md","hash":"933a5f20b8897ed509f95bdf387ba0a48a29ee46","modified":1615444185354},{"_id":"source/_posts/前端/html/2020-01-01_Web_tips.md","hash":"7194277058309b443c7c2a6c04353215f0d8364b","modified":1615444284827},{"_id":"source/_posts/Mark/error/报错记录.md","hash":"6eb6e9bb00036dbac659241fbd2a8ba3a75be95e","modified":1615444006000},{"_id":"source/_posts/Mark/Docker/docker命令.md","hash":"b50bd7353decb4e294c431dda76679de788a8a43","modified":1615443999156},{"_id":"source/_posts/Mark/git/git_push多个仓库.md","hash":"5f84a1cb724427ad78794330b325d1caf3521d63","modified":1615444682478},{"_id":"source/_posts/Mark/git/git命令.md","hash":"67aa156aedf9bddd552760a4a8d15ffc186d505f","modified":1615444013831},{"_id":"source/_posts/Mark/md/Markdown 语法.md","hash":"e9fda151d5bc1dcfb8159ab347d1c66c0bb910f0","modified":1615444249920},{"_id":"source/_posts/前端/css/responsive_rem.md","hash":"5f692d0fdb90896c5fc8772d00e017fcecb560c3","modified":1615444828808},{"_id":"source/_posts/前端/html/html小记录.md","hash":"7194277058309b443c7c2a6c04353215f0d8364b","modified":1615444843274},{"_id":"source/_posts/前端/CI/CD/github_action.md","hash":"b1c3d545c9cc205993966789cee8c180351090ad","modified":1615444807926},{"_id":"source/_posts/前端/CI/CD/github_webhooks.md","hash":"2781952219abf2bb6a4863aa22d6be6881a0081a","modified":1615444814010},{"_id":"source/_posts/前端/CI/CD/travis_pages.md","hash":"7fb39fda0e40fe27522c15bf727edcde8d4029ee","modified":1615444804489},{"_id":"source/_posts/前端/CI/CD/travis_server.md","hash":"292dd4b9791ad9e54d91c35ca48390a314296cda","modified":1615444817890},{"_id":"source/photo/index.md","hash":"9188387efc576f6411c79c03b1f614101a855228","modified":1615447636073},{"_id":"public/photo/index.html","hash":"cdfddea5161d16875617f773b1ebc7be697f3215","modified":1615450490203},{"_id":"public/2021/03/11/模板/index.html","hash":"e8a6990899108cb5a56ae605dd4b2606ef95cfbe","modified":1615450490203},{"_id":"public/2020/11/01/前端/npm/2020-11-15_npm_publish/index.html","hash":"244d992ad4382b14a2c0a158b0bf30fb08365816","modified":1615450490203},{"_id":"public/2020/10/24/表格/index.html","hash":"715aa502125098cd87701aecc0e93c3be3252e3f","modified":1615450490203},{"_id":"public/2020/09/02/前端/js/2020-10-22_Web_JS_Arr_Remove Duplicates /index.html","hash":"88f744b12df998530b9b6572e2d9e00bedd2a27d","modified":1615450490203},{"_id":"public/2020/09/02/前端/js/2020-10-22_Web_JS_Arr_find_indexOf_findIndex_some_includes/index.html","hash":"04403f7d5ea39bb469f99efeff369e6151ec87d3","modified":1615450490203},{"_id":"public/2020/09/02/前端/js/2020-10-22_Web_JS_Arr_loop/index.html","hash":"e867d1fbcec42aab97a586e0f76802926dbd5904","modified":1615450490203},{"_id":"public/2020/09/02/前端/js/2020-10-22_Web_JS_Arr_sort/index.html","hash":"1c8663475375e724506e03bb8406cc4db1af69ce","modified":1615450490203},{"_id":"public/2020/09/02/前端/js/2020-10-22_Web_JS_奇淫的题/index.html","hash":"74bf67c0dacd05585072aaf854d378d9f31d6f60","modified":1615450490203},{"_id":"public/2020/09/02/前端/js/console/index.html","hash":"595e8cbb23c8ee6e4c966052e232d048de043cee","modified":1615450490203},{"_id":"public/2020/09/02/Diy/awtrix/index.html","hash":"c0a16fa57faabba9b6d68a24eec911335eb41f1a","modified":1615450490203},{"_id":"public/2020/09/02/Diy/openwrt_n1/index.html","hash":"7e0a15957285d7abbdae585c4d82945ce7a20c95","modified":1615450490203},{"_id":"public/2020/09/02/Diy/smartDns/index.html","hash":"0c24d17a78c9ee36d15388238c8c7af494e6823a","modified":1615450490203},{"_id":"public/2020/09/02/前端/js/js好的写法/index.html","hash":"fbb1923091650dcd06a491f1c1f5b2a994a20644","modified":1615450490203},{"_id":"public/2020/05/01/前端/css/滚动视差 scroll parallax/index.html","hash":"15f634847b122e567068e6d6ae4f38530b77769b","modified":1615450490203},{"_id":"public/2020/04/01/DB/2020-04-01_DB_mongoDB/index.html","hash":"d05fe14a17cea3a858b9936021eb22eeeb2bff3f","modified":1615450490203},{"_id":"public/2020/03/04/Diy/黑苹果/index.html","hash":"7247c62d596a82e853630b0c676fc961d10bac1e","modified":1615450490203},{"_id":"public/2020/03/01/Mark/md/Markdown 语法/index.html","hash":"d4e5dce64ba722de87c498fed2a75318e17df497","modified":1615450490203},{"_id":"public/2020/03/01/Diy/gitea/index.html","hash":"67ad76939a847d738b9b9a529b8be91c29e92ff8","modified":1615450490203},{"_id":"public/2020/02/15/Mark/mac常用指令和快捷键/index.html","hash":"5a878ab91d0fe1ca6f38c15f77403302e1875a04","modified":1615450490203},{"_id":"public/2020/02/04/前端/node/Nodemailer/index.html","hash":"9baee35b6b8b710810aec7d08aff39b7106e56a7","modified":1615450490203},{"_id":"public/2020/02/04/前端/node/js爬虫 初体验/index.html","hash":"bbf86dd72aa214c6ca8866585ee3ed9419311220","modified":1615450490203},{"_id":"public/2020/02/04/前端/CI/CD/github_action/index.html","hash":"59e736816c1b803ce11d4297f9e79187be04a891","modified":1615450490203},{"_id":"public/2020/02/03/前端/CI/CD/github_webhooks/index.html","hash":"77a0490fe60de69357debaa79f769ff9e8b3ca07","modified":1615450490203},{"_id":"public/2020/02/02/前端/CI/CD/travis_server/index.html","hash":"874297774bbe41c960be74349c499b8c2f85c2c7","modified":1615450490203},{"_id":"public/2020/02/01/前端/CI/CD/travis_pages/index.html","hash":"a91864dc57a44c2fb48221afb55a5a56721b8957","modified":1615450490203},{"_id":"public/2020/01/20/Mark/Docker/docker命令/index.html","hash":"4c5bd9a07d95046a227d160a864d0a88f67d4b12","modified":1615450490203},{"_id":"public/2020/01/06/Diy/ddns/index.html","hash":"8d44fdd643f042e9fc3d730ef370ad3a3124323f","modified":1615450490203},{"_id":"public/2020/01/07/Diy/路由器/index.html","hash":"063c28ba33ba24567bc5aa4116a3b92a19016968","modified":1615450490203},{"_id":"public/2020/01/05/Diy/frp/index.html","hash":"580b31ba36ea0fa5cd2c8f9f1ff444e986d51851","modified":1615450490203},{"_id":"public/2020/01/03/Mark/终端代理/index.html","hash":"bbcb7e6d76cc2c9f3a4a85cdbd64b81370044a3d","modified":1615450490203},{"_id":"public/2020/01/02/Mark/error/报错记录/index.html","hash":"74646fb865a99d9709be73c59675fd3e0dbbdd18","modified":1615450490203},{"_id":"public/2020/01/02/Mark/git/git_push多个仓库/index.html","hash":"08e3be64d004966e46c9eeb99110dd551895d0c6","modified":1615450490203},{"_id":"public/2020/01/02/Mark/git/git命令/index.html","hash":"48443dc53c10375089672aa01da6582bc85ee78f","modified":1615450490203},{"_id":"public/2020/01/01/Diy/外挂标签/index.html","hash":"a53969c1bdbee9011444e6ad15a9643694619198","modified":1615450490203},{"_id":"public/2020/01/01/前端/css/responsive_rem/index.html","hash":"e97e7ade7d95d9ab5f5b4667b84a2121a1c77bef","modified":1615450490203},{"_id":"public/2020/01/01/前端/html/html小记录/index.html","hash":"f7c1fd19da1b847d17a0c0ddf7c8a17fec1a67b0","modified":1615450490203},{"_id":"public/archives/page/2/index.html","hash":"51f0fa9c34584e74b014c1a1ba257bd728295d8e","modified":1615450490203},{"_id":"public/archives/page/3/index.html","hash":"69eda4706415dbbb1be29f294ae11e9b26270d4d","modified":1615450490203},{"_id":"public/archives/page/4/index.html","hash":"1dd13508d7ce6c6d50588ac369fd8bc5e6de5aa7","modified":1615450490203},{"_id":"public/archives/2020/page/2/index.html","hash":"ca164730318ad1224dfb6abbded46d7e3b3c0751","modified":1615450490203},{"_id":"public/archives/2020/page/3/index.html","hash":"d8cf75cbad663a6c30d3f4aa187abecb3c9b7cfb","modified":1615450490203},{"_id":"public/archives/2020/page/4/index.html","hash":"bcd4e479ddea5b8bffc829e9d89edd77548f5c58","modified":1615450490203},{"_id":"public/archives/2020/01/index.html","hash":"08d8dcd408eeabe946ac8e283b5daa542e89634f","modified":1615450490203},{"_id":"public/archives/2020/01/page/2/index.html","hash":"c066c9a903064b425736ec7e84dc9fe337f164bd","modified":1615450490203},{"_id":"public/archives/2020/02/index.html","hash":"32be11861dea639b76afdff66c856a8c14d1f77c","modified":1615450490203},{"_id":"public/archives/2020/03/index.html","hash":"5445cf9d1e0a65c8fe51d53b3aeea78b1e7fd4cb","modified":1615450490203},{"_id":"public/archives/2020/04/index.html","hash":"28fb4a08aff8f5464e3708edb1848573cf1720fe","modified":1615450490203},{"_id":"public/archives/2020/05/index.html","hash":"9beef228b25f54a4a1ace5de65a38328f86a2620","modified":1615450490203},{"_id":"public/archives/2020/10/index.html","hash":"6ea0d389766f783061c5632c2933c950148f74f6","modified":1615450490203},{"_id":"public/archives/2020/11/index.html","hash":"3dcb070779bc9f9a63542ddd7c3feb483b1b0e98","modified":1615450490203},{"_id":"public/archives/2021/index.html","hash":"0e9abc1b12f44d375b3cbd164f64f589d61737da","modified":1615450490203},{"_id":"public/archives/2021/03/index.html","hash":"6d4d139ecf9c6123fce68dcad9de874bb59173c5","modified":1615450490203},{"_id":"public/categories/diy/index.html","hash":"aefe311dceb981c93a6552fa2e92749ee58ea8b7","modified":1615450490203},{"_id":"public/categories/前端/index.html","hash":"fbe53162e458d4ec4373e18b854848fb20625ce6","modified":1615450490203},{"_id":"public/categories/前端/page/2/index.html","hash":"9eba8a747aeacd8f0e961e1292bf0185faef9fdc","modified":1615450490203},{"_id":"public/categories/DB/index.html","hash":"1810db69c619a7d969d205f33e6260ae1eafd29e","modified":1615450490203},{"_id":"public/categories/前端/js/index.html","hash":"808db6b5da9633587ca969fd8e4b92861cfa5b92","modified":1615450490203},{"_id":"public/categories/前端/npm/index.html","hash":"633dbbeb56e852f33ce5b168b099817c8a57e8eb","modified":1615450490203},{"_id":"public/categories/前端/CI-CD/index.html","hash":"6117c7912123a1d4b13af33fb9fc3060e2ac9c20","modified":1615450490203},{"_id":"public/categories/前端/css/index.html","hash":"8f16f6019c44c3af5a7d57ba887d5e1d2227fdc4","modified":1615450490203},{"_id":"public/categories/前端/node/index.html","hash":"ba5c12e69422670cb5849c1fc84df2871a4a28b8","modified":1615450490203},{"_id":"public/categories/DB/mongodb/index.html","hash":"1d944da6d7fd87b9500f80ac68be43b178374b15","modified":1615450490203},{"_id":"public/categories/mark/index.html","hash":"199da22de0f6037d12e764443d5c95c592199e63","modified":1615450490203},{"_id":"public/categories/前端/html/index.html","hash":"8ba16bfde3851781627e7b6b5dbc6b4c99d3ae79","modified":1615450490203},{"_id":"public/categories/mark/error/index.html","hash":"bad199a220e0869a7758392c61cd19c5becf60a5","modified":1615450490203},{"_id":"public/categories/mark/docker/index.html","hash":"758dc1ef9c0db0fd0a065e0562146dde89ce0535","modified":1615450490203},{"_id":"public/categories/mark/git/index.html","hash":"ae329f1d2c990776000a70e01e8fc462dc17b2ff","modified":1615450490203},{"_id":"public/categories/mark/proxy/index.html","hash":"f51a8bb6d1aab5b5ea1358e52be3788a4c632fb4","modified":1615450490203},{"_id":"public/categories/mark/md/index.html","hash":"d1b18b641a2ce59e11f5d64ae03124461991c125","modified":1615450490203},{"_id":"public/categories/mark/快捷键/index.html","hash":"799fd4d387f57af8c46f7b54a731b9987e87e42d","modified":1615450490203},{"_id":"public/page/2/index.html","hash":"77f246c8d8909109dfe0cb9f03ef4a30530b7e25","modified":1615450490203},{"_id":"public/tags/路由器/index.html","hash":"fcf3ece906d61aeed4bbc34d88cea1b690aceeae","modified":1615450490203},{"_id":"public/tags/光猫/index.html","hash":"deb4b454d7255befb15f458f3476e5e80a06fc78","modified":1615450490203},{"_id":"public/tags/awtrix/index.html","hash":"8c2901c48a9f2b1bea06517236887b8a9902bc28","modified":1615450490203},{"_id":"public/tags/CI-CD/index.html","hash":"9b14d95b9a4eb70367bc3d013b7390116d26778c","modified":1615450490203},{"_id":"public/tags/webhook/index.html","hash":"554392b0d9d1dd84fd3370d0be269ea829ac1df3","modified":1615450490203},{"_id":"public/tags/Tips/index.html","hash":"67eea609d43903d8c1cb71c58ddc1e4f3c4333a2","modified":1615450490203},{"_id":"public/tags/响应式/index.html","hash":"70bee2e247bb84a0cd9aeaa60227af74e8d946db","modified":1615450490203},{"_id":"public/tags/github-action/index.html","hash":"a2c5d84ef63fb54f48b82a48db19eee8c0e16af4","modified":1615450490203},{"_id":"public/tags/gitea/index.html","hash":"f6da6556faca2192e3d5dc3e3d092c7d048b6946","modified":1615450490203},{"_id":"public/tags/端口映射/index.html","hash":"673ebb33c9bd6a7ada8cd75d84fe0769ef248dbe","modified":1615450490203},{"_id":"public/tags/Mac/index.html","hash":"285ef9707deaedab61533e50c170600cc5475f84","modified":1615450490203},{"_id":"public/tags/mongoDB/index.html","hash":"5321cb624ac1220837f596115da0d981b88a37b7","modified":1615450490203},{"_id":"public/tags/proxy/index.html","hash":"c0b8edd17947cb55d52c48f5e2905f2ab56d6905","modified":1615450490203},{"_id":"public/tags/终端/index.html","hash":"09cd506ad24c404727bf7da691b7b651e42089c2","modified":1615450490203},{"_id":"public/tags/openwrt/index.html","hash":"4d13d9bcd02523f84815acfd681c64a18a231437","modified":1615450490203},{"_id":"public/tags/js/index.html","hash":"b75df573c42f88485f75a523f662f21b4ff16403","modified":1615450490203},{"_id":"public/tags/Array/index.html","hash":"107762493eefd0cabaf3d139948058339cff15d7","modified":1615450490203},{"_id":"public/tags/Mark/index.html","hash":"1b4e92be9e6f33df8eea77b5ecf885067b4253e0","modified":1615450490203},{"_id":"public/tags/Markdown/index.html","hash":"b043a6d47083e9be1fbc047ac4cc6c5f3e6b51e6","modified":1615450490203},{"_id":"public/tags/Typora/index.html","hash":"17524dad43999921c0719db492cd84a49b23f685","modified":1615450490203},{"_id":"public/tags/npm/index.html","hash":"e3a50b3f0bd97f05f0e99c4bd62e07e95e59b6cb","modified":1615450490203},{"_id":"public/tags/黑苹果/index.html","hash":"c8451787ecf26e253d68a38757a37c6d9267bcbf","modified":1615450490203},{"_id":"public/tags/parallax/index.html","hash":"1c225995fede1212570fab492aa9f59dcca98d44","modified":1615450490203},{"_id":"public/tags/爬虫/index.html","hash":"d0d49229ff653476fcfae77ccd535053295933b4","modified":1615450490203},{"_id":"public/tags/node/index.html","hash":"b25333708bb13e1bc9ba3868e0fde5c5a6b3083b","modified":1615450490203},{"_id":"public/tags/md/index.html","hash":"ec3cc0adbffe0dd121ad5ffaec5831cc0f410e99","modified":1615450490203},{"_id":"source/_posts/前端/js/.DS_Store","hash":"2640ba95090148a5f224d92ed5fc5652fc17735d","modified":1615473074691}],"Category":[{"name":"网络","_id":"ckf6gww9b0002zop71sjp7sbj"},{"name":"CI/CD","_id":"ckf6gww9g0007zop7eedo3ypn"},{"name":"frp","_id":"ckf6gww9m000izop7gsw5fyv8"},{"name":"git","_id":"ckf6gww9q000pzop7cv595cvi"},{"name":"responsive","_id":"ckf6gww9s0012zop7d26k96jh"},{"name":"docker","_id":"ckf74sjd700010vp7execfh66"},{"name":"diy","_id":"ckfp0iqy600038ap7dkweaihi"},{"name":"workflow","_id":"ckfpl0eoj0000z1p72938al75"},{"name":"proxy","_id":"ckfpl0eov000bz1p77ot9a0dr"},{"name":"proxy","parent":"ckf6gww9b0002zop71sjp7sbj","_id":"ckfpo5t98000131p7c4ab6nv1"},{"name":"Travis","parent":"ckfpl0eoj0000z1p72938al75","_id":"ckfpo73yq00005tp7f2jcd0f1"},{"name":"Workflow","_id":"ckfpo9ba500009up7c2dta2bb"},{"name":"Travis","parent":"ckfpo9ba500009up7c2dta2bb","_id":"ckfpo9bae00039up70gw2dylx"},{"name":"github action","parent":"ckfpo9ba500009up7c2dta2bb","_id":"ckfpo9baf00059up7d95vhxkm"},{"name":"Docker","_id":"ckfpoi5fn0000odp7emgh2xl4"},{"name":"Something","_id":"ckfpp9vzh0001ujp7bv229ks5"},{"name":"Frp","parent":"ckf6gww9b0002zop71sjp7sbj","_id":"ckfpphzlk00009sp785w6dyoo"},{"name":"前端","_id":"ckfpphzlp00019sp7gyogcwqn"},{"name":"responsive","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"ckfpphzlq00049sp7c71ca5wc"},{"name":"error","parent":"ckfpoi5fn0000odp7emgh2xl4","_id":"ckfpy597o00009kp783is9xij"},{"name":"webhook","parent":"ckfpo9ba500009up7c2dta2bb","_id":"ckfpy765r0000cxp7fnx403vt"},{"name":"travis","parent":"ckfpo9ba500009up7c2dta2bb","_id":"ckfpy765y0001cxp7149chrx0"},{"name":"action","parent":"ckfpo9ba500009up7c2dta2bb","_id":"ckfpy765z0003cxp714u2fky8"},{"name":"gitea","parent":"ckf74sjd700010vp7execfh66","_id":"ckfvhvcfs00056pp78k1w3a79"},{"name":"Mac","_id":"ckfvhvcfv00086pp73osd1izt"},{"name":"mongoDB","_id":"ckfvhvcfw000b6pp7h797cih4"},{"name":"Mark","_id":"ckfvyzj2o0000dfp79pkhf9cm"},{"name":"数据库","_id":"ckfvyzj2z0001dfp78zldcrh5"},{"name":"mongoDB","parent":"ckfvyzj2z0001dfp78zldcrh5","_id":"ckfvyzj300004dfp74rtj22x5"},{"name":"gitea","parent":"ckfpoi5fn0000odp7emgh2xl4","_id":"ckfvzohva000amnp7fjdwejtr"},{"name":"DB","_id":"ckfvzv0ki0001zjp763ik3xth"},{"name":"Diy","_id":"ckfvzv0kr0007zjp7hg1s8g20"},{"name":"Git","_id":"ckfvzv0kt000ezjp7dprmedh5"},{"name":"mongoDB","parent":"ckfvzv0ki0001zjp763ik3xth","_id":"ckfvzv0kx000lzjp753663erl"},{"name":"js","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"ckgktmr63000aibp71i4t9jpr"},{"name":"vue","parent":"ckgktmr63000aibp71i4t9jpr","_id":"ckhisipvn0006h0p7hcjmc5kq"},{"name":"npm","parent":"ckhisipvn0006h0p7hcjmc5kq","_id":"ckhisipvo000ch0p720uz27hv"},{"name":"vue","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"cki016ndd0000kevtf65j2vmj"},{"name":"npm","parent":"cki016ndd0000kevtf65j2vmj","_id":"cki016ndn0001kevtfjjehgaz"},{"name":"npm","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qd2om00004lvt2aof2gap"},{"name":"CI/CD","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qxv6b000yrtvtfum69ud9"},{"name":"useless","_id":"cki0r3g1d00006gvtefg4hsln"},{"name":"css","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0r3g1y00076gvt1g6qdniz"},{"name":"node","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"cki7kckbm0001auvta8pgbrew"},{"name":"js","_id":"ckm4gt4cw000124le5s0i5qe9"},{"name":"分类","_id":"ckm4h6wze0007mele7tat0fq3"},{"name":"分类","parent":"ckm4h6wze0007mele7tat0fq3","_id":"ckm4h6wzu000kmeleafxse4cz"},{"name":"mongodb","parent":"ckfvzv0ki0001zjp763ik3xth","_id":"ckm4i2tw30003dmlego8qdv41"},{"name":"mark","_id":"ckm4i2twy000udmleh0s61mwi"},{"name":"html","parent":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4i2tx30015dmlegfn457gm"},{"name":"proxy","parent":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2tx6001bdmle5qcl5k76"},{"name":"error","parent":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2tx9001idmlec61l09xh"},{"name":"docker","parent":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txb001ndmle73yjg63a"},{"name":"git","parent":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txb001sdmle4uya1nup"},{"name":"md","parent":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txf0020dmle2foxgun6"},{"name":"快捷键","parent":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i3u6w0002i4le7fy6h2nn"}],"Data":[],"Page":[{"_content":"{% raw %}\n\n\n\n<div class=\"nihao\" style=\"display:flex;\"  >nihao</div>\n\n\n{% endraw %}","source":"about/index.md","raw":"{% raw %}\n\n\n\n<div class=\"nihao\" style=\"display:flex;\"  >nihao</div>\n\n\n{% endraw %}","date":"2020-09-17T06:48:36.974Z","updated":"2020-09-17T06:48:36.972Z","path":"about/index.html","title":"","comments":1,"layout":"page","_id":"ckf6gdlc50000d1p736xe4b4q","content":"\n\n\n\n<div class=\"nihao\" style=\"display:flex;\"  >nihao</div>\n\n\n","site":{"data":{}},"cover":null,"excerpt":"","more":"\n\n\n\n<div class=\"nihao\" style=\"display:flex;\"  >nihao</div>\n\n\n"},{"title":"分類","date":"2018-01-04T16:00:00.000Z","type":"categories","comments":0,"_content":"\n\n","source":"categories/index.md","raw":"---\ntitle: 分類\ndate: 2018-01-05 00:00:00\ntype: \"categories\"\ncomments: false\n---\n\n\n","updated":"2020-09-17T07:18:36.261Z","path":"categories/index.html","_id":"ckf6gdlc70001d1p7bm1uezkz","layout":"page","content":"","site":{"data":{}},"cover":"https://picgo.genji.xyz/blog/bg/hardcoding5.png","excerpt":"","more":""},{"title":"留言","date":"2020-01-01T14:17:49.000Z","type":"comment","_content":"\n## 富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善","source":"comment/index.md","raw":"---\ntitle: 留言\ndate: 2020-01-01 22:17:49\ntype: \"comment\"\n---\n\n## 富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善","updated":"2020-09-30T21:14:40.528Z","path":"comment/index.html","_id":"ckf6gdlc80002d1p7bxyh2ueh","comments":1,"layout":"page","content":"<h2 id=\"富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善\"><a href=\"#富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善\" class=\"headerlink\" title=\"富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善\"></a>富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善</h2>","site":{"data":{}},"cover":"https://picgo.genji.xyz/blog/bg/hardcoding4.png","excerpt":"","more":"<h2 id=\"富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善\"><a href=\"#富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善\" class=\"headerlink\" title=\"富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善\"></a>富强、民主、文明、和谐、自由、平等、公正、法治、爱国、敬业、诚信、友善</h2>"},{"title":"標籤","date":"2018-01-04T16:00:00.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 標籤\ndate: 2018-01-05 00:00:00\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-09-17T13:03:43.000Z","path":"tags/index.html","_id":"ckf6gdlc90004d1p73gpi1719","layout":"page","content":"","site":{"data":{}},"cover":"https://picgo.genji.xyz/blog/bg/hardcoding1.png","excerpt":"","more":""},{"title":"图","date":"2020-01-01T14:17:49.000Z","type":"photo","_content":"\n![](https://picgo.genji.xyz/blog/photo/XAYG9079.jpg)\n\n\n\n![](https://picgo.genji.xyz/blog/photo/WechatIMG18.jpeg)\n\n\n\n\n\n","source":"photo/index.md","raw":"---\ntitle: 图\ndate: 2020-01-01 22:17:49\ntype: \"photo\"\n---\n\n![](https://picgo.genji.xyz/blog/photo/XAYG9079.jpg)\n\n\n\n![](https://picgo.genji.xyz/blog/photo/WechatIMG18.jpeg)\n\n\n\n\n\n","updated":"2021-03-11T07:27:16.073Z","path":"photo/index.html","_id":"ckm4j9rih0000idleho8o5ydb","comments":1,"layout":"page","content":"<p><img src=\"https://picgo.genji.xyz/blog/photo/XAYG9079.jpg\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/photo/WechatIMG18.jpeg\"></p>\n","site":{"data":{}},"cover":"https://picgo.genji.xyz/blog/bg/hardcoding2.png","excerpt":"","more":"<p><img src=\"https://picgo.genji.xyz/blog/photo/XAYG9079.jpg\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/photo/WechatIMG18.jpeg\"></p>\n"}],"Post":[{"_content":"{% note info  no-icon %}\n\nArray很多方法经常用,自以为很熟悉了.\n\n今天抽空,每个都去`MDN`再看下一边. 简单对比下.\n\n{%endnote%}\n\n|       方法/属性       |                   参数                    |         返回值          | 是否改变原数组 | call apply |                            tip                            |\n| :-------------------: | :---------------------------------------: | :---------------------: | :------------: | :--------: | :-------------------------------------------------------: |\n|       \\.lenght        |                     ❌                     |   无符号 32\\-bit 整数   |       ✅        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.push\\(\\)       |                 Element…                  |      新数组length       |       ✅        |     ✅      |                                                           |\n|     \\.unshfit\\(\\)     |                 Element…                  |      新数组length       |       ✅        |     ✅      | `arr.unshift([1,2])`和`arr.unshift(1) arr.unshift(2)`不同 |\n|                       |                                           |                         |                |            |                                                           |\n|       \\.pop\\(\\)       |                     ❌                     |      被移除的元素       |       ✅        |     ✅      |                 数组为空则返回 undefined                  |\n|      \\.shift\\(\\)      |                     ❌                     |      被移除的元素       |       ✅        |     ✅      |                 数组为空则返回 undefined                  |\n|                       |                                           |                         |                |            |                                                           |\n| Array\\.isArray\\(obj\\) |               要检测的对象                |           T/F           |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|     \\.concat\\(\\)      |               Element\\.\\.\\.               |         新数组          |       ❌        |            |                          浅拷贝                           |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.slice\\(\\)      |               \\[start,end\\)               |         新数组          |       ❌        |            |                                                           |\n|     \\.splice\\(\\)      |      start,deleteCount,item\\.\\.\\.\\.       |      执行后的数组       |       ✅        |            |                                                           |\n|      \\.join\\(\\)       |                 分隔元素                  |         字符串          |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|    \\.includes\\(\\)     |             e,fromIndex \\|\\|0             |           T/F           |                |            |                                                           |\n|     \\.indexOf\\(\\)     |             e,fromIndex \\|\\|0             |     Index \\|\\| \\-1      |                |            |                        第一个符合                         |\n|   \\.lastIndexOf\\(\\)   |             e,fromIndex \\|\\|0             |     Index \\|\\| \\-1      |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.find\\(\\)       |        \\(curE,index,arr\\),thisArg         | element \\|\\| undefinded |                |            |                        第一个符合                         |\n|    \\.findIndex\\(\\)    |        \\(curE,index,arr\\),thisArg         |     Index \\|\\| \\-1      |                |            |                        第一个符合                         |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.every\\(\\)      |        \\(curE,index,arr\\),thisArg         |           T/F           |       ❌        |            |                     [].every() = true                     |\n|      \\.some\\(\\)       |        \\(curE,index,arr\\),thisArg         |           T/F           |       ❌        |            |                     [].some() = false                     |\n|     \\.forEach\\(\\)     |        \\(curE,index,arr\\),thisArg         |       undefinded        |       ❌        |            |                                                           |\n|       \\.filter        |        \\(curE,index,arr\\),thisArg         |         新数组          |       ❌        |            |                                                           |\n|         .map          |        \\(curE,index,arr\\),thisArg         |         新数组          |       ❌        |            |                                                           |\n|     \\.reduce\\(\\)      |    \\(acc,cur,index,arr\\),initialValue     |       执行后结果        |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|        \\.sort         |             firstEl,secondEl              |      执行后的数组       |       ✅        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|     \\.reverse\\(\\)     |                     ❌                     |      执行后的数组       |       ✅        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|     \\.entries\\(\\)     |                     ❌                     |        Iterator         |       ❌        |            |                                                           |\n|      \\.keys\\(\\)       |                     ❌                     |        Iterator         |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|   \\.copyWithin\\(\\)    | target ,\\[star \\|\\|0,end\\|\\|arr\\.length\\) |         新数组          |  ✅不改变长度   |            |                          浅拷贝                           |\n|      \\.fill\\(\\)       | value ,\\[star \\|\\|0,end\\|\\|arr\\.length\\)  |         新数组          |  ✅不改变长度   |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n| \\.toLocaleString\\(\\)  |                                           |                         |                |            |                                                           |\n\n\n\n","source":"_posts/表格.md","raw":"{% note info  no-icon %}\n\nArray很多方法经常用,自以为很熟悉了.\n\n今天抽空,每个都去`MDN`再看下一边. 简单对比下.\n\n{%endnote%}\n\n|       方法/属性       |                   参数                    |         返回值          | 是否改变原数组 | call apply |                            tip                            |\n| :-------------------: | :---------------------------------------: | :---------------------: | :------------: | :--------: | :-------------------------------------------------------: |\n|       \\.lenght        |                     ❌                     |   无符号 32\\-bit 整数   |       ✅        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.push\\(\\)       |                 Element…                  |      新数组length       |       ✅        |     ✅      |                                                           |\n|     \\.unshfit\\(\\)     |                 Element…                  |      新数组length       |       ✅        |     ✅      | `arr.unshift([1,2])`和`arr.unshift(1) arr.unshift(2)`不同 |\n|                       |                                           |                         |                |            |                                                           |\n|       \\.pop\\(\\)       |                     ❌                     |      被移除的元素       |       ✅        |     ✅      |                 数组为空则返回 undefined                  |\n|      \\.shift\\(\\)      |                     ❌                     |      被移除的元素       |       ✅        |     ✅      |                 数组为空则返回 undefined                  |\n|                       |                                           |                         |                |            |                                                           |\n| Array\\.isArray\\(obj\\) |               要检测的对象                |           T/F           |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|     \\.concat\\(\\)      |               Element\\.\\.\\.               |         新数组          |       ❌        |            |                          浅拷贝                           |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.slice\\(\\)      |               \\[start,end\\)               |         新数组          |       ❌        |            |                                                           |\n|     \\.splice\\(\\)      |      start,deleteCount,item\\.\\.\\.\\.       |      执行后的数组       |       ✅        |            |                                                           |\n|      \\.join\\(\\)       |                 分隔元素                  |         字符串          |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|    \\.includes\\(\\)     |             e,fromIndex \\|\\|0             |           T/F           |                |            |                                                           |\n|     \\.indexOf\\(\\)     |             e,fromIndex \\|\\|0             |     Index \\|\\| \\-1      |                |            |                        第一个符合                         |\n|   \\.lastIndexOf\\(\\)   |             e,fromIndex \\|\\|0             |     Index \\|\\| \\-1      |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.find\\(\\)       |        \\(curE,index,arr\\),thisArg         | element \\|\\| undefinded |                |            |                        第一个符合                         |\n|    \\.findIndex\\(\\)    |        \\(curE,index,arr\\),thisArg         |     Index \\|\\| \\-1      |                |            |                        第一个符合                         |\n|                       |                                           |                         |                |            |                                                           |\n|      \\.every\\(\\)      |        \\(curE,index,arr\\),thisArg         |           T/F           |       ❌        |            |                     [].every() = true                     |\n|      \\.some\\(\\)       |        \\(curE,index,arr\\),thisArg         |           T/F           |       ❌        |            |                     [].some() = false                     |\n|     \\.forEach\\(\\)     |        \\(curE,index,arr\\),thisArg         |       undefinded        |       ❌        |            |                                                           |\n|       \\.filter        |        \\(curE,index,arr\\),thisArg         |         新数组          |       ❌        |            |                                                           |\n|         .map          |        \\(curE,index,arr\\),thisArg         |         新数组          |       ❌        |            |                                                           |\n|     \\.reduce\\(\\)      |    \\(acc,cur,index,arr\\),initialValue     |       执行后结果        |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|        \\.sort         |             firstEl,secondEl              |      执行后的数组       |       ✅        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|     \\.reverse\\(\\)     |                     ❌                     |      执行后的数组       |       ✅        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|     \\.entries\\(\\)     |                     ❌                     |        Iterator         |       ❌        |            |                                                           |\n|      \\.keys\\(\\)       |                     ❌                     |        Iterator         |       ❌        |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|   \\.copyWithin\\(\\)    | target ,\\[star \\|\\|0,end\\|\\|arr\\.length\\) |         新数组          |  ✅不改变长度   |            |                          浅拷贝                           |\n|      \\.fill\\(\\)       | value ,\\[star \\|\\|0,end\\|\\|arr\\.length\\)  |         新数组          |  ✅不改变长度   |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n|                       |                                           |                         |                |            |                                                           |\n| \\.toLocaleString\\(\\)  |                                           |                         |                |            |                                                           |\n\n\n\n","slug":"表格","published":1,"date":"2020-10-23T16:28:20.352Z","updated":"2020-10-25T11:20:38.050Z","_id":"ckgovbiq900086wp7dhsnhac7","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<div class=\"note info no-icon flat\"><p>Array很多方法经常用,自以为很熟悉了.</p>\n<p>今天抽空,每个都去<code>MDN</code>再看下一边. 简单对比下.</p>\n</div>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法/属性</th>\n<th align=\"center\">参数</th>\n<th align=\"center\">返回值</th>\n<th align=\"center\">是否改变原数组</th>\n<th align=\"center\">call apply</th>\n<th align=\"center\">tip</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">.lenght</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">无符号 32-bit 整数</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.push()</td>\n<td align=\"center\">Element…</td>\n<td align=\"center\">新数组length</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.unshfit()</td>\n<td align=\"center\">Element…</td>\n<td align=\"center\">新数组length</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"><code>arr.unshift([1,2])</code>和<code>arr.unshift(1) arr.unshift(2)</code>不同</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.pop()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">被移除的元素</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">数组为空则返回 undefined</td>\n</tr>\n<tr>\n<td align=\"center\">.shift()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">被移除的元素</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">数组为空则返回 undefined</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">Array.isArray(obj)</td>\n<td align=\"center\">要检测的对象</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.concat()</td>\n<td align=\"center\">Element...</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\">浅拷贝</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.slice()</td>\n<td align=\"center\">[start,end)</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.splice()</td>\n<td align=\"center\">start,deleteCount,item....</td>\n<td align=\"center\">执行后的数组</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.join()</td>\n<td align=\"center\">分隔元素</td>\n<td align=\"center\">字符串</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.includes()</td>\n<td align=\"center\">e,fromIndex ||0</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.indexOf()</td>\n<td align=\"center\">e,fromIndex ||0</td>\n<td align=\"center\">Index || -1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">第一个符合</td>\n</tr>\n<tr>\n<td align=\"center\">.lastIndexOf()</td>\n<td align=\"center\">e,fromIndex ||0</td>\n<td align=\"center\">Index || -1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.find()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">element || undefinded</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">第一个符合</td>\n</tr>\n<tr>\n<td align=\"center\">.findIndex()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">Index || -1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">第一个符合</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.every()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\">[].every() = true</td>\n</tr>\n<tr>\n<td align=\"center\">.some()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\">[].some() = false</td>\n</tr>\n<tr>\n<td align=\"center\">.forEach()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">undefinded</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.filter</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.map</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.reduce()</td>\n<td align=\"center\">(acc,cur,index,arr),initialValue</td>\n<td align=\"center\">执行后结果</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.sort</td>\n<td align=\"center\">firstEl,secondEl</td>\n<td align=\"center\">执行后的数组</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.reverse()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">执行后的数组</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.entries()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">Iterator</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.keys()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">Iterator</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.copyWithin()</td>\n<td align=\"center\">target ,[star ||0,end||arr.length)</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">✅不改变长度</td>\n<td align=\"center\"></td>\n<td align=\"center\">浅拷贝</td>\n</tr>\n<tr>\n<td align=\"center\">.fill()</td>\n<td align=\"center\">value ,[star ||0,end||arr.length)</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">✅不改变长度</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.toLocaleString()</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"cover":"https://picgo.genji.xyz/blog/bg/hardcoding5.png","excerpt":"","more":"<div class=\"note info no-icon flat\"><p>Array很多方法经常用,自以为很熟悉了.</p>\n<p>今天抽空,每个都去<code>MDN</code>再看下一边. 简单对比下.</p>\n</div>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">方法/属性</th>\n<th align=\"center\">参数</th>\n<th align=\"center\">返回值</th>\n<th align=\"center\">是否改变原数组</th>\n<th align=\"center\">call apply</th>\n<th align=\"center\">tip</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">.lenght</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">无符号 32-bit 整数</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.push()</td>\n<td align=\"center\">Element…</td>\n<td align=\"center\">新数组length</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.unshfit()</td>\n<td align=\"center\">Element…</td>\n<td align=\"center\">新数组length</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"><code>arr.unshift([1,2])</code>和<code>arr.unshift(1) arr.unshift(2)</code>不同</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.pop()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">被移除的元素</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">数组为空则返回 undefined</td>\n</tr>\n<tr>\n<td align=\"center\">.shift()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">被移除的元素</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">✅</td>\n<td align=\"center\">数组为空则返回 undefined</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">Array.isArray(obj)</td>\n<td align=\"center\">要检测的对象</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.concat()</td>\n<td align=\"center\">Element...</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\">浅拷贝</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.slice()</td>\n<td align=\"center\">[start,end)</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.splice()</td>\n<td align=\"center\">start,deleteCount,item....</td>\n<td align=\"center\">执行后的数组</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.join()</td>\n<td align=\"center\">分隔元素</td>\n<td align=\"center\">字符串</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.includes()</td>\n<td align=\"center\">e,fromIndex ||0</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.indexOf()</td>\n<td align=\"center\">e,fromIndex ||0</td>\n<td align=\"center\">Index || -1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">第一个符合</td>\n</tr>\n<tr>\n<td align=\"center\">.lastIndexOf()</td>\n<td align=\"center\">e,fromIndex ||0</td>\n<td align=\"center\">Index || -1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.find()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">element || undefinded</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">第一个符合</td>\n</tr>\n<tr>\n<td align=\"center\">.findIndex()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">Index || -1</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\">第一个符合</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.every()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\">[].every() = true</td>\n</tr>\n<tr>\n<td align=\"center\">.some()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">T/F</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\">[].some() = false</td>\n</tr>\n<tr>\n<td align=\"center\">.forEach()</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">undefinded</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.filter</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.map</td>\n<td align=\"center\">(curE,index,arr),thisArg</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.reduce()</td>\n<td align=\"center\">(acc,cur,index,arr),initialValue</td>\n<td align=\"center\">执行后结果</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.sort</td>\n<td align=\"center\">firstEl,secondEl</td>\n<td align=\"center\">执行后的数组</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.reverse()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">执行后的数组</td>\n<td align=\"center\">✅</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.entries()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">Iterator</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.keys()</td>\n<td align=\"center\">❌</td>\n<td align=\"center\">Iterator</td>\n<td align=\"center\">❌</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.copyWithin()</td>\n<td align=\"center\">target ,[star ||0,end||arr.length)</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">✅不改变长度</td>\n<td align=\"center\"></td>\n<td align=\"center\">浅拷贝</td>\n</tr>\n<tr>\n<td align=\"center\">.fill()</td>\n<td align=\"center\">value ,[star ||0,end||arr.length)</td>\n<td align=\"center\">新数组</td>\n<td align=\"center\">✅不改变长度</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">.toLocaleString()</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n"},{"title":"npm publish一个 vue 组件","date":"2020-10-31T16:00:00.000Z","updated":"2020-11-27T20:59:00.054Z","cover":"https://picgo.genji.xyz/blog/posts/npm.jpg","description":"好久之前就想写一个自己的npm包,但是吧觉得自己菜.先写个vue小组件玩玩","keywords":"npm","_content":"\n## 两种方式包\n\n1.webpack 打包成 js ( 体积小,适用极少的依赖第三方插件)\n\n2.直接 vue 组件 (直观,方便后期改)\n\n{% note info no-icon %}\n\n我这小组件,还在更新中,经常改.( 感觉传入参数 还需要重新设计下!)所以选择第二种方式 .\n\n{% endnote %}\n\n## create hello\n\n```js\nvue create hello  -m npm    // -m 选择   包管理工具\n然后你随便写个你想要的 组件\n```\n\n## 提取组件/添加入口文件\n\n![image-20201115145749248](https://picgo.genji.xyz/blog/posts/image-20201115145749248.png)\n\n创建个lib 文件夹 在src同级,将`components` 复制粘贴 \n\n![image-20201115150045695](https://picgo.genji.xyz/blog/posts/image-20201115150045695.png)\n\n在lib目录下 创建index.js  入口文件\n\n[要暴露install 方法 :官方文档](https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6)\n\n第一个参数是 `Vue` 构造器，第二个参数是一个可选的选项对象.\n\n{% tabs info  %}\n<!-- tab 单组件-->\n\n```js\n //  lib/index.js\nimport parallaxBanner from './components/parallaxBanner'\n\nparallaxBanner.install = function(Vue){\n\tVue.component(parallaxBanner.name, parallaxBanner)\n  //这里的parallaxBanner.name 就是你组件里面 定义的name  也可替换成任意 \"str\"\n  }\n export default parallaxBanner\n```\n\n<!-- endtab -->\n\n<!-- tab  按需引入-->\n\n```js\n//  按需引入 就是搞个对象出去 然后  import {a} = {a,b}\nlet ModuleObj = {\n    ComponentA,\n    ComponentB\n}\nlet MyModule = {}\nMyModule.install = (Vue) => {\n    for (let i in ModuleObj) {\n        Vue.component(i, ModuleObj[i])\n    }\n}\nexport default MyModule\n```\n\n<!-- endtab -->\n\n<!-- tab antd-->\n\n** 见文章末尾 其他 ** \n\n<!-- endtab -->\n{% endtabs %}\n\n\n\n\n\n\n\n\n\n## package.json\n\n```json\n{\n  \"name\": \"vue-parallax-banner\",   // name required\n  \"version\": \"0.0.67\",     // 版本号  每次publish的版本一定要不同 required\n  \"private\": false,        // 公开/私人 required\n  \"author\": \"genjixyz\",    // 作者   required\n  \"main\": \"lib/index.js\",  // 入口文件  required\n  \"files\": [\"lib\"],        // 白名单   \n  \"license\":\"MIT\",  //开源协议\n  \"repository\": {    //repo\n    \"type\": \"git\",\n    \"url\": \"https://github.com/genjiXYZ/vue-parallax-banner\"\n  },\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"^3.6.5\",\n    \"vue\": \"^2.6.11\",\n    \"vue-parallax-banner\": \"0.0.63\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"~4.5.0\",\n    \"@vue/cli-service\": \"~4.5.0\",\n    \"vue-template-compiler\": \"^2.6.11\"\n  },\n  \"browserslist\": [\n    \"> 1%\",\n    \"last 2 versions\",\n    \"not dead\"\n  ]\n}\n\n```\n\n\n\n## npm publish\n\n\n\n{% tabs test3 %}\n<!-- tab 1.npm 源 -->\n\n确认你的 npm 源 ,想要在哪个源发布就用哪个.\n   ```zsh\n      ❯ npm config list  \n      // metrics-registry = \"https://registry.npm.taobao.org/\"\n      \n      //我这里用的nrm \n      ❯ nrm ls \n      \n        npm -------- https://registry.npmjs.org/\n        yarn ------- https://registry.yarnpkg.com/\n        cnpm ------- http://r.cnpmjs.org/\n      * taobao ----- https://registry.npm.taobao.org/\n        nj --------- https://registry.nodejitsu.com/\n        npmMirror -- https://skimdb.npmjs.com/registry/\n        edunpm ----- http://registry.enpmjs.org/\n        \n      ❯ nrm use npm\n         Registry has been set to: https://registry.npmjs.org/\n   ```\n\n<!-- endtab -->\n\n<!-- tab 2.npm login -->\n 登录\n ```zsh\n   ❯  npm login\n   Username: genji.xyz\n   Password:\n   Email: (this IS public) 895939059@qq.com\n   Logged in as genji.xyz on https://registry.npmjs.org/.\n   \n   // 这里可能有很多报错  我遇到了这些 =_=!\n   ---------------------\n   npm ERR! 402 Payment Required - PUT http://registry.npmjs.org/@genji%2fparallax-banner - You must sign up for private packages \n   \n   //package.json 中 \"private\": false,    因为你没花钱 不能用私人包\n   \n   ---------------------\n   npm ERR! code E404\n   npm ERR! 404 Not Found - PUT https://registry.npmjs.org/genji-parallax-banner - Not found\n   npm ERR! 404 \n   npm ERR! 404  'genji-parallax-banner@0.0.1' is not in the npm registry.\n   npm ERR! 404 You should bug the author to publish it (or use the name yourself!)\n   npm ERR! 404 \n   \n   //我没有验证邮箱,  好多都报错404 问题都不一样\n   \n   ---------------------\n   npm ERR! code E403\n   npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/genji-parallax-banner - Forbidden\n   npm ERR! 403 In most cases, you or one of your dependencies are requesting\n   npm ERR! 403 a package version that is forbidden by your security policy.\n   // npm 包名字不能重复\n   \n   ---------------------\n   npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/vue-paralax-banner - vue-paralax-banner cannot be republished until 24 hours have passed.\n   \n   //删除后 24 小时后 才能发布 相同名字的package\n ```\n<!-- endtab -->\n\n<!-- tab 3.npm pack / npm publish -->\npack publish\n   ```zsh\n   npm pack // 本地生成一个压缩包  解压引入 测试用\n   npm publish  //发布\n   ```\n\n<!-- endtab -->\n{% endtabs %}\n\n## 其他\n\n#### 随手记录下antd 的 `dependencies` 有好用的 以后可以用.\n\n```json\n\"dependencies\": {\n    \"@ant-design/icons\": \"^2.1.1\",\n    \"@ant-design/icons-vue\": \"^2.0.0\",\n    \"@simonwep/pickr\": \"~1.7.0\",\n    \"add-dom-event-listener\": \"^1.0.2\",\n    \"array-tree-filter\": \"^2.1.0\",\n    \"async-validator\": \"^3.0.3\",\n    \"babel-helper-vue-jsx-merge-props\": \"^2.0.3\",\n    \"babel-runtime\": \"6.x\",\n    \"classnames\": \"^2.2.5\",\n    \"component-classes\": \"^1.2.6\",\n    \"dom-align\": \"^1.10.4\",\n    \"dom-closest\": \"^0.2.0\",\n    \"dom-scroll-into-view\": \"^2.0.0\",\n    \"enquire.js\": \"^2.1.6\",\n    \"intersperse\": \"^1.0.0\",\n    \"is-mobile\": \"^2.2.1\",\n    \"is-negative-zero\": \"^2.0.0\",\n    \"ismobilejs\": \"^1.0.0\",\n    \"json2mq\": \"^0.2.0\",\n    \"lodash\": \"^4.17.5\",\n    \"moment\": \"^2.21.0\",\n    \"mutationobserver-shim\": \"^0.3.2\",\n    \"node-emoji\": \"^1.10.0\",\n    \"omit.js\": \"^1.0.0\",\n    \"raf\": \"^3.4.0\",\n    \"resize-observer-polyfill\": \"^1.5.1\",\n    \"shallow-equal\": \"^1.0.0\",\n    \"shallowequal\": \"^1.0.2\",\n    \"vue-ref\": \"^2.0.0\",\n    \"warning\": \"^4.0.0\"\n  },\n\n    \"chalk\": \"^3.0.0\",\n    \"cheerio\": \"^1.0.0-rc.2\",\n    \"codecov\": \"^3.0.0\",\n    \"colorful\": \"^2.1.0\",\n    \"commander\": \"^4.0.0\",\n    \"compare-versions\": \"^3.3.0\",\n    \"cross-env\": \"^7.0.0\",\n    \"css-loader\": \"^3.0.0\",\n    \"deep-assign\": \"^2.0.0\",\n    \"enquire-js\": \"^0.2.1\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-config-prettier\": \"^6.10.1\",\n    \"eslint-plugin-html\": \"^6.0.0\",\n    \"eslint-plugin-markdown\": \"^2.0.0-alpha.0\",\n    \"eslint-plugin-vue\": \"^6.2.2\",\n    \"fetch-jsonp\": \"^1.1.3\",\n    \"fs-extra\": \"^8.0.0\",\n    \"glob\": \"^7.1.2\",\n    \"gulp\": \"^4.0.1\",\n    \"gulp-babel\": \"^7.0.0\",\n    \"gulp-strip-code\": \"^0.1.4\",\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"husky\": \"^4.0.0\",\n    \"istanbul-instrumenter-loader\": \"^3.0.0\",\n    \"jest\": \"^24.0.0\",\n    \"jest-serializer-vue\": \"^2.0.0\",\n    \"jest-transform-stub\": \"^2.0.0\",\n    \"js-base64\": \"^3.0.0\",\n    \"json-templater\": \"^1.2.0\",\n    \"jsonp\": \"^0.2.1\",\n    \"less\": \"^3.9.0\",\n    \"less-loader\": \"^6.0.0\",\n    \"less-plugin-npm-import\": \"^2.1.0\",\n    \"lint-staged\": \"^10.0.0\",\n    \"marked\": \"0.3.18\",\n    \"merge2\": \"^1.2.1\",\n    \"mini-css-extract-plugin\": \"^0.10.0\",\n    \"minimist\": \"^1.2.0\",\n    \"mkdirp\": \"^0.5.1\",\n    \"mockdate\": \"^2.0.2\",\n    \"nprogress\": \"^0.2.0\",\n    \"optimize-css-assets-webpack-plugin\": \"^5.0.1\",\n    \"postcss\": \"^7.0.6\",\n    \"postcss-loader\": \"^3.0.0\",\n    \"prettier\": \"^1.18.2\",\n    \"pretty-quick\": \"^2.0.0\",\n    \"querystring\": \"^0.2.0\",\n    \"raw-loader\": \"^4.0.0\",\n    \"reqwest\": \"^2.0.5\",\n    \"rimraf\": \"^3.0.0\",\n    \"rucksack-css\": \"^1.0.2\",\n    \"selenium-server\": \"^3.0.1\",\n    \"semver\": \"^7.0.0\",\n    \"style-loader\": \"^1.0.0\",\n    \"stylelint\": \"^13.0.0\",\n    \"stylelint-config-prettier\": \"^8.0.0\",\n    \"stylelint-config-standard\": \"^19.0.0\",\n    \"terser-webpack-plugin\": \"^3.0.3\",\n    \"through2\": \"^3.0.0\",\n    \"url-loader\": \"^3.0.0\",\n    \"vue\": \"^2.6.11\",\n    \"vue-antd-md-loader\": \"^1.1.0\",\n    \"vue-clipboard2\": \"0.3.1\",\n    \"vue-draggable-resizable\": \"^2.1.0\",\n    \"vue-eslint-parser\": \"^7.0.0\",\n    \"vue-i18n\": \"^8.3.2\",\n    \"vue-infinite-scroll\": \"^2.0.2\",\n    \"vue-jest\": \"^2.5.0\",\n    \"vue-loader\": \"^15.6.2\",\n    \"vue-router\": \"^3.0.1\",\n    \"vue-server-renderer\": \"^2.6.11\",\n    \"vue-template-compiler\": \"^2.6.11\",\n    \"vue-virtual-scroller\": \"^1.0.0\",\n    \"vuex\": \"^3.1.0\",\n    \"webpack\": \"^4.28.4\",\n    \"webpack-cli\": \"^3.2.1\",\n    \"webpack-dev-server\": \"^3.1.14\",\n    \"webpack-merge\": \"^4.1.1\",\n    \"webpackbar\": \"^4.0.0\",\n    \"xhr-mock\": \"^2.5.1\"\n```\n\n\n\n\n\n#### antd  入口文件写法   学习下(读书人的事)\n\n```json\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Space = exports.PageHeader ............ = undefined;\n\n\nvar _space = require('./space');\n\nvar _space2 = _interopRequireDefault(_space);\n.\n.\n.\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar ENV = process.env.NODE_ENV;\nif (ENV !== 'production' && ENV !== 'test' && typeof console !== 'undefined' && console.warn && typeof window !== 'undefined') {\n  console.warn('You are using a whole package of antd, ' + 'please use https://www.npmjs.com/package/babel-plugin-import to reduce app bundle size.');\n}\n\nvar components = [_base2['default'], _affix2['default'], _anchor2['default'],...............];\n\nvar install = function install(Vue) {\n  components.map(function (component) {\n    Vue.use(component);\n  });\n  Vue.prototype.$message = _message2['default'];\n  Vue.prototype.$notification = _notification2['default'];\n  Vue.prototype.$info = _modal2['default'].info;\n  Vue.prototype.$success = _modal2['default'].success;\n  Vue.prototype.$error = _modal2['default'].error;\n  Vue.prototype.$warning = _modal2['default'].warning;\n  Vue.prototype.$confirm = _modal2['default'].confirm;\n  Vue.prototype.$destroyAll = _modal2['default'].destroyAll;\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nexports.Base = _base2['default'];\n.\n.\n.\n.\n.\n.\n.\nexports['default'] = {\n  version: _version2['default'],\n  install: install\n};\n```\n\n","source":"_posts/前端/npm/2020-11-15_npm_publish.md","raw":"---\ntitle: npm publish一个 vue 组件 \ndate: 2020-11-01 00:00:00\nupdated:\ncover: https://picgo.genji.xyz/blog/posts/npm.jpg\ndescription: 好久之前就想写一个自己的npm包,但是吧觉得自己菜.先写个vue小组件玩玩\ntags: [npm]\ncategories: [前端,npm]\nkeywords: \"npm\"\n---\n\n## 两种方式包\n\n1.webpack 打包成 js ( 体积小,适用极少的依赖第三方插件)\n\n2.直接 vue 组件 (直观,方便后期改)\n\n{% note info no-icon %}\n\n我这小组件,还在更新中,经常改.( 感觉传入参数 还需要重新设计下!)所以选择第二种方式 .\n\n{% endnote %}\n\n## create hello\n\n```js\nvue create hello  -m npm    // -m 选择   包管理工具\n然后你随便写个你想要的 组件\n```\n\n## 提取组件/添加入口文件\n\n![image-20201115145749248](https://picgo.genji.xyz/blog/posts/image-20201115145749248.png)\n\n创建个lib 文件夹 在src同级,将`components` 复制粘贴 \n\n![image-20201115150045695](https://picgo.genji.xyz/blog/posts/image-20201115150045695.png)\n\n在lib目录下 创建index.js  入口文件\n\n[要暴露install 方法 :官方文档](https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6)\n\n第一个参数是 `Vue` 构造器，第二个参数是一个可选的选项对象.\n\n{% tabs info  %}\n<!-- tab 单组件-->\n\n```js\n //  lib/index.js\nimport parallaxBanner from './components/parallaxBanner'\n\nparallaxBanner.install = function(Vue){\n\tVue.component(parallaxBanner.name, parallaxBanner)\n  //这里的parallaxBanner.name 就是你组件里面 定义的name  也可替换成任意 \"str\"\n  }\n export default parallaxBanner\n```\n\n<!-- endtab -->\n\n<!-- tab  按需引入-->\n\n```js\n//  按需引入 就是搞个对象出去 然后  import {a} = {a,b}\nlet ModuleObj = {\n    ComponentA,\n    ComponentB\n}\nlet MyModule = {}\nMyModule.install = (Vue) => {\n    for (let i in ModuleObj) {\n        Vue.component(i, ModuleObj[i])\n    }\n}\nexport default MyModule\n```\n\n<!-- endtab -->\n\n<!-- tab antd-->\n\n** 见文章末尾 其他 ** \n\n<!-- endtab -->\n{% endtabs %}\n\n\n\n\n\n\n\n\n\n## package.json\n\n```json\n{\n  \"name\": \"vue-parallax-banner\",   // name required\n  \"version\": \"0.0.67\",     // 版本号  每次publish的版本一定要不同 required\n  \"private\": false,        // 公开/私人 required\n  \"author\": \"genjixyz\",    // 作者   required\n  \"main\": \"lib/index.js\",  // 入口文件  required\n  \"files\": [\"lib\"],        // 白名单   \n  \"license\":\"MIT\",  //开源协议\n  \"repository\": {    //repo\n    \"type\": \"git\",\n    \"url\": \"https://github.com/genjiXYZ/vue-parallax-banner\"\n  },\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\"\n  },\n  \"dependencies\": {\n    \"core-js\": \"^3.6.5\",\n    \"vue\": \"^2.6.11\",\n    \"vue-parallax-banner\": \"0.0.63\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"~4.5.0\",\n    \"@vue/cli-service\": \"~4.5.0\",\n    \"vue-template-compiler\": \"^2.6.11\"\n  },\n  \"browserslist\": [\n    \"> 1%\",\n    \"last 2 versions\",\n    \"not dead\"\n  ]\n}\n\n```\n\n\n\n## npm publish\n\n\n\n{% tabs test3 %}\n<!-- tab 1.npm 源 -->\n\n确认你的 npm 源 ,想要在哪个源发布就用哪个.\n   ```zsh\n      ❯ npm config list  \n      // metrics-registry = \"https://registry.npm.taobao.org/\"\n      \n      //我这里用的nrm \n      ❯ nrm ls \n      \n        npm -------- https://registry.npmjs.org/\n        yarn ------- https://registry.yarnpkg.com/\n        cnpm ------- http://r.cnpmjs.org/\n      * taobao ----- https://registry.npm.taobao.org/\n        nj --------- https://registry.nodejitsu.com/\n        npmMirror -- https://skimdb.npmjs.com/registry/\n        edunpm ----- http://registry.enpmjs.org/\n        \n      ❯ nrm use npm\n         Registry has been set to: https://registry.npmjs.org/\n   ```\n\n<!-- endtab -->\n\n<!-- tab 2.npm login -->\n 登录\n ```zsh\n   ❯  npm login\n   Username: genji.xyz\n   Password:\n   Email: (this IS public) 895939059@qq.com\n   Logged in as genji.xyz on https://registry.npmjs.org/.\n   \n   // 这里可能有很多报错  我遇到了这些 =_=!\n   ---------------------\n   npm ERR! 402 Payment Required - PUT http://registry.npmjs.org/@genji%2fparallax-banner - You must sign up for private packages \n   \n   //package.json 中 \"private\": false,    因为你没花钱 不能用私人包\n   \n   ---------------------\n   npm ERR! code E404\n   npm ERR! 404 Not Found - PUT https://registry.npmjs.org/genji-parallax-banner - Not found\n   npm ERR! 404 \n   npm ERR! 404  'genji-parallax-banner@0.0.1' is not in the npm registry.\n   npm ERR! 404 You should bug the author to publish it (or use the name yourself!)\n   npm ERR! 404 \n   \n   //我没有验证邮箱,  好多都报错404 问题都不一样\n   \n   ---------------------\n   npm ERR! code E403\n   npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/genji-parallax-banner - Forbidden\n   npm ERR! 403 In most cases, you or one of your dependencies are requesting\n   npm ERR! 403 a package version that is forbidden by your security policy.\n   // npm 包名字不能重复\n   \n   ---------------------\n   npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/vue-paralax-banner - vue-paralax-banner cannot be republished until 24 hours have passed.\n   \n   //删除后 24 小时后 才能发布 相同名字的package\n ```\n<!-- endtab -->\n\n<!-- tab 3.npm pack / npm publish -->\npack publish\n   ```zsh\n   npm pack // 本地生成一个压缩包  解压引入 测试用\n   npm publish  //发布\n   ```\n\n<!-- endtab -->\n{% endtabs %}\n\n## 其他\n\n#### 随手记录下antd 的 `dependencies` 有好用的 以后可以用.\n\n```json\n\"dependencies\": {\n    \"@ant-design/icons\": \"^2.1.1\",\n    \"@ant-design/icons-vue\": \"^2.0.0\",\n    \"@simonwep/pickr\": \"~1.7.0\",\n    \"add-dom-event-listener\": \"^1.0.2\",\n    \"array-tree-filter\": \"^2.1.0\",\n    \"async-validator\": \"^3.0.3\",\n    \"babel-helper-vue-jsx-merge-props\": \"^2.0.3\",\n    \"babel-runtime\": \"6.x\",\n    \"classnames\": \"^2.2.5\",\n    \"component-classes\": \"^1.2.6\",\n    \"dom-align\": \"^1.10.4\",\n    \"dom-closest\": \"^0.2.0\",\n    \"dom-scroll-into-view\": \"^2.0.0\",\n    \"enquire.js\": \"^2.1.6\",\n    \"intersperse\": \"^1.0.0\",\n    \"is-mobile\": \"^2.2.1\",\n    \"is-negative-zero\": \"^2.0.0\",\n    \"ismobilejs\": \"^1.0.0\",\n    \"json2mq\": \"^0.2.0\",\n    \"lodash\": \"^4.17.5\",\n    \"moment\": \"^2.21.0\",\n    \"mutationobserver-shim\": \"^0.3.2\",\n    \"node-emoji\": \"^1.10.0\",\n    \"omit.js\": \"^1.0.0\",\n    \"raf\": \"^3.4.0\",\n    \"resize-observer-polyfill\": \"^1.5.1\",\n    \"shallow-equal\": \"^1.0.0\",\n    \"shallowequal\": \"^1.0.2\",\n    \"vue-ref\": \"^2.0.0\",\n    \"warning\": \"^4.0.0\"\n  },\n\n    \"chalk\": \"^3.0.0\",\n    \"cheerio\": \"^1.0.0-rc.2\",\n    \"codecov\": \"^3.0.0\",\n    \"colorful\": \"^2.1.0\",\n    \"commander\": \"^4.0.0\",\n    \"compare-versions\": \"^3.3.0\",\n    \"cross-env\": \"^7.0.0\",\n    \"css-loader\": \"^3.0.0\",\n    \"deep-assign\": \"^2.0.0\",\n    \"enquire-js\": \"^0.2.1\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-config-prettier\": \"^6.10.1\",\n    \"eslint-plugin-html\": \"^6.0.0\",\n    \"eslint-plugin-markdown\": \"^2.0.0-alpha.0\",\n    \"eslint-plugin-vue\": \"^6.2.2\",\n    \"fetch-jsonp\": \"^1.1.3\",\n    \"fs-extra\": \"^8.0.0\",\n    \"glob\": \"^7.1.2\",\n    \"gulp\": \"^4.0.1\",\n    \"gulp-babel\": \"^7.0.0\",\n    \"gulp-strip-code\": \"^0.1.4\",\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"husky\": \"^4.0.0\",\n    \"istanbul-instrumenter-loader\": \"^3.0.0\",\n    \"jest\": \"^24.0.0\",\n    \"jest-serializer-vue\": \"^2.0.0\",\n    \"jest-transform-stub\": \"^2.0.0\",\n    \"js-base64\": \"^3.0.0\",\n    \"json-templater\": \"^1.2.0\",\n    \"jsonp\": \"^0.2.1\",\n    \"less\": \"^3.9.0\",\n    \"less-loader\": \"^6.0.0\",\n    \"less-plugin-npm-import\": \"^2.1.0\",\n    \"lint-staged\": \"^10.0.0\",\n    \"marked\": \"0.3.18\",\n    \"merge2\": \"^1.2.1\",\n    \"mini-css-extract-plugin\": \"^0.10.0\",\n    \"minimist\": \"^1.2.0\",\n    \"mkdirp\": \"^0.5.1\",\n    \"mockdate\": \"^2.0.2\",\n    \"nprogress\": \"^0.2.0\",\n    \"optimize-css-assets-webpack-plugin\": \"^5.0.1\",\n    \"postcss\": \"^7.0.6\",\n    \"postcss-loader\": \"^3.0.0\",\n    \"prettier\": \"^1.18.2\",\n    \"pretty-quick\": \"^2.0.0\",\n    \"querystring\": \"^0.2.0\",\n    \"raw-loader\": \"^4.0.0\",\n    \"reqwest\": \"^2.0.5\",\n    \"rimraf\": \"^3.0.0\",\n    \"rucksack-css\": \"^1.0.2\",\n    \"selenium-server\": \"^3.0.1\",\n    \"semver\": \"^7.0.0\",\n    \"style-loader\": \"^1.0.0\",\n    \"stylelint\": \"^13.0.0\",\n    \"stylelint-config-prettier\": \"^8.0.0\",\n    \"stylelint-config-standard\": \"^19.0.0\",\n    \"terser-webpack-plugin\": \"^3.0.3\",\n    \"through2\": \"^3.0.0\",\n    \"url-loader\": \"^3.0.0\",\n    \"vue\": \"^2.6.11\",\n    \"vue-antd-md-loader\": \"^1.1.0\",\n    \"vue-clipboard2\": \"0.3.1\",\n    \"vue-draggable-resizable\": \"^2.1.0\",\n    \"vue-eslint-parser\": \"^7.0.0\",\n    \"vue-i18n\": \"^8.3.2\",\n    \"vue-infinite-scroll\": \"^2.0.2\",\n    \"vue-jest\": \"^2.5.0\",\n    \"vue-loader\": \"^15.6.2\",\n    \"vue-router\": \"^3.0.1\",\n    \"vue-server-renderer\": \"^2.6.11\",\n    \"vue-template-compiler\": \"^2.6.11\",\n    \"vue-virtual-scroller\": \"^1.0.0\",\n    \"vuex\": \"^3.1.0\",\n    \"webpack\": \"^4.28.4\",\n    \"webpack-cli\": \"^3.2.1\",\n    \"webpack-dev-server\": \"^3.1.14\",\n    \"webpack-merge\": \"^4.1.1\",\n    \"webpackbar\": \"^4.0.0\",\n    \"xhr-mock\": \"^2.5.1\"\n```\n\n\n\n\n\n#### antd  入口文件写法   学习下(读书人的事)\n\n```json\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Space = exports.PageHeader ............ = undefined;\n\n\nvar _space = require('./space');\n\nvar _space2 = _interopRequireDefault(_space);\n.\n.\n.\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar ENV = process.env.NODE_ENV;\nif (ENV !== 'production' && ENV !== 'test' && typeof console !== 'undefined' && console.warn && typeof window !== 'undefined') {\n  console.warn('You are using a whole package of antd, ' + 'please use https://www.npmjs.com/package/babel-plugin-import to reduce app bundle size.');\n}\n\nvar components = [_base2['default'], _affix2['default'], _anchor2['default'],...............];\n\nvar install = function install(Vue) {\n  components.map(function (component) {\n    Vue.use(component);\n  });\n  Vue.prototype.$message = _message2['default'];\n  Vue.prototype.$notification = _notification2['default'];\n  Vue.prototype.$info = _modal2['default'].info;\n  Vue.prototype.$success = _modal2['default'].success;\n  Vue.prototype.$error = _modal2['default'].error;\n  Vue.prototype.$warning = _modal2['default'].warning;\n  Vue.prototype.$confirm = _modal2['default'].confirm;\n  Vue.prototype.$destroyAll = _modal2['default'].destroyAll;\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nexports.Base = _base2['default'];\n.\n.\n.\n.\n.\n.\n.\nexports['default'] = {\n  version: _version2['default'],\n  install: install\n};\n```\n\n","slug":"前端/npm/2020-11-15_npm_publish","published":1,"_id":"cki0qsrp7000tbnvtbu1kf6wq","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"两种方式包\"><a href=\"#两种方式包\" class=\"headerlink\" title=\"两种方式包\"></a>两种方式包</h2><p>1.webpack 打包成 js ( 体积小,适用极少的依赖第三方插件)</p>\n<p>2.直接 vue 组件 (直观,方便后期改)</p>\n<div class=\"note info no-icon flat\"><p>我这小组件,还在更新中,经常改.( 感觉传入参数 还需要重新设计下!)所以选择第二种方式 .</p>\n</div>\n\n<h2 id=\"create-hello\"><a href=\"#create-hello\" class=\"headerlink\" title=\"create hello\"></a>create hello</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create hello  -m npm    <span class=\"comment\">// -m 选择   包管理工具</span></span><br><span class=\"line\">然后你随便写个你想要的 组件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"提取组件-添加入口文件\"><a href=\"#提取组件-添加入口文件\" class=\"headerlink\" title=\"提取组件/添加入口文件\"></a>提取组件/添加入口文件</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201115145749248.png\" alt=\"image-20201115145749248\"></p>\n<p>创建个lib 文件夹 在src同级,将<code>components</code> 复制粘贴 </p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201115150045695.png\" alt=\"image-20201115150045695\"></p>\n<p>在lib目录下 创建index.js  入口文件</p>\n<p><a href=\"https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6\">要暴露install 方法 :官方文档</a></p>\n<p>第一个参数是 <code>Vue</code> 构造器，第二个参数是一个可选的选项对象.</p>\n<div class=\"tabs\" id=\"info\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#info-1\">单组件</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#info-2\">按需引入</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#info-3\">antd</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"info-1\"><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//  lib/index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> parallaxBanner <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/parallaxBanner&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">parallaxBanner.install = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Vue</span>)</span>&#123;</span><br><span class=\"line\">\tVue.component(parallaxBanner.name, parallaxBanner)</span><br><span class=\"line\">  <span class=\"comment\">//这里的parallaxBanner.name 就是你组件里面 定义的name  也可替换成任意 &quot;str&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> parallaxBanner</span><br></pre></td></tr></table></figure><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"info-2\"><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  按需引入 就是搞个对象出去 然后  import &#123;a&#125; = &#123;a,b&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ModuleObj = &#123;</span><br><span class=\"line\">    ComponentA,</span><br><span class=\"line\">    ComponentB</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> MyModule = &#123;&#125;</span><br><span class=\"line\">MyModule.install = <span class=\"function\">(<span class=\"params\">Vue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> ModuleObj) &#123;</span><br><span class=\"line\">        Vue.component(i, ModuleObj[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> MyModule</span><br></pre></td></tr></table></figure><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"info-3\"><p>** 见文章末尾 其他 ** </p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n\n\n\n\n\n\n\n\n\n<h2 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;vue-parallax-banner&quot;</span>,   <span class=\"comment\">// name required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;0.0.67&quot;</span>,     <span class=\"comment\">// 版本号  每次publish的版本一定要不同 required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;private&quot;</span>: <span class=\"literal\">false</span>,        <span class=\"comment\">// 公开/私人 required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;author&quot;</span>: <span class=\"string\">&quot;genjixyz&quot;</span>,    <span class=\"comment\">// 作者   required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;main&quot;</span>: <span class=\"string\">&quot;lib/index.js&quot;</span>,  <span class=\"comment\">// 入口文件  required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;files&quot;</span>: [<span class=\"string\">&quot;lib&quot;</span>],        <span class=\"comment\">// 白名单   </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;license&quot;</span>:<span class=\"string\">&quot;MIT&quot;</span>,  <span class=\"comment\">//开源协议</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;repository&quot;</span>: &#123;    <span class=\"comment\">//repo</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;git&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;url&quot;</span>: <span class=\"string\">&quot;https://github.com/genjiXYZ/vue-parallax-banner&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;serve&quot;</span>: <span class=\"string\">&quot;vue-cli-service serve&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span>: <span class=\"string\">&quot;vue-cli-service build&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;core-js&quot;</span>: <span class=\"string\">&quot;^3.6.5&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;vue&quot;</span>: <span class=\"string\">&quot;^2.6.11&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;vue-parallax-banner&quot;</span>: <span class=\"string\">&quot;0.0.63&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;devDependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;@vue/cli-plugin-babel&quot;</span>: <span class=\"string\">&quot;~4.5.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;@vue/cli-service&quot;</span>: <span class=\"string\">&quot;~4.5.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;vue-template-compiler&quot;</span>: <span class=\"string\">&quot;^2.6.11&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;browserslist&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;&gt; 1%&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;last 2 versions&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;not dead&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"npm-publish\"><a href=\"#npm-publish\" class=\"headerlink\" title=\"npm publish\"></a>npm publish</h2><div class=\"tabs\" id=\"test3\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#test3-1\">1.npm 源</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test3-2\">2.npm login</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test3-3\">3.npm pack / npm publish</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test3-1\"><p>确认你的 npm 源 ,想要在哪个源发布就用哪个.<br>   <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ npm config list  </span><br><span class=\"line\">// metrics-registry = <span class=\"string\">&quot;https://registry.npm.taobao.org/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">//我这里用的nrm </span><br><span class=\"line\">❯ nrm ls </span><br><span class=\"line\"></span><br><span class=\"line\">  npm -------- https://registry.npmjs.org/</span><br><span class=\"line\">  yarn ------- https://registry.yarnpkg.com/</span><br><span class=\"line\">  cnpm ------- http://r.cnpmjs.org/</span><br><span class=\"line\">* taobao ----- https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj --------- https://registry.nodejitsu.com/</span><br><span class=\"line\">  npmMirror -- https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm ----- http://registry.enpmjs.org/</span><br><span class=\"line\">  </span><br><span class=\"line\">❯ nrm use npm</span><br><span class=\"line\">   Registry has been <span class=\"built_in\">set</span> to: https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test3-2\"><p> 登录<br> <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯  npm login</span><br><span class=\"line\">Username: genji.xyz</span><br><span class=\"line\">Password:</span><br><span class=\"line\">Email: (this IS public) 895939059@qq.com</span><br><span class=\"line\">Logged <span class=\"keyword\">in</span> as genji.xyz on https://registry.npmjs.org/.</span><br><span class=\"line\"></span><br><span class=\"line\">// 这里可能有很多报错  我遇到了这些 =_=!</span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! 402 Payment Required - PUT http://registry.npmjs.org/@genji%2fparallax-banner - You must sign up <span class=\"keyword\">for</span> private packages </span><br><span class=\"line\"></span><br><span class=\"line\">//package.json 中 <span class=\"string\">&quot;private&quot;</span>: <span class=\"literal\">false</span>,    因为你没花钱 不能用私人包</span><br><span class=\"line\"></span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! code E404</span><br><span class=\"line\">npm ERR! 404 Not Found - PUT https://registry.npmjs.org/genji-parallax-banner - Not found</span><br><span class=\"line\">npm ERR! 404 </span><br><span class=\"line\">npm ERR! 404  <span class=\"string\">&#x27;genji-parallax-banner@0.0.1&#x27;</span> is not <span class=\"keyword\">in</span> the npm registry.</span><br><span class=\"line\">npm ERR! 404 You should bug the author to publish it (or use the name yourself!)</span><br><span class=\"line\">npm ERR! 404 </span><br><span class=\"line\"></span><br><span class=\"line\">//我没有验证邮箱,  好多都报错404 问题都不一样</span><br><span class=\"line\"></span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! code E403</span><br><span class=\"line\">npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/genji-parallax-banner - Forbidden</span><br><span class=\"line\">npm ERR! 403 In most cases, you or one of your dependencies are requesting</span><br><span class=\"line\">npm ERR! 403 a package version that is forbidden by your security policy.</span><br><span class=\"line\">// npm 包名字不能重复</span><br><span class=\"line\"></span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/vue-paralax-banner - vue-paralax-banner cannot be republished until 24 hours have passed.</span><br><span class=\"line\"></span><br><span class=\"line\">//删除后 24 小时后 才能发布 相同名字的package</span><br></pre></td></tr></table></figure></p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test3-3\"><p>pack publish<br>   <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm pack // 本地生成一个压缩包  解压引入 测试用</span><br><span class=\"line\">npm publish  //发布</span><br></pre></td></tr></table></figure></p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h4 id=\"随手记录下antd-的-dependencies-有好用的-以后可以用\"><a href=\"#随手记录下antd-的-dependencies-有好用的-以后可以用\" class=\"headerlink\" title=\"随手记录下antd 的 dependencies 有好用的 以后可以用.\"></a>随手记录下antd 的 <code>dependencies</code> 有好用的 以后可以用.</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;@ant-design/icons&quot;: &quot;^2.1.1&quot;,</span><br><span class=\"line\">    &quot;@ant-design/icons-vue&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;@simonwep/pickr&quot;: &quot;~1.7.0&quot;,</span><br><span class=\"line\">    &quot;add-dom-event-listener&quot;: &quot;^1.0.2&quot;,</span><br><span class=\"line\">    &quot;array-tree-filter&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;async-validator&quot;: &quot;^3.0.3&quot;,</span><br><span class=\"line\">    &quot;babel-helper-vue-jsx-merge-props&quot;: &quot;^2.0.3&quot;,</span><br><span class=\"line\">    &quot;babel-runtime&quot;: &quot;6.x&quot;,</span><br><span class=\"line\">    &quot;classnames&quot;: &quot;^2.2.5&quot;,</span><br><span class=\"line\">    &quot;component-classes&quot;: &quot;^1.2.6&quot;,</span><br><span class=\"line\">    &quot;dom-align&quot;: &quot;^1.10.4&quot;,</span><br><span class=\"line\">    &quot;dom-closest&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;dom-scroll-into-view&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;enquire.js&quot;: &quot;^2.1.6&quot;,</span><br><span class=\"line\">    &quot;intersperse&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;is-mobile&quot;: &quot;^2.2.1&quot;,</span><br><span class=\"line\">    &quot;is-negative-zero&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;ismobilejs&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;json2mq&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;lodash&quot;: &quot;^4.17.5&quot;,</span><br><span class=\"line\">    &quot;moment&quot;: &quot;^2.21.0&quot;,</span><br><span class=\"line\">    &quot;mutationobserver-shim&quot;: &quot;^0.3.2&quot;,</span><br><span class=\"line\">    &quot;node-emoji&quot;: &quot;^1.10.0&quot;,</span><br><span class=\"line\">    &quot;omit.js&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;raf&quot;: &quot;^3.4.0&quot;,</span><br><span class=\"line\">    &quot;resize-observer-polyfill&quot;: &quot;^1.5.1&quot;,</span><br><span class=\"line\">    &quot;shallow-equal&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;shallowequal&quot;: &quot;^1.0.2&quot;,</span><br><span class=\"line\">    &quot;vue-ref&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;warning&quot;: &quot;^4.0.0&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;chalk&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;cheerio&quot;: &quot;^1.0.0-rc.2&quot;,</span><br><span class=\"line\">    &quot;codecov&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;colorful&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;commander&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;compare-versions&quot;: &quot;^3.3.0&quot;,</span><br><span class=\"line\">    &quot;cross-env&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;css-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;deep-assign&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;enquire-js&quot;: &quot;^0.2.1&quot;,</span><br><span class=\"line\">    &quot;eslint&quot;: &quot;^6.8.0&quot;,</span><br><span class=\"line\">    &quot;eslint-config-prettier&quot;: &quot;^6.10.1&quot;,</span><br><span class=\"line\">    &quot;eslint-plugin-html&quot;: &quot;^6.0.0&quot;,</span><br><span class=\"line\">    &quot;eslint-plugin-markdown&quot;: &quot;^2.0.0-alpha.0&quot;,</span><br><span class=\"line\">    &quot;eslint-plugin-vue&quot;: &quot;^6.2.2&quot;,</span><br><span class=\"line\">    &quot;fetch-jsonp&quot;: &quot;^1.1.3&quot;,</span><br><span class=\"line\">    &quot;fs-extra&quot;: &quot;^8.0.0&quot;,</span><br><span class=\"line\">    &quot;glob&quot;: &quot;^7.1.2&quot;,</span><br><span class=\"line\">    &quot;gulp&quot;: &quot;^4.0.1&quot;,</span><br><span class=\"line\">    &quot;gulp-babel&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;gulp-strip-code&quot;: &quot;^0.1.4&quot;,</span><br><span class=\"line\">    &quot;html-webpack-plugin&quot;: &quot;^3.2.0&quot;,</span><br><span class=\"line\">    &quot;husky&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;istanbul-instrumenter-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;jest&quot;: &quot;^24.0.0&quot;,</span><br><span class=\"line\">    &quot;jest-serializer-vue&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;jest-transform-stub&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;js-base64&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;json-templater&quot;: &quot;^1.2.0&quot;,</span><br><span class=\"line\">    &quot;jsonp&quot;: &quot;^0.2.1&quot;,</span><br><span class=\"line\">    &quot;less&quot;: &quot;^3.9.0&quot;,</span><br><span class=\"line\">    &quot;less-loader&quot;: &quot;^6.0.0&quot;,</span><br><span class=\"line\">    &quot;less-plugin-npm-import&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;lint-staged&quot;: &quot;^10.0.0&quot;,</span><br><span class=\"line\">    &quot;marked&quot;: &quot;0.3.18&quot;,</span><br><span class=\"line\">    &quot;merge2&quot;: &quot;^1.2.1&quot;,</span><br><span class=\"line\">    &quot;mini-css-extract-plugin&quot;: &quot;^0.10.0&quot;,</span><br><span class=\"line\">    &quot;minimist&quot;: &quot;^1.2.0&quot;,</span><br><span class=\"line\">    &quot;mkdirp&quot;: &quot;^0.5.1&quot;,</span><br><span class=\"line\">    &quot;mockdate&quot;: &quot;^2.0.2&quot;,</span><br><span class=\"line\">    &quot;nprogress&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;optimize-css-assets-webpack-plugin&quot;: &quot;^5.0.1&quot;,</span><br><span class=\"line\">    &quot;postcss&quot;: &quot;^7.0.6&quot;,</span><br><span class=\"line\">    &quot;postcss-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;prettier&quot;: &quot;^1.18.2&quot;,</span><br><span class=\"line\">    &quot;pretty-quick&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;querystring&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;raw-loader&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;reqwest&quot;: &quot;^2.0.5&quot;,</span><br><span class=\"line\">    &quot;rimraf&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;rucksack-css&quot;: &quot;^1.0.2&quot;,</span><br><span class=\"line\">    &quot;selenium-server&quot;: &quot;^3.0.1&quot;,</span><br><span class=\"line\">    &quot;semver&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;style-loader&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;stylelint&quot;: &quot;^13.0.0&quot;,</span><br><span class=\"line\">    &quot;stylelint-config-prettier&quot;: &quot;^8.0.0&quot;,</span><br><span class=\"line\">    &quot;stylelint-config-standard&quot;: &quot;^19.0.0&quot;,</span><br><span class=\"line\">    &quot;terser-webpack-plugin&quot;: &quot;^3.0.3&quot;,</span><br><span class=\"line\">    &quot;through2&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;url-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;vue&quot;: &quot;^2.6.11&quot;,</span><br><span class=\"line\">    &quot;vue-antd-md-loader&quot;: &quot;^1.1.0&quot;,</span><br><span class=\"line\">    &quot;vue-clipboard2&quot;: &quot;0.3.1&quot;,</span><br><span class=\"line\">    &quot;vue-draggable-resizable&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;vue-eslint-parser&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;vue-i18n&quot;: &quot;^8.3.2&quot;,</span><br><span class=\"line\">    &quot;vue-infinite-scroll&quot;: &quot;^2.0.2&quot;,</span><br><span class=\"line\">    &quot;vue-jest&quot;: &quot;^2.5.0&quot;,</span><br><span class=\"line\">    &quot;vue-loader&quot;: &quot;^15.6.2&quot;,</span><br><span class=\"line\">    &quot;vue-router&quot;: &quot;^3.0.1&quot;,</span><br><span class=\"line\">    &quot;vue-server-renderer&quot;: &quot;^2.6.11&quot;,</span><br><span class=\"line\">    &quot;vue-template-compiler&quot;: &quot;^2.6.11&quot;,</span><br><span class=\"line\">    &quot;vue-virtual-scroller&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;vuex&quot;: &quot;^3.1.0&quot;,</span><br><span class=\"line\">    &quot;webpack&quot;: &quot;^4.28.4&quot;,</span><br><span class=\"line\">    &quot;webpack-cli&quot;: &quot;^3.2.1&quot;,</span><br><span class=\"line\">    &quot;webpack-dev-server&quot;: &quot;^3.1.14&quot;,</span><br><span class=\"line\">    &quot;webpack-merge&quot;: &quot;^4.1.1&quot;,</span><br><span class=\"line\">    &quot;webpackbar&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;xhr-mock&quot;: &quot;^2.5.1&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"antd-入口文件写法-学习下-读书人的事\"><a href=\"#antd-入口文件写法-学习下-读书人的事\" class=\"headerlink\" title=\"antd  入口文件写法   学习下(读书人的事)\"></a>antd  入口文件写法   学习下(读书人的事)</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, &quot;__esModule&quot;, &#123;</span><br><span class=\"line\">  value: true</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">exports.Space = exports.PageHeader ............ = undefined;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">var _space = require(&#x27;./space&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">var _space2 = _interopRequireDefault(_space);</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"></span><br><span class=\"line\">function _interopRequireDefault(obj) &#123; return obj &amp;&amp; obj.__esModule ? obj : &#123; &#x27;default&#x27;: obj &#125;; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var ENV = process.env.NODE_ENV;</span><br><span class=\"line\">if (ENV !== &#x27;production&#x27; &amp;&amp; ENV !== &#x27;test&#x27; &amp;&amp; typeof console !== &#x27;undefined&#x27; &amp;&amp; console.warn &amp;&amp; typeof window !== &#x27;undefined&#x27;) &#123;</span><br><span class=\"line\">  console.warn(&#x27;You are using a whole package of antd, &#x27; + &#x27;please use https://www.npmjs.com/package/babel-plugin-import to reduce app bundle size.&#x27;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var components = [_base2[&#x27;default&#x27;], _affix2[&#x27;default&#x27;], _anchor2[&#x27;default&#x27;],...............];</span><br><span class=\"line\"></span><br><span class=\"line\">var install = function install(Vue) &#123;</span><br><span class=\"line\">  components.map(function (component) &#123;</span><br><span class=\"line\">    Vue.use(component);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  Vue.prototype.$message = _message2[&#x27;default&#x27;];</span><br><span class=\"line\">  Vue.prototype.$notification = _notification2[&#x27;default&#x27;];</span><br><span class=\"line\">  Vue.prototype.$info = _modal2[&#x27;default&#x27;].info;</span><br><span class=\"line\">  Vue.prototype.$success = _modal2[&#x27;default&#x27;].success;</span><br><span class=\"line\">  Vue.prototype.$error = _modal2[&#x27;default&#x27;].error;</span><br><span class=\"line\">  Vue.prototype.$warning = _modal2[&#x27;default&#x27;].warning;</span><br><span class=\"line\">  Vue.prototype.$confirm = _modal2[&#x27;default&#x27;].confirm;</span><br><span class=\"line\">  Vue.prototype.$destroyAll = _modal2[&#x27;default&#x27;].destroyAll;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">if (typeof window !== &#x27;undefined&#x27; &amp;&amp; window.Vue) &#123;</span><br><span class=\"line\">  install(window.Vue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.Base = _base2[&#x27;default&#x27;];</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">exports[&#x27;default&#x27;] = &#123;</span><br><span class=\"line\">  version: _version2[&#x27;default&#x27;],</span><br><span class=\"line\">  install: install</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"两种方式包\"><a href=\"#两种方式包\" class=\"headerlink\" title=\"两种方式包\"></a>两种方式包</h2><p>1.webpack 打包成 js ( 体积小,适用极少的依赖第三方插件)</p>\n<p>2.直接 vue 组件 (直观,方便后期改)</p>\n<div class=\"note info no-icon flat\"><p>我这小组件,还在更新中,经常改.( 感觉传入参数 还需要重新设计下!)所以选择第二种方式 .</p>\n</div>\n\n<h2 id=\"create-hello\"><a href=\"#create-hello\" class=\"headerlink\" title=\"create hello\"></a>create hello</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create hello  -m npm    <span class=\"comment\">// -m 选择   包管理工具</span></span><br><span class=\"line\">然后你随便写个你想要的 组件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"提取组件-添加入口文件\"><a href=\"#提取组件-添加入口文件\" class=\"headerlink\" title=\"提取组件/添加入口文件\"></a>提取组件/添加入口文件</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201115145749248.png\" alt=\"image-20201115145749248\"></p>\n<p>创建个lib 文件夹 在src同级,将<code>components</code> 复制粘贴 </p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201115150045695.png\" alt=\"image-20201115150045695\"></p>\n<p>在lib目录下 创建index.js  入口文件</p>\n<p><a href=\"https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6\">要暴露install 方法 :官方文档</a></p>\n<p>第一个参数是 <code>Vue</code> 构造器，第二个参数是一个可选的选项对象.</p>\n<div class=\"tabs\" id=\"info\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#info-1\">单组件</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#info-2\">按需引入</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#info-3\">antd</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"info-1\"><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//  lib/index.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> parallaxBanner <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/parallaxBanner&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">parallaxBanner.install = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Vue</span>)</span>&#123;</span><br><span class=\"line\">\tVue.component(parallaxBanner.name, parallaxBanner)</span><br><span class=\"line\">  <span class=\"comment\">//这里的parallaxBanner.name 就是你组件里面 定义的name  也可替换成任意 &quot;str&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> parallaxBanner</span><br></pre></td></tr></table></figure><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"info-2\"><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  按需引入 就是搞个对象出去 然后  import &#123;a&#125; = &#123;a,b&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ModuleObj = &#123;</span><br><span class=\"line\">    ComponentA,</span><br><span class=\"line\">    ComponentB</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> MyModule = &#123;&#125;</span><br><span class=\"line\">MyModule.install = <span class=\"function\">(<span class=\"params\">Vue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> ModuleObj) &#123;</span><br><span class=\"line\">        Vue.component(i, ModuleObj[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> MyModule</span><br></pre></td></tr></table></figure><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"info-3\"><p>** 见文章末尾 其他 ** </p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n\n\n\n\n\n\n\n\n\n<h2 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h2><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;vue-parallax-banner&quot;</span>,   <span class=\"comment\">// name required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;0.0.67&quot;</span>,     <span class=\"comment\">// 版本号  每次publish的版本一定要不同 required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;private&quot;</span>: <span class=\"literal\">false</span>,        <span class=\"comment\">// 公开/私人 required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;author&quot;</span>: <span class=\"string\">&quot;genjixyz&quot;</span>,    <span class=\"comment\">// 作者   required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;main&quot;</span>: <span class=\"string\">&quot;lib/index.js&quot;</span>,  <span class=\"comment\">// 入口文件  required</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;files&quot;</span>: [<span class=\"string\">&quot;lib&quot;</span>],        <span class=\"comment\">// 白名单   </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;license&quot;</span>:<span class=\"string\">&quot;MIT&quot;</span>,  <span class=\"comment\">//开源协议</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;repository&quot;</span>: &#123;    <span class=\"comment\">//repo</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;type&quot;</span>: <span class=\"string\">&quot;git&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;url&quot;</span>: <span class=\"string\">&quot;https://github.com/genjiXYZ/vue-parallax-banner&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;serve&quot;</span>: <span class=\"string\">&quot;vue-cli-service serve&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span>: <span class=\"string\">&quot;vue-cli-service build&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;core-js&quot;</span>: <span class=\"string\">&quot;^3.6.5&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;vue&quot;</span>: <span class=\"string\">&quot;^2.6.11&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;vue-parallax-banner&quot;</span>: <span class=\"string\">&quot;0.0.63&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;devDependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;@vue/cli-plugin-babel&quot;</span>: <span class=\"string\">&quot;~4.5.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;@vue/cli-service&quot;</span>: <span class=\"string\">&quot;~4.5.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;vue-template-compiler&quot;</span>: <span class=\"string\">&quot;^2.6.11&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;browserslist&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;&gt; 1%&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;last 2 versions&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;not dead&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"npm-publish\"><a href=\"#npm-publish\" class=\"headerlink\" title=\"npm publish\"></a>npm publish</h2><div class=\"tabs\" id=\"test3\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#test3-1\">1.npm 源</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test3-2\">2.npm login</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test3-3\">3.npm pack / npm publish</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test3-1\"><p>确认你的 npm 源 ,想要在哪个源发布就用哪个.<br>   <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ npm config list  </span><br><span class=\"line\">// metrics-registry = <span class=\"string\">&quot;https://registry.npm.taobao.org/&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">//我这里用的nrm </span><br><span class=\"line\">❯ nrm ls </span><br><span class=\"line\"></span><br><span class=\"line\">  npm -------- https://registry.npmjs.org/</span><br><span class=\"line\">  yarn ------- https://registry.yarnpkg.com/</span><br><span class=\"line\">  cnpm ------- http://r.cnpmjs.org/</span><br><span class=\"line\">* taobao ----- https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj --------- https://registry.nodejitsu.com/</span><br><span class=\"line\">  npmMirror -- https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm ----- http://registry.enpmjs.org/</span><br><span class=\"line\">  </span><br><span class=\"line\">❯ nrm use npm</span><br><span class=\"line\">   Registry has been <span class=\"built_in\">set</span> to: https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test3-2\"><p> 登录<br> <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯  npm login</span><br><span class=\"line\">Username: genji.xyz</span><br><span class=\"line\">Password:</span><br><span class=\"line\">Email: (this IS public) 895939059@qq.com</span><br><span class=\"line\">Logged <span class=\"keyword\">in</span> as genji.xyz on https://registry.npmjs.org/.</span><br><span class=\"line\"></span><br><span class=\"line\">// 这里可能有很多报错  我遇到了这些 =_=!</span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! 402 Payment Required - PUT http://registry.npmjs.org/@genji%2fparallax-banner - You must sign up <span class=\"keyword\">for</span> private packages </span><br><span class=\"line\"></span><br><span class=\"line\">//package.json 中 <span class=\"string\">&quot;private&quot;</span>: <span class=\"literal\">false</span>,    因为你没花钱 不能用私人包</span><br><span class=\"line\"></span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! code E404</span><br><span class=\"line\">npm ERR! 404 Not Found - PUT https://registry.npmjs.org/genji-parallax-banner - Not found</span><br><span class=\"line\">npm ERR! 404 </span><br><span class=\"line\">npm ERR! 404  <span class=\"string\">&#x27;genji-parallax-banner@0.0.1&#x27;</span> is not <span class=\"keyword\">in</span> the npm registry.</span><br><span class=\"line\">npm ERR! 404 You should bug the author to publish it (or use the name yourself!)</span><br><span class=\"line\">npm ERR! 404 </span><br><span class=\"line\"></span><br><span class=\"line\">//我没有验证邮箱,  好多都报错404 问题都不一样</span><br><span class=\"line\"></span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! code E403</span><br><span class=\"line\">npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/genji-parallax-banner - Forbidden</span><br><span class=\"line\">npm ERR! 403 In most cases, you or one of your dependencies are requesting</span><br><span class=\"line\">npm ERR! 403 a package version that is forbidden by your security policy.</span><br><span class=\"line\">// npm 包名字不能重复</span><br><span class=\"line\"></span><br><span class=\"line\">---------------------</span><br><span class=\"line\">npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/vue-paralax-banner - vue-paralax-banner cannot be republished until 24 hours have passed.</span><br><span class=\"line\"></span><br><span class=\"line\">//删除后 24 小时后 才能发布 相同名字的package</span><br></pre></td></tr></table></figure></p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test3-3\"><p>pack publish<br>   <figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm pack // 本地生成一个压缩包  解压引入 测试用</span><br><span class=\"line\">npm publish  //发布</span><br></pre></td></tr></table></figure></p><button type=\"button\" class=\"tab-to-top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h4 id=\"随手记录下antd-的-dependencies-有好用的-以后可以用\"><a href=\"#随手记录下antd-的-dependencies-有好用的-以后可以用\" class=\"headerlink\" title=\"随手记录下antd 的 dependencies 有好用的 以后可以用.\"></a>随手记录下antd 的 <code>dependencies</code> 有好用的 以后可以用.</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;@ant-design/icons&quot;: &quot;^2.1.1&quot;,</span><br><span class=\"line\">    &quot;@ant-design/icons-vue&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;@simonwep/pickr&quot;: &quot;~1.7.0&quot;,</span><br><span class=\"line\">    &quot;add-dom-event-listener&quot;: &quot;^1.0.2&quot;,</span><br><span class=\"line\">    &quot;array-tree-filter&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;async-validator&quot;: &quot;^3.0.3&quot;,</span><br><span class=\"line\">    &quot;babel-helper-vue-jsx-merge-props&quot;: &quot;^2.0.3&quot;,</span><br><span class=\"line\">    &quot;babel-runtime&quot;: &quot;6.x&quot;,</span><br><span class=\"line\">    &quot;classnames&quot;: &quot;^2.2.5&quot;,</span><br><span class=\"line\">    &quot;component-classes&quot;: &quot;^1.2.6&quot;,</span><br><span class=\"line\">    &quot;dom-align&quot;: &quot;^1.10.4&quot;,</span><br><span class=\"line\">    &quot;dom-closest&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;dom-scroll-into-view&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;enquire.js&quot;: &quot;^2.1.6&quot;,</span><br><span class=\"line\">    &quot;intersperse&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;is-mobile&quot;: &quot;^2.2.1&quot;,</span><br><span class=\"line\">    &quot;is-negative-zero&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;ismobilejs&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;json2mq&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;lodash&quot;: &quot;^4.17.5&quot;,</span><br><span class=\"line\">    &quot;moment&quot;: &quot;^2.21.0&quot;,</span><br><span class=\"line\">    &quot;mutationobserver-shim&quot;: &quot;^0.3.2&quot;,</span><br><span class=\"line\">    &quot;node-emoji&quot;: &quot;^1.10.0&quot;,</span><br><span class=\"line\">    &quot;omit.js&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;raf&quot;: &quot;^3.4.0&quot;,</span><br><span class=\"line\">    &quot;resize-observer-polyfill&quot;: &quot;^1.5.1&quot;,</span><br><span class=\"line\">    &quot;shallow-equal&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;shallowequal&quot;: &quot;^1.0.2&quot;,</span><br><span class=\"line\">    &quot;vue-ref&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;warning&quot;: &quot;^4.0.0&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;chalk&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;cheerio&quot;: &quot;^1.0.0-rc.2&quot;,</span><br><span class=\"line\">    &quot;codecov&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;colorful&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;commander&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;compare-versions&quot;: &quot;^3.3.0&quot;,</span><br><span class=\"line\">    &quot;cross-env&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;css-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;deep-assign&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;enquire-js&quot;: &quot;^0.2.1&quot;,</span><br><span class=\"line\">    &quot;eslint&quot;: &quot;^6.8.0&quot;,</span><br><span class=\"line\">    &quot;eslint-config-prettier&quot;: &quot;^6.10.1&quot;,</span><br><span class=\"line\">    &quot;eslint-plugin-html&quot;: &quot;^6.0.0&quot;,</span><br><span class=\"line\">    &quot;eslint-plugin-markdown&quot;: &quot;^2.0.0-alpha.0&quot;,</span><br><span class=\"line\">    &quot;eslint-plugin-vue&quot;: &quot;^6.2.2&quot;,</span><br><span class=\"line\">    &quot;fetch-jsonp&quot;: &quot;^1.1.3&quot;,</span><br><span class=\"line\">    &quot;fs-extra&quot;: &quot;^8.0.0&quot;,</span><br><span class=\"line\">    &quot;glob&quot;: &quot;^7.1.2&quot;,</span><br><span class=\"line\">    &quot;gulp&quot;: &quot;^4.0.1&quot;,</span><br><span class=\"line\">    &quot;gulp-babel&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;gulp-strip-code&quot;: &quot;^0.1.4&quot;,</span><br><span class=\"line\">    &quot;html-webpack-plugin&quot;: &quot;^3.2.0&quot;,</span><br><span class=\"line\">    &quot;husky&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;istanbul-instrumenter-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;jest&quot;: &quot;^24.0.0&quot;,</span><br><span class=\"line\">    &quot;jest-serializer-vue&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;jest-transform-stub&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;js-base64&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;json-templater&quot;: &quot;^1.2.0&quot;,</span><br><span class=\"line\">    &quot;jsonp&quot;: &quot;^0.2.1&quot;,</span><br><span class=\"line\">    &quot;less&quot;: &quot;^3.9.0&quot;,</span><br><span class=\"line\">    &quot;less-loader&quot;: &quot;^6.0.0&quot;,</span><br><span class=\"line\">    &quot;less-plugin-npm-import&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;lint-staged&quot;: &quot;^10.0.0&quot;,</span><br><span class=\"line\">    &quot;marked&quot;: &quot;0.3.18&quot;,</span><br><span class=\"line\">    &quot;merge2&quot;: &quot;^1.2.1&quot;,</span><br><span class=\"line\">    &quot;mini-css-extract-plugin&quot;: &quot;^0.10.0&quot;,</span><br><span class=\"line\">    &quot;minimist&quot;: &quot;^1.2.0&quot;,</span><br><span class=\"line\">    &quot;mkdirp&quot;: &quot;^0.5.1&quot;,</span><br><span class=\"line\">    &quot;mockdate&quot;: &quot;^2.0.2&quot;,</span><br><span class=\"line\">    &quot;nprogress&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;optimize-css-assets-webpack-plugin&quot;: &quot;^5.0.1&quot;,</span><br><span class=\"line\">    &quot;postcss&quot;: &quot;^7.0.6&quot;,</span><br><span class=\"line\">    &quot;postcss-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;prettier&quot;: &quot;^1.18.2&quot;,</span><br><span class=\"line\">    &quot;pretty-quick&quot;: &quot;^2.0.0&quot;,</span><br><span class=\"line\">    &quot;querystring&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;raw-loader&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;reqwest&quot;: &quot;^2.0.5&quot;,</span><br><span class=\"line\">    &quot;rimraf&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;rucksack-css&quot;: &quot;^1.0.2&quot;,</span><br><span class=\"line\">    &quot;selenium-server&quot;: &quot;^3.0.1&quot;,</span><br><span class=\"line\">    &quot;semver&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;style-loader&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;stylelint&quot;: &quot;^13.0.0&quot;,</span><br><span class=\"line\">    &quot;stylelint-config-prettier&quot;: &quot;^8.0.0&quot;,</span><br><span class=\"line\">    &quot;stylelint-config-standard&quot;: &quot;^19.0.0&quot;,</span><br><span class=\"line\">    &quot;terser-webpack-plugin&quot;: &quot;^3.0.3&quot;,</span><br><span class=\"line\">    &quot;through2&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;url-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class=\"line\">    &quot;vue&quot;: &quot;^2.6.11&quot;,</span><br><span class=\"line\">    &quot;vue-antd-md-loader&quot;: &quot;^1.1.0&quot;,</span><br><span class=\"line\">    &quot;vue-clipboard2&quot;: &quot;0.3.1&quot;,</span><br><span class=\"line\">    &quot;vue-draggable-resizable&quot;: &quot;^2.1.0&quot;,</span><br><span class=\"line\">    &quot;vue-eslint-parser&quot;: &quot;^7.0.0&quot;,</span><br><span class=\"line\">    &quot;vue-i18n&quot;: &quot;^8.3.2&quot;,</span><br><span class=\"line\">    &quot;vue-infinite-scroll&quot;: &quot;^2.0.2&quot;,</span><br><span class=\"line\">    &quot;vue-jest&quot;: &quot;^2.5.0&quot;,</span><br><span class=\"line\">    &quot;vue-loader&quot;: &quot;^15.6.2&quot;,</span><br><span class=\"line\">    &quot;vue-router&quot;: &quot;^3.0.1&quot;,</span><br><span class=\"line\">    &quot;vue-server-renderer&quot;: &quot;^2.6.11&quot;,</span><br><span class=\"line\">    &quot;vue-template-compiler&quot;: &quot;^2.6.11&quot;,</span><br><span class=\"line\">    &quot;vue-virtual-scroller&quot;: &quot;^1.0.0&quot;,</span><br><span class=\"line\">    &quot;vuex&quot;: &quot;^3.1.0&quot;,</span><br><span class=\"line\">    &quot;webpack&quot;: &quot;^4.28.4&quot;,</span><br><span class=\"line\">    &quot;webpack-cli&quot;: &quot;^3.2.1&quot;,</span><br><span class=\"line\">    &quot;webpack-dev-server&quot;: &quot;^3.1.14&quot;,</span><br><span class=\"line\">    &quot;webpack-merge&quot;: &quot;^4.1.1&quot;,</span><br><span class=\"line\">    &quot;webpackbar&quot;: &quot;^4.0.0&quot;,</span><br><span class=\"line\">    &quot;xhr-mock&quot;: &quot;^2.5.1&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h4 id=\"antd-入口文件写法-学习下-读书人的事\"><a href=\"#antd-入口文件写法-学习下-读书人的事\" class=\"headerlink\" title=\"antd  入口文件写法   学习下(读书人的事)\"></a>antd  入口文件写法   学习下(读书人的事)</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, &quot;__esModule&quot;, &#123;</span><br><span class=\"line\">  value: true</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">exports.Space = exports.PageHeader ............ = undefined;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">var _space = require(&#x27;./space&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">var _space2 = _interopRequireDefault(_space);</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"></span><br><span class=\"line\">function _interopRequireDefault(obj) &#123; return obj &amp;&amp; obj.__esModule ? obj : &#123; &#x27;default&#x27;: obj &#125;; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var ENV = process.env.NODE_ENV;</span><br><span class=\"line\">if (ENV !== &#x27;production&#x27; &amp;&amp; ENV !== &#x27;test&#x27; &amp;&amp; typeof console !== &#x27;undefined&#x27; &amp;&amp; console.warn &amp;&amp; typeof window !== &#x27;undefined&#x27;) &#123;</span><br><span class=\"line\">  console.warn(&#x27;You are using a whole package of antd, &#x27; + &#x27;please use https://www.npmjs.com/package/babel-plugin-import to reduce app bundle size.&#x27;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var components = [_base2[&#x27;default&#x27;], _affix2[&#x27;default&#x27;], _anchor2[&#x27;default&#x27;],...............];</span><br><span class=\"line\"></span><br><span class=\"line\">var install = function install(Vue) &#123;</span><br><span class=\"line\">  components.map(function (component) &#123;</span><br><span class=\"line\">    Vue.use(component);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  Vue.prototype.$message = _message2[&#x27;default&#x27;];</span><br><span class=\"line\">  Vue.prototype.$notification = _notification2[&#x27;default&#x27;];</span><br><span class=\"line\">  Vue.prototype.$info = _modal2[&#x27;default&#x27;].info;</span><br><span class=\"line\">  Vue.prototype.$success = _modal2[&#x27;default&#x27;].success;</span><br><span class=\"line\">  Vue.prototype.$error = _modal2[&#x27;default&#x27;].error;</span><br><span class=\"line\">  Vue.prototype.$warning = _modal2[&#x27;default&#x27;].warning;</span><br><span class=\"line\">  Vue.prototype.$confirm = _modal2[&#x27;default&#x27;].confirm;</span><br><span class=\"line\">  Vue.prototype.$destroyAll = _modal2[&#x27;default&#x27;].destroyAll;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">if (typeof window !== &#x27;undefined&#x27; &amp;&amp; window.Vue) &#123;</span><br><span class=\"line\">  install(window.Vue);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.Base = _base2[&#x27;default&#x27;];</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">exports[&#x27;default&#x27;] = &#123;</span><br><span class=\"line\">  version: _version2[&#x27;default&#x27;],</span><br><span class=\"line\">  install: install</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"数组去重||unique||remove duplicates","date":"2020-09-01T16:00:00.000Z","updated":"2020-11-27T20:54:59.848Z","cover":"https://picgo.genji.xyz/blog/posts/picjs.png","description":"记录下几种去重的思路","keywords":"js,去重,remove duplicates,unique","_content":"\n{% note info no-icon%}\n\n去重的几种思路\n\n只比较了了不同思路, `for` 一般会` filter`  性能好.\n\n写了两个`for` 然后就 `for`  不动了 改用`filter `了.\n\n如果后期性能要求特别高,把filter 改成for .\n\n毕竟在不考虑实际情况下谈性能,都是耍流氓.\n\n{% endnote  %}\n\n\n\n```js\n//基本测试参数  暂时只考虑 数字 字符串 布尔值\nvar arr =  [1, 5, 2, 3, 1, 5, \"hello\", \"1\", \"hello\", \"11\", \"22\"],\n\tarrs = [],\n\tLOOPS = 1000,\n\tLEN = 1000;\nwhile(LEN--){\n\tarrs = arrs.concat(arr);\n}\n\nvar d = new Date();\nfor (var i = 0; i < LOOPS; i++) {\n  unique(arrs);\n}\nconsole.log(\"用时(ms)\", (new Date() - d) / LOOPS)\nconsole.log(\"res: \", unique(arr));\n\n```\n\n\n\n\n\n#  双层for  元素对比\n\n\n\n```js\nfunction unique(arr) {\n  let arrNew = [],\n    len = arr.length,\n    flag = 1;\n  for (let i = 0; i < len; i++) {\n    const eOld = arr[i];\n    flag = 1;\n    for (let j = 0; j < arrNew.length; j++) {\n      const eNew = arrNew[j];\n      if (eOld === eNew) {\n        flag = 0;\n        break;\n      }\n    }\n    flag && arrNew.push(eOld);\n  }\n  return arrNew;\n}\n\n\n//0.171\n```\n\n\n\n# 双层for splice\n\n```js\nfunction unique(arr) {\n\tlet i  = 1,\n\t\tj =0 ,\n\t\tlen = arr.length\n\t\tarr2 = arr\n\tfor( i = 1;i<len;i++){\n\t\tfor( j = 0;j<i;j++){\n\t\t\t\tif(arr2[i]===arr2[j]){\n\t\t\t\t\tarr2.splice(i,1);\n\t\t\t\t\ti--\n\t\t\t}\n\t\t}\n\t}\n\treturn arr2\n}\n//0.122\n```\n\n\n\n# indexOf\n\n```js\nfunction unique(arr) {\n\treturn\tarr.filter((item, pos, self) => self.indexOf(item) == pos)\n\t}\n\n//0.184\n```\n\n\n\n# includes reduce\n\n\n\n```js\nfunction unique(arr) {\n\treturn\tarr.reduce((pre,cur,index)=>pre.includes( cur )? pre:pre.concat(cur),[])\n\t}\n//0.292\n```\n\n\n\n# sort 前后对比\n\n\n\n```js\nfunction unique(arr) {\n    return arr.sort().filter(function(item, index, ary) {\n        return !index || item != ary[index - 1];\n    });\n}\n//0.366\n```\n\n\n\n# 对象(哈希表)\n\n```js\nfunction unique(arr) {\n    var obj = {};\n    return arr.filter(item => obj.hasOwnProperty(item) ? false : (obj[item] = true)\n    )\n}\n//0.226\n\n```\n\n\n\n\n\n# Set\n\n```js\nuniq = [...new Set(array)]\n//0.117\n```\n\n# 区分 type\n\n```js\n\n\nfunction unique(a) {\n  let prims = { boolean: {}, number: {}, string: {} },\n    objs = [];\n  a.forEach((e) => {\n    let type = typeof(e);\n    if (type in prims) {\n      !prims[type].hasOwnProperty(e) && (prims[type][e] = 0);\n    } else {\n      objs.indexOf(e) < 0 && objs.push(e);\n    }\n  });\n  return { prims, objs };\n}\n\n```\n\n","source":"_posts/前端/js/2020-10-22_Web_JS_Arr_Remove Duplicates .md","raw":"---\ntitle: 数组去重||unique||remove duplicates\ndate: 2020-09-02 00:00:00\nupdated:\ncover: https://picgo.genji.xyz/blog/posts/picjs.png\ndescription: 记录下几种去重的思路\ntags: [js, Array]\ncategories: [前端, js]\nkeywords: \"js,去重,remove duplicates,unique\"\n---\n\n{% note info no-icon%}\n\n去重的几种思路\n\n只比较了了不同思路, `for` 一般会` filter`  性能好.\n\n写了两个`for` 然后就 `for`  不动了 改用`filter `了.\n\n如果后期性能要求特别高,把filter 改成for .\n\n毕竟在不考虑实际情况下谈性能,都是耍流氓.\n\n{% endnote  %}\n\n\n\n```js\n//基本测试参数  暂时只考虑 数字 字符串 布尔值\nvar arr =  [1, 5, 2, 3, 1, 5, \"hello\", \"1\", \"hello\", \"11\", \"22\"],\n\tarrs = [],\n\tLOOPS = 1000,\n\tLEN = 1000;\nwhile(LEN--){\n\tarrs = arrs.concat(arr);\n}\n\nvar d = new Date();\nfor (var i = 0; i < LOOPS; i++) {\n  unique(arrs);\n}\nconsole.log(\"用时(ms)\", (new Date() - d) / LOOPS)\nconsole.log(\"res: \", unique(arr));\n\n```\n\n\n\n\n\n#  双层for  元素对比\n\n\n\n```js\nfunction unique(arr) {\n  let arrNew = [],\n    len = arr.length,\n    flag = 1;\n  for (let i = 0; i < len; i++) {\n    const eOld = arr[i];\n    flag = 1;\n    for (let j = 0; j < arrNew.length; j++) {\n      const eNew = arrNew[j];\n      if (eOld === eNew) {\n        flag = 0;\n        break;\n      }\n    }\n    flag && arrNew.push(eOld);\n  }\n  return arrNew;\n}\n\n\n//0.171\n```\n\n\n\n# 双层for splice\n\n```js\nfunction unique(arr) {\n\tlet i  = 1,\n\t\tj =0 ,\n\t\tlen = arr.length\n\t\tarr2 = arr\n\tfor( i = 1;i<len;i++){\n\t\tfor( j = 0;j<i;j++){\n\t\t\t\tif(arr2[i]===arr2[j]){\n\t\t\t\t\tarr2.splice(i,1);\n\t\t\t\t\ti--\n\t\t\t}\n\t\t}\n\t}\n\treturn arr2\n}\n//0.122\n```\n\n\n\n# indexOf\n\n```js\nfunction unique(arr) {\n\treturn\tarr.filter((item, pos, self) => self.indexOf(item) == pos)\n\t}\n\n//0.184\n```\n\n\n\n# includes reduce\n\n\n\n```js\nfunction unique(arr) {\n\treturn\tarr.reduce((pre,cur,index)=>pre.includes( cur )? pre:pre.concat(cur),[])\n\t}\n//0.292\n```\n\n\n\n# sort 前后对比\n\n\n\n```js\nfunction unique(arr) {\n    return arr.sort().filter(function(item, index, ary) {\n        return !index || item != ary[index - 1];\n    });\n}\n//0.366\n```\n\n\n\n# 对象(哈希表)\n\n```js\nfunction unique(arr) {\n    var obj = {};\n    return arr.filter(item => obj.hasOwnProperty(item) ? false : (obj[item] = true)\n    )\n}\n//0.226\n\n```\n\n\n\n\n\n# Set\n\n```js\nuniq = [...new Set(array)]\n//0.117\n```\n\n# 区分 type\n\n```js\n\n\nfunction unique(a) {\n  let prims = { boolean: {}, number: {}, string: {} },\n    objs = [];\n  a.forEach((e) => {\n    let type = typeof(e);\n    if (type in prims) {\n      !prims[type].hasOwnProperty(e) && (prims[type][e] = 0);\n    } else {\n      objs.indexOf(e) < 0 && objs.push(e);\n    }\n  });\n  return { prims, objs };\n}\n\n```\n\n","slug":"前端/js/2020-10-22_Web_JS_Arr_Remove Duplicates ","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cki0qxv5y000drtvtbox20s8s","content":"<div class=\"note info no-icon flat\"><p>去重的几种思路</p>\n<p>只比较了了不同思路, <code>for</code> 一般会<code> filter</code>  性能好.</p>\n<p>写了两个<code>for</code> 然后就 <code>for</code>  不动了 改用<code>filter </code>了.</p>\n<p>如果后期性能要求特别高,把filter 改成for .</p>\n<p>毕竟在不考虑实际情况下谈性能,都是耍流氓.</p>\n</div>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//基本测试参数  暂时只考虑 数字 字符串 布尔值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr =  [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"string\">&quot;hello&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;hello&quot;</span>, <span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;22&quot;</span>],</span><br><span class=\"line\">\tarrs = [],</span><br><span class=\"line\">\tLOOPS = <span class=\"number\">1000</span>,</span><br><span class=\"line\">\tLEN = <span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(LEN--)&#123;</span><br><span class=\"line\">\tarrs = arrs.concat(arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; LOOPS; i++) &#123;</span><br><span class=\"line\">  unique(arrs);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;用时(ms)&quot;</span>, (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() - d) / LOOPS)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;res: &quot;</span>, unique(arr));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"双层for-元素对比\"><a href=\"#双层for-元素对比\" class=\"headerlink\" title=\"双层for  元素对比\"></a>双层for  元素对比</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arrNew = [],</span><br><span class=\"line\">    len = arr.length,</span><br><span class=\"line\">    flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> eOld = arr[i];</span><br><span class=\"line\">    flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arrNew.length; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> eNew = arrNew[j];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (eOld === eNew) &#123;</span><br><span class=\"line\">        flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    flag &amp;&amp; arrNew.push(eOld);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arrNew;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//0.171</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"双层for-splice\"><a href=\"#双层for-splice\" class=\"headerlink\" title=\"双层for splice\"></a>双层for splice</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> i  = <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\tj =<span class=\"number\">0</span> ,</span><br><span class=\"line\">\t\tlen = arr.length</span><br><span class=\"line\">\t\tarr2 = arr</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>( i = <span class=\"number\">1</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>( j = <span class=\"number\">0</span>;j&lt;i;j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(arr2[i]===arr2[j])&#123;</span><br><span class=\"line\">\t\t\t\t\tarr2.splice(i,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\ti--</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> arr2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.122</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf\"></a>indexOf</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>\tarr.filter(<span class=\"function\">(<span class=\"params\">item, pos, self</span>) =&gt;</span> self.indexOf(item) == pos)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//0.184</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"includes-reduce\"><a href=\"#includes-reduce\" class=\"headerlink\" title=\"includes reduce\"></a>includes reduce</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>\tarr.reduce(<span class=\"function\">(<span class=\"params\">pre,cur,index</span>)=&gt;</span>pre.includes( cur )? pre:pre.concat(cur),[])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.292</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"sort-前后对比\"><a href=\"#sort-前后对比\" class=\"headerlink\" title=\"sort 前后对比\"></a>sort 前后对比</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.sort().filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index, ary</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> !index || item != ary[index - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.366</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"对象-哈希表\"><a href=\"#对象-哈希表\" class=\"headerlink\" title=\"对象(哈希表)\"></a>对象(哈希表)</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> obj.hasOwnProperty(item) ? <span class=\"literal\">false</span> : (obj[item] = <span class=\"literal\">true</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.226</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uniq = [...new <span class=\"built_in\">Set</span>(array)]</span><br><span class=\"line\"><span class=\"comment\">//0.117</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"区分-type\"><a href=\"#区分-type\" class=\"headerlink\" title=\"区分 type\"></a>区分 type</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> prims = &#123; <span class=\"attr\">boolean</span>: &#123;&#125;, <span class=\"attr\">number</span>: &#123;&#125;, <span class=\"attr\">string</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">    objs = [];</span><br><span class=\"line\">  a.forEach(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> type = <span class=\"keyword\">typeof</span>(e);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type <span class=\"keyword\">in</span> prims) &#123;</span><br><span class=\"line\">      !prims[type].hasOwnProperty(e) &amp;&amp; (prims[type][e] = <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      objs.indexOf(e) &lt; <span class=\"number\">0</span> &amp;&amp; objs.push(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; prims, objs &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<div class=\"note info no-icon flat\"><p>去重的几种思路</p>\n<p>只比较了了不同思路, <code>for</code> 一般会<code> filter</code>  性能好.</p>\n<p>写了两个<code>for</code> 然后就 <code>for</code>  不动了 改用<code>filter </code>了.</p>\n<p>如果后期性能要求特别高,把filter 改成for .</p>\n<p>毕竟在不考虑实际情况下谈性能,都是耍流氓.</p>\n</div>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//基本测试参数  暂时只考虑 数字 字符串 布尔值</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr =  [<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"string\">&quot;hello&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;hello&quot;</span>, <span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;22&quot;</span>],</span><br><span class=\"line\">\tarrs = [],</span><br><span class=\"line\">\tLOOPS = <span class=\"number\">1000</span>,</span><br><span class=\"line\">\tLEN = <span class=\"number\">1000</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(LEN--)&#123;</span><br><span class=\"line\">\tarrs = arrs.concat(arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; LOOPS; i++) &#123;</span><br><span class=\"line\">  unique(arrs);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;用时(ms)&quot;</span>, (<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() - d) / LOOPS)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;res: &quot;</span>, unique(arr));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"双层for-元素对比\"><a href=\"#双层for-元素对比\" class=\"headerlink\" title=\"双层for  元素对比\"></a>双层for  元素对比</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> arrNew = [],</span><br><span class=\"line\">    len = arr.length,</span><br><span class=\"line\">    flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> eOld = arr[i];</span><br><span class=\"line\">    flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; arrNew.length; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> eNew = arrNew[j];</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (eOld === eNew) &#123;</span><br><span class=\"line\">        flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    flag &amp;&amp; arrNew.push(eOld);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arrNew;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//0.171</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"双层for-splice\"><a href=\"#双层for-splice\" class=\"headerlink\" title=\"双层for splice\"></a>双层for splice</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> i  = <span class=\"number\">1</span>,</span><br><span class=\"line\">\t\tj =<span class=\"number\">0</span> ,</span><br><span class=\"line\">\t\tlen = arr.length</span><br><span class=\"line\">\t\tarr2 = arr</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>( i = <span class=\"number\">1</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>( j = <span class=\"number\">0</span>;j&lt;i;j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(arr2[i]===arr2[j])&#123;</span><br><span class=\"line\">\t\t\t\t\tarr2.splice(i,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\ti--</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> arr2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.122</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf\"></a>indexOf</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>\tarr.filter(<span class=\"function\">(<span class=\"params\">item, pos, self</span>) =&gt;</span> self.indexOf(item) == pos)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//0.184</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"includes-reduce\"><a href=\"#includes-reduce\" class=\"headerlink\" title=\"includes reduce\"></a>includes reduce</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>\tarr.reduce(<span class=\"function\">(<span class=\"params\">pre,cur,index</span>)=&gt;</span>pre.includes( cur )? pre:pre.concat(cur),[])</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.292</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"sort-前后对比\"><a href=\"#sort-前后对比\" class=\"headerlink\" title=\"sort 前后对比\"></a>sort 前后对比</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.sort().filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index, ary</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> !index || item != ary[index - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.366</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"对象-哈希表\"><a href=\"#对象-哈希表\" class=\"headerlink\" title=\"对象(哈希表)\"></a>对象(哈希表)</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.filter(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> obj.hasOwnProperty(item) ? <span class=\"literal\">false</span> : (obj[item] = <span class=\"literal\">true</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//0.226</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uniq = [...new <span class=\"built_in\">Set</span>(array)]</span><br><span class=\"line\"><span class=\"comment\">//0.117</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"区分-type\"><a href=\"#区分-type\" class=\"headerlink\" title=\"区分 type\"></a>区分 type</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> prims = &#123; <span class=\"attr\">boolean</span>: &#123;&#125;, <span class=\"attr\">number</span>: &#123;&#125;, <span class=\"attr\">string</span>: &#123;&#125; &#125;,</span><br><span class=\"line\">    objs = [];</span><br><span class=\"line\">  a.forEach(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> type = <span class=\"keyword\">typeof</span>(e);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type <span class=\"keyword\">in</span> prims) &#123;</span><br><span class=\"line\">      !prims[type].hasOwnProperty(e) &amp;&amp; (prims[type][e] = <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      objs.indexOf(e) &lt; <span class=\"number\">0</span> &amp;&amp; objs.push(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; prims, objs &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"find findIndex indexOf includes","date":"2020-09-01T16:00:00.000Z","updated":"2020-11-27T20:54:59.735Z","cover":"https://picgo.genji.xyz/blog/posts/picjs.png","description":null,"keywords":"js,Array,find,findIndex,indexOf,includes,some","_content":"\n#  Array.find()\n\n\n\n{% note info no-icon %}\narr.find(callback[, thisArg])\n\ncallback(curElement,index,arry )\n\n{% endnote %}\n\n{% note warning no-icon %}\n\n返回第一个符合条件的 `元素`的`值 ` ,否则返回 undefined\n\n不改变原数组\n\n{% endnote %}\n\n\n\n基本不说了看下 thiArg\n\n```js\nclass Person {\n    constructor(name) {\n        this.name = name;\n        this.id = Person.nextId++;\n    }\n}\n\nPerson.nextId = 0;\n\nconst jamie = new Person(\"Jamie\"),\n      juliet = new Person(\"Juliet\"),\n      peter = new Person(\"Peter\"),\n\t  \tjay = new Person(\"Jay\");\n\nconst arr = [jamie, juliet, peter, jay];\nconst obj = {name:\"football\",ownerID:3}\t  \n\n// option 2: using \"this\" arg:\nlet a = arr.find(function(p) {\n  return p.id === this.ownerID;\n}, obj); \n\nconsole.log(a)\n//Person { name: 'Jay', id: 3 }\n\n```\n\n\n\n#  Array.findIndex()\n\n{% note info no-icon %}\narr.findIndex(callback[, thisArg])\n\ncallback(curElement,index,arry )\n\n{% endnote %}\n\n\n\n和 find  一样 只不过是返回 符合条件第一个`元素`的`索引 `否则 返回 `=1`\n\n-------\n\n# Arry/String   .indexOf()  .includes()\n\n这两方法适用 `数组` 和`字符串`.\n\n{% note info no-icon %}\narr.includes( value/stringToFind [, fromIndex])\n\nstr.indexOf(searchValue [, fromIndex])\n\n{% endnote %}\n\n\n\nfromIndex 开始查找位置   负数 就是从后查找\n\nfromIndex 大于数组或者字符串长度 返回-1\n\nindeOf  返回 `索引`  没有返回`-1`  且只返回第一个\n\nincludes 返回 `true` of `false`\n\n```js\nvar array = [2, 5, ,2,9];\nvar arrStr = [ \"apple\",\"banana\",\"lemon\"]\narray.indexOf(2);     \t\t// 0\narray.indexOf(7);    \t    // -1\narray.indexOf(9, 2); \t    // 2\narray.includes(2)     \t    //true\narray.includes(7)    \t    //false\narray.includes(9,2)         //true\narrStr.indexOf('banana')    //1\narrStr.includes('banana')    //true\nvar string = \"banana\"\nstring.indexOf(\"a\");        //1  \nstring.includes(\"a\");       //true\n```\n\n\n\n{% note info no-icon %}\n.includes()  和.some() 是有点类似的\n\n比如\n\n```js\nlet userForm = [1,2,3,4,5]\nuserForm.includes(4) //true\nuserForm.some(e=>e ===4 ) //true\n```\n\n{% endnote %}","source":"_posts/前端/js/2020-10-22_Web_JS_Arr_find_indexOf_findIndex_some_includes.md","raw":"---\ntitle: find findIndex indexOf includes \ndate: 2020-09-02 00:00:00\nupdated:\ncover: https://picgo.genji.xyz/blog/posts/picjs.png\ndescription:\ntags: [js, Array]\ncategories: [前端, js]\nkeywords: \"js,Array,find,findIndex,indexOf,includes,some\"\n---\n\n#  Array.find()\n\n\n\n{% note info no-icon %}\narr.find(callback[, thisArg])\n\ncallback(curElement,index,arry )\n\n{% endnote %}\n\n{% note warning no-icon %}\n\n返回第一个符合条件的 `元素`的`值 ` ,否则返回 undefined\n\n不改变原数组\n\n{% endnote %}\n\n\n\n基本不说了看下 thiArg\n\n```js\nclass Person {\n    constructor(name) {\n        this.name = name;\n        this.id = Person.nextId++;\n    }\n}\n\nPerson.nextId = 0;\n\nconst jamie = new Person(\"Jamie\"),\n      juliet = new Person(\"Juliet\"),\n      peter = new Person(\"Peter\"),\n\t  \tjay = new Person(\"Jay\");\n\nconst arr = [jamie, juliet, peter, jay];\nconst obj = {name:\"football\",ownerID:3}\t  \n\n// option 2: using \"this\" arg:\nlet a = arr.find(function(p) {\n  return p.id === this.ownerID;\n}, obj); \n\nconsole.log(a)\n//Person { name: 'Jay', id: 3 }\n\n```\n\n\n\n#  Array.findIndex()\n\n{% note info no-icon %}\narr.findIndex(callback[, thisArg])\n\ncallback(curElement,index,arry )\n\n{% endnote %}\n\n\n\n和 find  一样 只不过是返回 符合条件第一个`元素`的`索引 `否则 返回 `=1`\n\n-------\n\n# Arry/String   .indexOf()  .includes()\n\n这两方法适用 `数组` 和`字符串`.\n\n{% note info no-icon %}\narr.includes( value/stringToFind [, fromIndex])\n\nstr.indexOf(searchValue [, fromIndex])\n\n{% endnote %}\n\n\n\nfromIndex 开始查找位置   负数 就是从后查找\n\nfromIndex 大于数组或者字符串长度 返回-1\n\nindeOf  返回 `索引`  没有返回`-1`  且只返回第一个\n\nincludes 返回 `true` of `false`\n\n```js\nvar array = [2, 5, ,2,9];\nvar arrStr = [ \"apple\",\"banana\",\"lemon\"]\narray.indexOf(2);     \t\t// 0\narray.indexOf(7);    \t    // -1\narray.indexOf(9, 2); \t    // 2\narray.includes(2)     \t    //true\narray.includes(7)    \t    //false\narray.includes(9,2)         //true\narrStr.indexOf('banana')    //1\narrStr.includes('banana')    //true\nvar string = \"banana\"\nstring.indexOf(\"a\");        //1  \nstring.includes(\"a\");       //true\n```\n\n\n\n{% note info no-icon %}\n.includes()  和.some() 是有点类似的\n\n比如\n\n```js\nlet userForm = [1,2,3,4,5]\nuserForm.includes(4) //true\nuserForm.some(e=>e ===4 ) //true\n```\n\n{% endnote %}","slug":"前端/js/2020-10-22_Web_JS_Arr_find_indexOf_findIndex_some_includes","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cki0qxv5z000grtvt2i3v734n","content":"<h1 id=\"Array-find\"><a href=\"#Array-find\" class=\"headerlink\" title=\"Array.find()\"></a>Array.find()</h1><div class=\"note info no-icon flat\"><p>arr.find(callback[, thisArg])</p>\n<p>callback(curElement,index,arry )</p>\n</div>\n\n<div class=\"note warning no-icon flat\"><p>返回第一个符合条件的 <code>元素</code>的<code>值 </code> ,否则返回 undefined</p>\n<p>不改变原数组</p>\n</div>\n\n\n\n<p>基本不说了看下 thiArg</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = Person.nextId++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.nextId = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> jamie = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Jamie&quot;</span>),</span><br><span class=\"line\">      juliet = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Juliet&quot;</span>),</span><br><span class=\"line\">      peter = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Peter&quot;</span>),</span><br><span class=\"line\">\t  \tjay = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Jay&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [jamie, juliet, peter, jay];</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;football&quot;</span>,<span class=\"attr\">ownerID</span>:<span class=\"number\">3</span>&#125;\t  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// option 2: using &quot;this&quot; arg:</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = arr.find(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">p</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> p.id === <span class=\"built_in\">this</span>.ownerID;</span><br><span class=\"line\">&#125;, obj); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\"><span class=\"comment\">//Person &#123; name: &#x27;Jay&#x27;, id: 3 &#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Array-findIndex\"><a href=\"#Array-findIndex\" class=\"headerlink\" title=\"Array.findIndex()\"></a>Array.findIndex()</h1><div class=\"note info no-icon flat\"><p>arr.findIndex(callback[, thisArg])</p>\n<p>callback(curElement,index,arry )</p>\n</div>\n\n\n\n<p>和 find  一样 只不过是返回 符合条件第一个<code>元素</code>的<code>索引 </code>否则 返回 <code>=1</code></p>\n<hr>\n<h1 id=\"Arry-String-indexOf-includes\"><a href=\"#Arry-String-indexOf-includes\" class=\"headerlink\" title=\"Arry/String   .indexOf()  .includes()\"></a>Arry/String   .indexOf()  .includes()</h1><p>这两方法适用 <code>数组</code> 和<code>字符串</code>.</p>\n<div class=\"note info no-icon flat\"><p>arr.includes( value/stringToFind [, fromIndex])</p>\n<p>str.indexOf(searchValue [, fromIndex])</p>\n</div>\n\n\n\n<p>fromIndex 开始查找位置   负数 就是从后查找</p>\n<p>fromIndex 大于数组或者字符串长度 返回-1</p>\n<p>indeOf  返回 <code>索引</code>  没有返回<code>-1</code>  且只返回第一个</p>\n<p>includes 返回 <code>true</code> of <code>false</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">2</span>, <span class=\"number\">5</span>, ,<span class=\"number\">2</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrStr = [ <span class=\"string\">&quot;apple&quot;</span>,<span class=\"string\">&quot;banana&quot;</span>,<span class=\"string\">&quot;lemon&quot;</span>]</span><br><span class=\"line\">array.indexOf(<span class=\"number\">2</span>);     \t\t<span class=\"comment\">// 0</span></span><br><span class=\"line\">array.indexOf(<span class=\"number\">7</span>);    \t    <span class=\"comment\">// -1</span></span><br><span class=\"line\">array.indexOf(<span class=\"number\">9</span>, <span class=\"number\">2</span>); \t    <span class=\"comment\">// 2</span></span><br><span class=\"line\">array.includes(<span class=\"number\">2</span>)     \t    <span class=\"comment\">//true</span></span><br><span class=\"line\">array.includes(<span class=\"number\">7</span>)    \t    <span class=\"comment\">//false</span></span><br><span class=\"line\">array.includes(<span class=\"number\">9</span>,<span class=\"number\">2</span>)         <span class=\"comment\">//true</span></span><br><span class=\"line\">arrStr.indexOf(<span class=\"string\">&#x27;banana&#x27;</span>)    <span class=\"comment\">//1</span></span><br><span class=\"line\">arrStr.includes(<span class=\"string\">&#x27;banana&#x27;</span>)    <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> string = <span class=\"string\">&quot;banana&quot;</span></span><br><span class=\"line\">string.indexOf(<span class=\"string\">&quot;a&quot;</span>);        <span class=\"comment\">//1  </span></span><br><span class=\"line\">string.includes(<span class=\"string\">&quot;a&quot;</span>);       <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"note info no-icon flat\"><p>.includes()  和.some() 是有点类似的</p>\n<p>比如</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> userForm = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">userForm.includes(<span class=\"number\">4</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">userForm.some(<span class=\"function\"><span class=\"params\">e</span>=&gt;</span>e ===<span class=\"number\">4</span> ) <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n</div>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Array-find\"><a href=\"#Array-find\" class=\"headerlink\" title=\"Array.find()\"></a>Array.find()</h1><div class=\"note info no-icon flat\"><p>arr.find(callback[, thisArg])</p>\n<p>callback(curElement,index,arry )</p>\n</div>\n\n<div class=\"note warning no-icon flat\"><p>返回第一个符合条件的 <code>元素</code>的<code>值 </code> ,否则返回 undefined</p>\n<p>不改变原数组</p>\n</div>\n\n\n\n<p>基本不说了看下 thiArg</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = Person.nextId++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.nextId = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> jamie = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Jamie&quot;</span>),</span><br><span class=\"line\">      juliet = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Juliet&quot;</span>),</span><br><span class=\"line\">      peter = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Peter&quot;</span>),</span><br><span class=\"line\">\t  \tjay = <span class=\"keyword\">new</span> Person(<span class=\"string\">&quot;Jay&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [jamie, juliet, peter, jay];</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;football&quot;</span>,<span class=\"attr\">ownerID</span>:<span class=\"number\">3</span>&#125;\t  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// option 2: using &quot;this&quot; arg:</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = arr.find(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">p</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> p.id === <span class=\"built_in\">this</span>.ownerID;</span><br><span class=\"line\">&#125;, obj); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a)</span><br><span class=\"line\"><span class=\"comment\">//Person &#123; name: &#x27;Jay&#x27;, id: 3 &#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Array-findIndex\"><a href=\"#Array-findIndex\" class=\"headerlink\" title=\"Array.findIndex()\"></a>Array.findIndex()</h1><div class=\"note info no-icon flat\"><p>arr.findIndex(callback[, thisArg])</p>\n<p>callback(curElement,index,arry )</p>\n</div>\n\n\n\n<p>和 find  一样 只不过是返回 符合条件第一个<code>元素</code>的<code>索引 </code>否则 返回 <code>=1</code></p>\n<hr>\n<h1 id=\"Arry-String-indexOf-includes\"><a href=\"#Arry-String-indexOf-includes\" class=\"headerlink\" title=\"Arry/String   .indexOf()  .includes()\"></a>Arry/String   .indexOf()  .includes()</h1><p>这两方法适用 <code>数组</code> 和<code>字符串</code>.</p>\n<div class=\"note info no-icon flat\"><p>arr.includes( value/stringToFind [, fromIndex])</p>\n<p>str.indexOf(searchValue [, fromIndex])</p>\n</div>\n\n\n\n<p>fromIndex 开始查找位置   负数 就是从后查找</p>\n<p>fromIndex 大于数组或者字符串长度 返回-1</p>\n<p>indeOf  返回 <code>索引</code>  没有返回<code>-1</code>  且只返回第一个</p>\n<p>includes 返回 <code>true</code> of <code>false</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">2</span>, <span class=\"number\">5</span>, ,<span class=\"number\">2</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arrStr = [ <span class=\"string\">&quot;apple&quot;</span>,<span class=\"string\">&quot;banana&quot;</span>,<span class=\"string\">&quot;lemon&quot;</span>]</span><br><span class=\"line\">array.indexOf(<span class=\"number\">2</span>);     \t\t<span class=\"comment\">// 0</span></span><br><span class=\"line\">array.indexOf(<span class=\"number\">7</span>);    \t    <span class=\"comment\">// -1</span></span><br><span class=\"line\">array.indexOf(<span class=\"number\">9</span>, <span class=\"number\">2</span>); \t    <span class=\"comment\">// 2</span></span><br><span class=\"line\">array.includes(<span class=\"number\">2</span>)     \t    <span class=\"comment\">//true</span></span><br><span class=\"line\">array.includes(<span class=\"number\">7</span>)    \t    <span class=\"comment\">//false</span></span><br><span class=\"line\">array.includes(<span class=\"number\">9</span>,<span class=\"number\">2</span>)         <span class=\"comment\">//true</span></span><br><span class=\"line\">arrStr.indexOf(<span class=\"string\">&#x27;banana&#x27;</span>)    <span class=\"comment\">//1</span></span><br><span class=\"line\">arrStr.includes(<span class=\"string\">&#x27;banana&#x27;</span>)    <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> string = <span class=\"string\">&quot;banana&quot;</span></span><br><span class=\"line\">string.indexOf(<span class=\"string\">&quot;a&quot;</span>);        <span class=\"comment\">//1  </span></span><br><span class=\"line\">string.includes(<span class=\"string\">&quot;a&quot;</span>);       <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"note info no-icon flat\"><p>.includes()  和.some() 是有点类似的</p>\n<p>比如</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> userForm = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">userForm.includes(<span class=\"number\">4</span>) <span class=\"comment\">//true</span></span><br><span class=\"line\">userForm.some(<span class=\"function\"><span class=\"params\">e</span>=&gt;</span>e ===<span class=\"number\">4</span> ) <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n</div>"},{"title":"filter forEach every some reduce","date":"2020-09-01T16:00:00.000Z","updated":"2020-11-27T20:54:59.786Z","cover":"https://picgo.genji.xyz/blog/posts/picjs.png","description":"闲着没事又去 MDN 看了看","keywords":"js,filter,forEach,every,some,reduce,map","_content":"\n# table\n\n\n\n这些虽然经常用,但还是又认真看了下MDN \n\n放一张 有意思的图哈哈\n\n![img](https://picgo.genji.xyz/blog/posts/f18b33adf235b721b009eddbc00645e9_720w.jpg)\n\n| 方法          | 参数                               | 返回值     | 改变原数组 | tip               |      |\n| ------------- | ---------------------------------- | ---------- | :--------- | ----------------- | ---- |\n| \\.every\\(\\)   | \\(curE,index,arr\\),thisArg         | T/F        | ❌          | [].every() = true |      |\n| \\.some\\(\\)    | \\(curE,index,arr\\),thisArg         | T/F        | ❌          | [].some() = false |      |\n| \\.forEach\\(\\) | \\(curE,index,arr\\),thisArg         | undefinded | ❌          |                   |      |\n| \\.filter      | \\(curE,index,arr\\),thisArg         | 新数组     | ❌          |                   |      |\n| .map          | \\(curE,index,arr\\),thisArg         | 新数组     | ❌          |                   |      |\n| \\.reduce\\(\\)  | \\(acc,cur,index,arr\\),initialValue | 执行后结果 | ❌          |                   |      |\n\n# Array.filter()\n\n比较万能\n\n```js\nconst fruits = ['apple', 'banana', 'grapes', 'mango', 'orange'];\n\nconst filterItems = (query) => {\n  return fruits.filter((el) =>\n    el.toLowerCase().includes(query.toLowerCase())\n  );\n}\n\nfilterItems('an')       //['banana', 'mango', 'orange']\n\n```\n\n\n\n# Array.forEach()\n\n记三个比较特别的\n\n```js\nconst arr = [1,2,,7];\n//2-7 中间空的 不会被forEach()调用\narr.forEach((e)=>{console.log(e)})\n// 1\n// 2\n// 7\n\nvar words = ['one', 'two', 'three', 'four'];\nwords.forEach(function(word) {\n  console.log(word);\n  if (word === 'two') {\n    words.shift();\n  }\n});\n// one\n// two\n// four\n//个人理解 执行到 word = 'two'然后 删除了第一项 four 就提前了 \n\n\n//promise 或 async 最好对造成的执行顺序影响多加考虑，否则容易出现错误。\nlet ratings = [5, 4, 5];\nlet sum = 0;\nlet sumFunction = async function (a, b) {\n    return a + b;\n} \nratings.forEach(async function(rating) {\n    sum = await sumFunction(sum, rating);\n})\nconsole.log(sum)   //0\nsetTimeout(() => {\nconsole.log(sum);\n}, 2000);    //5\n\n```\n\n\n\n\n\n# Arry.every()\n\n\n 有false =>false    全true =>true   串联\n\n{% note warning no-icon %}\n\n空数组 都返回true \n\n`callback` 只会为那些已经被赋值的索引调用。不会为那些被删除或从未被赋值的索引调用。  \n\n{% endnote %}\n\n```js\n[12, 5, 8, 130, 44].every(x => x >= 10) //false\n\n\n\nlet res = [12, 15, 18, ,44].every((x,index) => {\n\tconsole.log('index: ', index);\n\nreturn x >= 10\n\n})\nconsole.log(res)   \n//index:  0\n//index:  1\n//index:  2\n//index:  4\n//res  true\n\n```\n# Arry.some()\n和ever 类似\n\n\n\n\n\n# map\n\n```js\nres.map(item,index,ary=> {name:item.name,\n                         \tavatar:item.avatar\n                          sex:item.sex\n                         } )\n\nconst \n\n```\n\n\n\n# Array.reduce()\n\n{% note info no-icon %}\narr.reduce(callback[accumulator, currentValue, currentIndex, array], initialValue)\n{% endnote %}\n\n```\ncallback （执行数组中每个值的函数，包含四个参数）\n\t\t1、previousValue （上一次调用回调返回的值，或者是提供的初始值\t\t\t\t\t\t（initialValue））\n    2、currentValue （数组中当前被处理的元素）\n    3、index （当前元素在数组中的索引）\n    4、array （调用 reduce 的数组）\n\ninitialValue （作为第一次调用 callback 的第一个参数。）可以使数字也可以是{}  []\n\n** 不改变原数组\n```\n\n{% note info no-icon %}\n对空数组使用 `reduce` 会报错,但是设置了 `初始值`就不会报错了.\n{% endnote %}\n\n```js\nvar  arr = [];\nvar sum = arr.reduce(function(prev, cur, index, arr) {\n    console.log(prev, cur, index);\n    return prev + cur;\n}，0)\nconsole.log(arr, sum); // [] 0\n\n\n所以当 数组不能确定时,或者有可能是空数组 最好设定初始值 可以是0 可以是[]\n```\n\n\n\n\n\n转载 MDN 关于初始值的说明\n\n```js\nvar maxCallback = ( acc, cur ) => Math.max( acc.x, cur.x );\nvar maxCallback2 = ( max, cur ) => Math.max( max, cur );\n\n// reduce() without initialValue\n[ { x: 22 }, { x: 42 } ].reduce( maxCallback ); // 42\n[ { x: 22 }            ].reduce( maxCallback ); // { x: 22 }\n[                      ].reduce( maxCallback ); // TypeError\n\n// map/reduce; better solution, also works for empty or larger arrays\n[ { x: 22 }, { x: 42 } ].map( el => el.x )\n                        .reduce( maxCallback2, -Infinity );\n```\n\n\n\n## 一些简单用法\n\n```js\nvar  arr = [1, 2, 3, 4];\nvar Sum = arr.reduce( (a,b) => a + b ) // 求和\nvar Quadratic = arr.reduce( (a,b) => a * b ) //乘积\nvar QuadraticSum = arr.reduce( (a,b)=>a + b*b) //平方和\nvar obj = [{num:22},{num:33},{num:24}]\nvar Max = arr.reduce( (a,b)=> Math.max(a.num,b.num) )\n```\n\n## 一些好用的\n\n元素出现次数\n\n```js\nlet fruit = ['apple', 'banana', 'orange', 'lemon', 'apple','bear','lemon']\n\nlet fruitNum = fruit.reduce( (pre,cur) =>{\n  \tcur in pre ? pre[cur]++ :pre[cur] = 1 \n  \treturn pre //千万别忘了 return\n} ,{})//这里的初始值就是{}\n\n///fruitNum { apple: 2, banana: 1, orange: 1, lemon: 2, bear: 1 }\n```\n\n数组去重\n\n```js\nlet fruit = ['apple', 'banana', 'orange', 'lemon', 'apple','bear','lemon']\n\nlet newFruit = fruit.reduce( (pre,cur) =>\n\t\tpre.includes( cur ) ?pre:pre.concat(cur)\n                            \n ,[])\nconsole.log(\"newFruit\", newFruit)\n\n//就一行  省略了{ }和 return\n```\n\n{% note warning %}\n\n​\t\t`pre.includes( cur ) ?pre:pre.concat(cur)`\n\n注意这里你把 concat 换成push 就会报错\n\n\n\n要用push 得这么写,因为啊push() return 的数组的length\n\n```js\nlet newFruit = fruit.reduce( (pre,cur) =>\n{\n\tif(pre.includes(cur)){\n\t\treturn pre\n\t}else{\n\t\tpre.push(cur)\n\t\treturn pre\n\t}\n}\n ,[])\nconsole.log(\"newFruit\", newFruit)\n```\n{% endnote %}\n\n\n\n二维数组 转一维\n\n```js\nlet arr = [[0, 1], [2, 3], [4, 5]]\nlet newArr = arr.reduce((pre,cur)=>pre.concat(cur),[])\nconsole.log(newArr); \n\n当然 你可以用es6的flat\nlet newArr = arr.flat()\n也可以用apply\nlet newArr = [].concat.apply([],arr)\nsplit 方法 特别适用超级多维\nlet  newArr = (arr + '').split(',')\nconsole.log(lists.map(Number))\n\n```\n\n对象 value 处理\n\n```js\nvar res = [ {name:'lili',like:'read'},\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t{name:'hah',like:'play'},\n            {name:'ligang',like:'run'}]\n\nvar arr = res.reduce( (a,b)=> a.concat(b.like),[])\n```\n\n\n","source":"_posts/前端/js/2020-10-22_Web_JS_Arr_loop.md","raw":"---\ntitle: filter forEach every some reduce \ndate: 2020-09-02 00:00:00\nupdated:\ncover: https://picgo.genji.xyz/blog/posts/picjs.png\ndescription: 闲着没事又去 MDN 看了看\ntags: [js, Array]\ncategories: [前端, js]\nkeywords: \"js,filter,forEach,every,some,reduce,map\"\n---\n\n# table\n\n\n\n这些虽然经常用,但还是又认真看了下MDN \n\n放一张 有意思的图哈哈\n\n![img](https://picgo.genji.xyz/blog/posts/f18b33adf235b721b009eddbc00645e9_720w.jpg)\n\n| 方法          | 参数                               | 返回值     | 改变原数组 | tip               |      |\n| ------------- | ---------------------------------- | ---------- | :--------- | ----------------- | ---- |\n| \\.every\\(\\)   | \\(curE,index,arr\\),thisArg         | T/F        | ❌          | [].every() = true |      |\n| \\.some\\(\\)    | \\(curE,index,arr\\),thisArg         | T/F        | ❌          | [].some() = false |      |\n| \\.forEach\\(\\) | \\(curE,index,arr\\),thisArg         | undefinded | ❌          |                   |      |\n| \\.filter      | \\(curE,index,arr\\),thisArg         | 新数组     | ❌          |                   |      |\n| .map          | \\(curE,index,arr\\),thisArg         | 新数组     | ❌          |                   |      |\n| \\.reduce\\(\\)  | \\(acc,cur,index,arr\\),initialValue | 执行后结果 | ❌          |                   |      |\n\n# Array.filter()\n\n比较万能\n\n```js\nconst fruits = ['apple', 'banana', 'grapes', 'mango', 'orange'];\n\nconst filterItems = (query) => {\n  return fruits.filter((el) =>\n    el.toLowerCase().includes(query.toLowerCase())\n  );\n}\n\nfilterItems('an')       //['banana', 'mango', 'orange']\n\n```\n\n\n\n# Array.forEach()\n\n记三个比较特别的\n\n```js\nconst arr = [1,2,,7];\n//2-7 中间空的 不会被forEach()调用\narr.forEach((e)=>{console.log(e)})\n// 1\n// 2\n// 7\n\nvar words = ['one', 'two', 'three', 'four'];\nwords.forEach(function(word) {\n  console.log(word);\n  if (word === 'two') {\n    words.shift();\n  }\n});\n// one\n// two\n// four\n//个人理解 执行到 word = 'two'然后 删除了第一项 four 就提前了 \n\n\n//promise 或 async 最好对造成的执行顺序影响多加考虑，否则容易出现错误。\nlet ratings = [5, 4, 5];\nlet sum = 0;\nlet sumFunction = async function (a, b) {\n    return a + b;\n} \nratings.forEach(async function(rating) {\n    sum = await sumFunction(sum, rating);\n})\nconsole.log(sum)   //0\nsetTimeout(() => {\nconsole.log(sum);\n}, 2000);    //5\n\n```\n\n\n\n\n\n# Arry.every()\n\n\n 有false =>false    全true =>true   串联\n\n{% note warning no-icon %}\n\n空数组 都返回true \n\n`callback` 只会为那些已经被赋值的索引调用。不会为那些被删除或从未被赋值的索引调用。  \n\n{% endnote %}\n\n```js\n[12, 5, 8, 130, 44].every(x => x >= 10) //false\n\n\n\nlet res = [12, 15, 18, ,44].every((x,index) => {\n\tconsole.log('index: ', index);\n\nreturn x >= 10\n\n})\nconsole.log(res)   \n//index:  0\n//index:  1\n//index:  2\n//index:  4\n//res  true\n\n```\n# Arry.some()\n和ever 类似\n\n\n\n\n\n# map\n\n```js\nres.map(item,index,ary=> {name:item.name,\n                         \tavatar:item.avatar\n                          sex:item.sex\n                         } )\n\nconst \n\n```\n\n\n\n# Array.reduce()\n\n{% note info no-icon %}\narr.reduce(callback[accumulator, currentValue, currentIndex, array], initialValue)\n{% endnote %}\n\n```\ncallback （执行数组中每个值的函数，包含四个参数）\n\t\t1、previousValue （上一次调用回调返回的值，或者是提供的初始值\t\t\t\t\t\t（initialValue））\n    2、currentValue （数组中当前被处理的元素）\n    3、index （当前元素在数组中的索引）\n    4、array （调用 reduce 的数组）\n\ninitialValue （作为第一次调用 callback 的第一个参数。）可以使数字也可以是{}  []\n\n** 不改变原数组\n```\n\n{% note info no-icon %}\n对空数组使用 `reduce` 会报错,但是设置了 `初始值`就不会报错了.\n{% endnote %}\n\n```js\nvar  arr = [];\nvar sum = arr.reduce(function(prev, cur, index, arr) {\n    console.log(prev, cur, index);\n    return prev + cur;\n}，0)\nconsole.log(arr, sum); // [] 0\n\n\n所以当 数组不能确定时,或者有可能是空数组 最好设定初始值 可以是0 可以是[]\n```\n\n\n\n\n\n转载 MDN 关于初始值的说明\n\n```js\nvar maxCallback = ( acc, cur ) => Math.max( acc.x, cur.x );\nvar maxCallback2 = ( max, cur ) => Math.max( max, cur );\n\n// reduce() without initialValue\n[ { x: 22 }, { x: 42 } ].reduce( maxCallback ); // 42\n[ { x: 22 }            ].reduce( maxCallback ); // { x: 22 }\n[                      ].reduce( maxCallback ); // TypeError\n\n// map/reduce; better solution, also works for empty or larger arrays\n[ { x: 22 }, { x: 42 } ].map( el => el.x )\n                        .reduce( maxCallback2, -Infinity );\n```\n\n\n\n## 一些简单用法\n\n```js\nvar  arr = [1, 2, 3, 4];\nvar Sum = arr.reduce( (a,b) => a + b ) // 求和\nvar Quadratic = arr.reduce( (a,b) => a * b ) //乘积\nvar QuadraticSum = arr.reduce( (a,b)=>a + b*b) //平方和\nvar obj = [{num:22},{num:33},{num:24}]\nvar Max = arr.reduce( (a,b)=> Math.max(a.num,b.num) )\n```\n\n## 一些好用的\n\n元素出现次数\n\n```js\nlet fruit = ['apple', 'banana', 'orange', 'lemon', 'apple','bear','lemon']\n\nlet fruitNum = fruit.reduce( (pre,cur) =>{\n  \tcur in pre ? pre[cur]++ :pre[cur] = 1 \n  \treturn pre //千万别忘了 return\n} ,{})//这里的初始值就是{}\n\n///fruitNum { apple: 2, banana: 1, orange: 1, lemon: 2, bear: 1 }\n```\n\n数组去重\n\n```js\nlet fruit = ['apple', 'banana', 'orange', 'lemon', 'apple','bear','lemon']\n\nlet newFruit = fruit.reduce( (pre,cur) =>\n\t\tpre.includes( cur ) ?pre:pre.concat(cur)\n                            \n ,[])\nconsole.log(\"newFruit\", newFruit)\n\n//就一行  省略了{ }和 return\n```\n\n{% note warning %}\n\n​\t\t`pre.includes( cur ) ?pre:pre.concat(cur)`\n\n注意这里你把 concat 换成push 就会报错\n\n\n\n要用push 得这么写,因为啊push() return 的数组的length\n\n```js\nlet newFruit = fruit.reduce( (pre,cur) =>\n{\n\tif(pre.includes(cur)){\n\t\treturn pre\n\t}else{\n\t\tpre.push(cur)\n\t\treturn pre\n\t}\n}\n ,[])\nconsole.log(\"newFruit\", newFruit)\n```\n{% endnote %}\n\n\n\n二维数组 转一维\n\n```js\nlet arr = [[0, 1], [2, 3], [4, 5]]\nlet newArr = arr.reduce((pre,cur)=>pre.concat(cur),[])\nconsole.log(newArr); \n\n当然 你可以用es6的flat\nlet newArr = arr.flat()\n也可以用apply\nlet newArr = [].concat.apply([],arr)\nsplit 方法 特别适用超级多维\nlet  newArr = (arr + '').split(',')\nconsole.log(lists.map(Number))\n\n```\n\n对象 value 处理\n\n```js\nvar res = [ {name:'lili',like:'read'},\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t{name:'hah',like:'play'},\n            {name:'ligang',like:'run'}]\n\nvar arr = res.reduce( (a,b)=> a.concat(b.like),[])\n```\n\n\n","slug":"前端/js/2020-10-22_Web_JS_Arr_loop","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cki0qxv61000jrtvtbjn14f2j","content":"<h1 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h1><p>这些虽然经常用,但还是又认真看了下MDN </p>\n<p>放一张 有意思的图哈哈</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/f18b33adf235b721b009eddbc00645e9_720w.jpg\" alt=\"img\"></p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>参数</th>\n<th>返回值</th>\n<th align=\"left\">改变原数组</th>\n<th>tip</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>.every()</td>\n<td>(curE,index,arr),thisArg</td>\n<td>T/F</td>\n<td align=\"left\">❌</td>\n<td>[].every() = true</td>\n<td></td>\n</tr>\n<tr>\n<td>.some()</td>\n<td>(curE,index,arr),thisArg</td>\n<td>T/F</td>\n<td align=\"left\">❌</td>\n<td>[].some() = false</td>\n<td></td>\n</tr>\n<tr>\n<td>.forEach()</td>\n<td>(curE,index,arr),thisArg</td>\n<td>undefinded</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>.filter</td>\n<td>(curE,index,arr),thisArg</td>\n<td>新数组</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>.map</td>\n<td>(curE,index,arr),thisArg</td>\n<td>新数组</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>.reduce()</td>\n<td>(acc,cur,index,arr),initialValue</td>\n<td>执行后结果</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"Array-filter\"><a href=\"#Array-filter\" class=\"headerlink\" title=\"Array.filter()\"></a>Array.filter()</h1><p>比较万能</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;banana&#x27;</span>, <span class=\"string\">&#x27;grapes&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> filterItems = <span class=\"function\">(<span class=\"params\">query</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fruits.filter(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span></span><br><span class=\"line\">    el.toLowerCase().includes(query.toLowerCase())</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filterItems(<span class=\"string\">&#x27;an&#x27;</span>)       <span class=\"comment\">//[&#x27;banana&#x27;, &#x27;mango&#x27;, &#x27;orange&#x27;]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Array-forEach\"><a href=\"#Array-forEach\" class=\"headerlink\" title=\"Array.forEach()\"></a>Array.forEach()</h1><p>记三个比较特别的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,,<span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"comment\">//2-7 中间空的 不会被forEach()调用</span></span><br><span class=\"line\">arr.forEach(<span class=\"function\">(<span class=\"params\">e</span>)=&gt;</span>&#123;<span class=\"built_in\">console</span>.log(e)&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"comment\">// 7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">&#x27;one&#x27;</span>, <span class=\"string\">&#x27;two&#x27;</span>, <span class=\"string\">&#x27;three&#x27;</span>, <span class=\"string\">&#x27;four&#x27;</span>];</span><br><span class=\"line\">words.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">word</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(word);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (word === <span class=\"string\">&#x27;two&#x27;</span>) &#123;</span><br><span class=\"line\">    words.shift();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// one</span></span><br><span class=\"line\"><span class=\"comment\">// two</span></span><br><span class=\"line\"><span class=\"comment\">// four</span></span><br><span class=\"line\"><span class=\"comment\">//个人理解 执行到 word = &#x27;two&#x27;然后 删除了第一项 four 就提前了 </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//promise 或 async 最好对造成的执行顺序影响多加考虑，否则容易出现错误。</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ratings = [<span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> sumFunction = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">ratings.forEach(<span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">rating</span>) </span>&#123;</span><br><span class=\"line\">    sum = <span class=\"keyword\">await</span> sumFunction(sum, rating);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum)   <span class=\"comment\">//0</span></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum);</span><br><span class=\"line\">&#125;, <span class=\"number\">2000</span>);    <span class=\"comment\">//5</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Arry-every\"><a href=\"#Arry-every\" class=\"headerlink\" title=\"Arry.every()\"></a>Arry.every()</h1><p> 有false =&gt;false    全true =&gt;true   串联</p>\n<div class=\"note warning no-icon flat\"><p>空数组 都返回true </p>\n<p><code>callback</code> 只会为那些已经被赋值的索引调用。不会为那些被删除或从未被赋值的索引调用。  </p>\n</div>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x &gt;= <span class=\"number\">10</span>) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> res = [<span class=\"number\">12</span>, <span class=\"number\">15</span>, <span class=\"number\">18</span>, ,<span class=\"number\">44</span>].every(<span class=\"function\">(<span class=\"params\">x,index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;index: &#x27;</span>, index);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> x &gt;= <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res)   </span><br><span class=\"line\"><span class=\"comment\">//index:  0</span></span><br><span class=\"line\"><span class=\"comment\">//index:  1</span></span><br><span class=\"line\"><span class=\"comment\">//index:  2</span></span><br><span class=\"line\"><span class=\"comment\">//index:  4</span></span><br><span class=\"line\"><span class=\"comment\">//res  true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"Arry-some\"><a href=\"#Arry-some\" class=\"headerlink\" title=\"Arry.some()\"></a>Arry.some()</h1><p>和ever 类似</p>\n<h1 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.map(item,index,<span class=\"function\"><span class=\"params\">ary</span>=&gt;</span> &#123;<span class=\"attr\">name</span>:item.name,</span><br><span class=\"line\">                         \tavatar:item.avatar</span><br><span class=\"line\">                          sex:item.sex</span><br><span class=\"line\">                         &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Array-reduce\"><a href=\"#Array-reduce\" class=\"headerlink\" title=\"Array.reduce()\"></a>Array.reduce()</h1><div class=\"note info no-icon flat\"><p>arr.reduce(callback[accumulator, currentValue, currentIndex, array], initialValue)</p>\n</div>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callback （执行数组中每个值的函数，包含四个参数）</span><br><span class=\"line\">\t\t1、previousValue （上一次调用回调返回的值，或者是提供的初始值\t\t\t\t\t\t（initialValue））</span><br><span class=\"line\">    2、currentValue （数组中当前被处理的元素）</span><br><span class=\"line\">    3、index （当前元素在数组中的索引）</span><br><span class=\"line\">    4、array （调用 reduce 的数组）</span><br><span class=\"line\"></span><br><span class=\"line\">initialValue （作为第一次调用 callback 的第一个参数。）可以使数字也可以是&#123;&#125;  []</span><br><span class=\"line\"></span><br><span class=\"line\">** 不改变原数组</span><br></pre></td></tr></table></figure>\n\n<div class=\"note info no-icon flat\"><p>对空数组使用 <code>reduce</code> 会报错,但是设置了 <code>初始值</code>就不会报错了.</p>\n</div>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> sum = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, cur, index, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(prev, cur, index);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur;</span><br><span class=\"line\">&#125;，<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, sum); <span class=\"comment\">// [] 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">所以当 数组不能确定时,或者有可能是空数组 最好设定初始值 可以是<span class=\"number\">0</span> 可以是[]</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>转载 MDN 关于初始值的说明</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxCallback = <span class=\"function\">(<span class=\"params\"> acc, cur </span>) =&gt;</span> <span class=\"built_in\">Math</span>.max( acc.x, cur.x );</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxCallback2 = <span class=\"function\">(<span class=\"params\"> max, cur </span>) =&gt;</span> <span class=\"built_in\">Math</span>.max( max, cur );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reduce() without initialValue</span></span><br><span class=\"line\">[ &#123; <span class=\"attr\">x</span>: <span class=\"number\">22</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">42</span> &#125; ].reduce( maxCallback ); <span class=\"comment\">// 42</span></span><br><span class=\"line\">[ &#123; <span class=\"attr\">x</span>: <span class=\"number\">22</span> &#125;            ].reduce( maxCallback ); <span class=\"comment\">// &#123; x: 22 &#125;</span></span><br><span class=\"line\">[                      ].reduce( maxCallback ); <span class=\"comment\">// TypeError</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// map/reduce; better solution, also works for empty or larger arrays</span></span><br><span class=\"line\">[ &#123; <span class=\"attr\">x</span>: <span class=\"number\">22</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">42</span> &#125; ].map( <span class=\"function\"><span class=\"params\">el</span> =&gt;</span> el.x )</span><br><span class=\"line\">                        .reduce( maxCallback2, -<span class=\"literal\">Infinity</span> );</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"一些简单用法\"><a href=\"#一些简单用法\" class=\"headerlink\" title=\"一些简单用法\"></a>一些简单用法</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> Sum = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a + b ) <span class=\"comment\">// 求和</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Quadratic = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a * b ) <span class=\"comment\">//乘积</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> QuadraticSum = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a + b*b) <span class=\"comment\">//平方和</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = [&#123;<span class=\"attr\">num</span>:<span class=\"number\">22</span>&#125;,&#123;<span class=\"attr\">num</span>:<span class=\"number\">33</span>&#125;,&#123;<span class=\"attr\">num</span>:<span class=\"number\">24</span>&#125;]</span><br><span class=\"line\"><span class=\"keyword\">var</span> Max = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> <span class=\"built_in\">Math</span>.max(a.num,b.num) )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一些好用的\"><a href=\"#一些好用的\" class=\"headerlink\" title=\"一些好用的\"></a>一些好用的</h2><p>元素出现次数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fruit = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;banana&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;lemon&#x27;</span>, <span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;bear&#x27;</span>,<span class=\"string\">&#x27;lemon&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> fruitNum = fruit.reduce( <span class=\"function\">(<span class=\"params\">pre,cur</span>) =&gt;</span>&#123;</span><br><span class=\"line\">  \tcur <span class=\"keyword\">in</span> pre ? pre[cur]++ :pre[cur] = <span class=\"number\">1</span> </span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> pre <span class=\"comment\">//千万别忘了 return</span></span><br><span class=\"line\">&#125; ,&#123;&#125;)<span class=\"comment\">//这里的初始值就是&#123;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///fruitNum &#123; apple: 2, banana: 1, orange: 1, lemon: 2, bear: 1 &#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>数组去重</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fruit = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;banana&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;lemon&#x27;</span>, <span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;bear&#x27;</span>,<span class=\"string\">&#x27;lemon&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> newFruit = fruit.reduce( <span class=\"function\">(<span class=\"params\">pre,cur</span>) =&gt;</span></span><br><span class=\"line\">\t\tpre.includes( cur ) ?pre:pre.concat(cur)</span><br><span class=\"line\">                            </span><br><span class=\"line\"> ,[])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;newFruit&quot;</span>, newFruit)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//就一行  省略了&#123; &#125;和 return</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning flat\"><p>​        <code>pre.includes( cur ) ?pre:pre.concat(cur)</code></p>\n<p>注意这里你把 concat 换成push 就会报错</p>\n<p>要用push 得这么写,因为啊push() return 的数组的length</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> newFruit = fruit.reduce( <span class=\"function\">(<span class=\"params\">pre,cur</span>) =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(pre.includes(cur))&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> pre</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tpre.push(cur)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> pre</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> ,[])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;newFruit&quot;</span>, newFruit)</span><br></pre></td></tr></table></figure></div>\n\n\n\n<p>二维数组 转一维</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [[<span class=\"number\">0</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>]]</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr = arr.reduce(<span class=\"function\">(<span class=\"params\">pre,cur</span>)=&gt;</span>pre.concat(cur),[])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr); </span><br><span class=\"line\"></span><br><span class=\"line\">当然 你可以用es6的flat</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr = arr.flat()</span><br><span class=\"line\">也可以用apply</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr = [].concat.apply([],arr)</span><br><span class=\"line\">split 方法 特别适用超级多维</span><br><span class=\"line\"><span class=\"keyword\">let</span>  newArr = (arr + <span class=\"string\">&#x27;&#x27;</span>).split(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(lists.map(<span class=\"built_in\">Number</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>对象 value 处理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> res = [ &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;lili&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;read&#x27;</span>&#125;,\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;hah&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;play&#x27;</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;ligang&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;run&#x27;</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = res.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> a.concat(b.like),[])</span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h1><p>这些虽然经常用,但还是又认真看了下MDN </p>\n<p>放一张 有意思的图哈哈</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/f18b33adf235b721b009eddbc00645e9_720w.jpg\" alt=\"img\"></p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>参数</th>\n<th>返回值</th>\n<th align=\"left\">改变原数组</th>\n<th>tip</th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>.every()</td>\n<td>(curE,index,arr),thisArg</td>\n<td>T/F</td>\n<td align=\"left\">❌</td>\n<td>[].every() = true</td>\n<td></td>\n</tr>\n<tr>\n<td>.some()</td>\n<td>(curE,index,arr),thisArg</td>\n<td>T/F</td>\n<td align=\"left\">❌</td>\n<td>[].some() = false</td>\n<td></td>\n</tr>\n<tr>\n<td>.forEach()</td>\n<td>(curE,index,arr),thisArg</td>\n<td>undefinded</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>.filter</td>\n<td>(curE,index,arr),thisArg</td>\n<td>新数组</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>.map</td>\n<td>(curE,index,arr),thisArg</td>\n<td>新数组</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>.reduce()</td>\n<td>(acc,cur,index,arr),initialValue</td>\n<td>执行后结果</td>\n<td align=\"left\">❌</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"Array-filter\"><a href=\"#Array-filter\" class=\"headerlink\" title=\"Array.filter()\"></a>Array.filter()</h1><p>比较万能</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fruits = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;banana&#x27;</span>, <span class=\"string\">&#x27;grapes&#x27;</span>, <span class=\"string\">&#x27;mango&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> filterItems = <span class=\"function\">(<span class=\"params\">query</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fruits.filter(<span class=\"function\">(<span class=\"params\">el</span>) =&gt;</span></span><br><span class=\"line\">    el.toLowerCase().includes(query.toLowerCase())</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filterItems(<span class=\"string\">&#x27;an&#x27;</span>)       <span class=\"comment\">//[&#x27;banana&#x27;, &#x27;mango&#x27;, &#x27;orange&#x27;]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Array-forEach\"><a href=\"#Array-forEach\" class=\"headerlink\" title=\"Array.forEach()\"></a>Array.forEach()</h1><p>记三个比较特别的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,,<span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"comment\">//2-7 中间空的 不会被forEach()调用</span></span><br><span class=\"line\">arr.forEach(<span class=\"function\">(<span class=\"params\">e</span>)=&gt;</span>&#123;<span class=\"built_in\">console</span>.log(e)&#125;)</span><br><span class=\"line\"><span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"comment\">// 7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">&#x27;one&#x27;</span>, <span class=\"string\">&#x27;two&#x27;</span>, <span class=\"string\">&#x27;three&#x27;</span>, <span class=\"string\">&#x27;four&#x27;</span>];</span><br><span class=\"line\">words.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">word</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(word);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (word === <span class=\"string\">&#x27;two&#x27;</span>) &#123;</span><br><span class=\"line\">    words.shift();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// one</span></span><br><span class=\"line\"><span class=\"comment\">// two</span></span><br><span class=\"line\"><span class=\"comment\">// four</span></span><br><span class=\"line\"><span class=\"comment\">//个人理解 执行到 word = &#x27;two&#x27;然后 删除了第一项 four 就提前了 </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//promise 或 async 最好对造成的执行顺序影响多加考虑，否则容易出现错误。</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> ratings = [<span class=\"number\">5</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> sumFunction = <span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\">ratings.forEach(<span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">rating</span>) </span>&#123;</span><br><span class=\"line\">    sum = <span class=\"keyword\">await</span> sumFunction(sum, rating);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum)   <span class=\"comment\">//0</span></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sum);</span><br><span class=\"line\">&#125;, <span class=\"number\">2000</span>);    <span class=\"comment\">//5</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Arry-every\"><a href=\"#Arry-every\" class=\"headerlink\" title=\"Arry.every()\"></a>Arry.every()</h1><p> 有false =&gt;false    全true =&gt;true   串联</p>\n<div class=\"note warning no-icon flat\"><p>空数组 都返回true </p>\n<p><code>callback</code> 只会为那些已经被赋值的索引调用。不会为那些被删除或从未被赋值的索引调用。  </p>\n</div>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">8</span>, <span class=\"number\">130</span>, <span class=\"number\">44</span>].every(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x &gt;= <span class=\"number\">10</span>) <span class=\"comment\">//false</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> res = [<span class=\"number\">12</span>, <span class=\"number\">15</span>, <span class=\"number\">18</span>, ,<span class=\"number\">44</span>].every(<span class=\"function\">(<span class=\"params\">x,index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;index: &#x27;</span>, index);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> x &gt;= <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(res)   </span><br><span class=\"line\"><span class=\"comment\">//index:  0</span></span><br><span class=\"line\"><span class=\"comment\">//index:  1</span></span><br><span class=\"line\"><span class=\"comment\">//index:  2</span></span><br><span class=\"line\"><span class=\"comment\">//index:  4</span></span><br><span class=\"line\"><span class=\"comment\">//res  true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"Arry-some\"><a href=\"#Arry-some\" class=\"headerlink\" title=\"Arry.some()\"></a>Arry.some()</h1><p>和ever 类似</p>\n<h1 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.map(item,index,<span class=\"function\"><span class=\"params\">ary</span>=&gt;</span> &#123;<span class=\"attr\">name</span>:item.name,</span><br><span class=\"line\">                         \tavatar:item.avatar</span><br><span class=\"line\">                          sex:item.sex</span><br><span class=\"line\">                         &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Array-reduce\"><a href=\"#Array-reduce\" class=\"headerlink\" title=\"Array.reduce()\"></a>Array.reduce()</h1><div class=\"note info no-icon flat\"><p>arr.reduce(callback[accumulator, currentValue, currentIndex, array], initialValue)</p>\n</div>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">callback （执行数组中每个值的函数，包含四个参数）</span><br><span class=\"line\">\t\t1、previousValue （上一次调用回调返回的值，或者是提供的初始值\t\t\t\t\t\t（initialValue））</span><br><span class=\"line\">    2、currentValue （数组中当前被处理的元素）</span><br><span class=\"line\">    3、index （当前元素在数组中的索引）</span><br><span class=\"line\">    4、array （调用 reduce 的数组）</span><br><span class=\"line\"></span><br><span class=\"line\">initialValue （作为第一次调用 callback 的第一个参数。）可以使数字也可以是&#123;&#125;  []</span><br><span class=\"line\"></span><br><span class=\"line\">** 不改变原数组</span><br></pre></td></tr></table></figure>\n\n<div class=\"note info no-icon flat\"><p>对空数组使用 <code>reduce</code> 会报错,但是设置了 <code>初始值</code>就不会报错了.</p>\n</div>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> sum = arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, cur, index, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(prev, cur, index);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev + cur;</span><br><span class=\"line\">&#125;，<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr, sum); <span class=\"comment\">// [] 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">所以当 数组不能确定时,或者有可能是空数组 最好设定初始值 可以是<span class=\"number\">0</span> 可以是[]</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>转载 MDN 关于初始值的说明</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> maxCallback = <span class=\"function\">(<span class=\"params\"> acc, cur </span>) =&gt;</span> <span class=\"built_in\">Math</span>.max( acc.x, cur.x );</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxCallback2 = <span class=\"function\">(<span class=\"params\"> max, cur </span>) =&gt;</span> <span class=\"built_in\">Math</span>.max( max, cur );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// reduce() without initialValue</span></span><br><span class=\"line\">[ &#123; <span class=\"attr\">x</span>: <span class=\"number\">22</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">42</span> &#125; ].reduce( maxCallback ); <span class=\"comment\">// 42</span></span><br><span class=\"line\">[ &#123; <span class=\"attr\">x</span>: <span class=\"number\">22</span> &#125;            ].reduce( maxCallback ); <span class=\"comment\">// &#123; x: 22 &#125;</span></span><br><span class=\"line\">[                      ].reduce( maxCallback ); <span class=\"comment\">// TypeError</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// map/reduce; better solution, also works for empty or larger arrays</span></span><br><span class=\"line\">[ &#123; <span class=\"attr\">x</span>: <span class=\"number\">22</span> &#125;, &#123; <span class=\"attr\">x</span>: <span class=\"number\">42</span> &#125; ].map( <span class=\"function\"><span class=\"params\">el</span> =&gt;</span> el.x )</span><br><span class=\"line\">                        .reduce( maxCallback2, -<span class=\"literal\">Infinity</span> );</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"一些简单用法\"><a href=\"#一些简单用法\" class=\"headerlink\" title=\"一些简单用法\"></a>一些简单用法</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span>  arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> Sum = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a + b ) <span class=\"comment\">// 求和</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Quadratic = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a * b ) <span class=\"comment\">//乘积</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> QuadraticSum = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a + b*b) <span class=\"comment\">//平方和</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = [&#123;<span class=\"attr\">num</span>:<span class=\"number\">22</span>&#125;,&#123;<span class=\"attr\">num</span>:<span class=\"number\">33</span>&#125;,&#123;<span class=\"attr\">num</span>:<span class=\"number\">24</span>&#125;]</span><br><span class=\"line\"><span class=\"keyword\">var</span> Max = arr.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> <span class=\"built_in\">Math</span>.max(a.num,b.num) )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一些好用的\"><a href=\"#一些好用的\" class=\"headerlink\" title=\"一些好用的\"></a>一些好用的</h2><p>元素出现次数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fruit = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;banana&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;lemon&#x27;</span>, <span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;bear&#x27;</span>,<span class=\"string\">&#x27;lemon&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> fruitNum = fruit.reduce( <span class=\"function\">(<span class=\"params\">pre,cur</span>) =&gt;</span>&#123;</span><br><span class=\"line\">  \tcur <span class=\"keyword\">in</span> pre ? pre[cur]++ :pre[cur] = <span class=\"number\">1</span> </span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> pre <span class=\"comment\">//千万别忘了 return</span></span><br><span class=\"line\">&#125; ,&#123;&#125;)<span class=\"comment\">//这里的初始值就是&#123;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///fruitNum &#123; apple: 2, banana: 1, orange: 1, lemon: 2, bear: 1 &#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>数组去重</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fruit = [<span class=\"string\">&#x27;apple&#x27;</span>, <span class=\"string\">&#x27;banana&#x27;</span>, <span class=\"string\">&#x27;orange&#x27;</span>, <span class=\"string\">&#x27;lemon&#x27;</span>, <span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;bear&#x27;</span>,<span class=\"string\">&#x27;lemon&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> newFruit = fruit.reduce( <span class=\"function\">(<span class=\"params\">pre,cur</span>) =&gt;</span></span><br><span class=\"line\">\t\tpre.includes( cur ) ?pre:pre.concat(cur)</span><br><span class=\"line\">                            </span><br><span class=\"line\"> ,[])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;newFruit&quot;</span>, newFruit)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//就一行  省略了&#123; &#125;和 return</span></span><br></pre></td></tr></table></figure>\n\n<div class=\"note warning flat\"><p>​        <code>pre.includes( cur ) ?pre:pre.concat(cur)</code></p>\n<p>注意这里你把 concat 换成push 就会报错</p>\n<p>要用push 得这么写,因为啊push() return 的数组的length</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> newFruit = fruit.reduce( <span class=\"function\">(<span class=\"params\">pre,cur</span>) =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(pre.includes(cur))&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> pre</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tpre.push(cur)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> pre</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> ,[])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;newFruit&quot;</span>, newFruit)</span><br></pre></td></tr></table></figure></div>\n\n\n\n<p>二维数组 转一维</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [[<span class=\"number\">0</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>]]</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr = arr.reduce(<span class=\"function\">(<span class=\"params\">pre,cur</span>)=&gt;</span>pre.concat(cur),[])</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr); </span><br><span class=\"line\"></span><br><span class=\"line\">当然 你可以用es6的flat</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr = arr.flat()</span><br><span class=\"line\">也可以用apply</span><br><span class=\"line\"><span class=\"keyword\">let</span> newArr = [].concat.apply([],arr)</span><br><span class=\"line\">split 方法 特别适用超级多维</span><br><span class=\"line\"><span class=\"keyword\">let</span>  newArr = (arr + <span class=\"string\">&#x27;&#x27;</span>).split(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(lists.map(<span class=\"built_in\">Number</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>对象 value 处理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> res = [ &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;lili&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;read&#x27;</span>&#125;,\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t&#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;hah&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;play&#x27;</span>&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">name</span>:<span class=\"string\">&#x27;ligang&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;run&#x27;</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = res.reduce( <span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> a.concat(b.like),[])</span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"Js Array.sort()","date":"2020-09-01T16:00:00.000Z","updated":"2020-11-27T20:54:59.899Z","cover":"https://picgo.genji.xyz/blog/posts/picjs.png","description":null,"keywords":"js,Array,sort","_content":"\n#  Array.sort()\n\n\n\n{% note info no-icon %}\narr.sort([compareFunction])\n{% endnote %}\n\n{% note warning no-icon %}\n在原数组上进行排序,会改变原数组的值.如果有需求最好深拷贝一份在处理.\n\n默认的是根据 unicode 编码进行排序!\n\n{% endnote %}\n\n\n\n\n\n\n\n\n\n## 数组大小排序\n\n```js\nvar numbers. = [4, 2, 5, 1, 3];\nnumbers.sort((a,b)=> a-b ) //1-5   \nnumbers.sort((a,b)=> b-a ) //5-1  \n```\n\n## 随机排序\n\n```js\nvar numbers. = [4, 2, 5, 1, 3];\nnumbers.sort((a,b)=> Math.random()- 0.5 )   \n```\n\n\n\n{% note warning no-icon %}\n好像旧版本 chorme 对sort 支持有点问题 \n\n[https://hufangyun.com/2017/sort-array/](https://hufangyun.com/2017/sort-array/)\n\n{% endnote %}","source":"_posts/前端/js/2020-10-22_Web_JS_Arr_sort.md","raw":"---\ntitle: Js Array.sort()\ndate: 2020-09-02 00:00:00\nupdated:\ncover: https://picgo.genji.xyz/blog/posts/picjs.png\ndescription:\ntags: [js, Array]\ncategories: [前端, js]\nkeywords: \"js,Array,sort\"\n---\n\n#  Array.sort()\n\n\n\n{% note info no-icon %}\narr.sort([compareFunction])\n{% endnote %}\n\n{% note warning no-icon %}\n在原数组上进行排序,会改变原数组的值.如果有需求最好深拷贝一份在处理.\n\n默认的是根据 unicode 编码进行排序!\n\n{% endnote %}\n\n\n\n\n\n\n\n\n\n## 数组大小排序\n\n```js\nvar numbers. = [4, 2, 5, 1, 3];\nnumbers.sort((a,b)=> a-b ) //1-5   \nnumbers.sort((a,b)=> b-a ) //5-1  \n```\n\n## 随机排序\n\n```js\nvar numbers. = [4, 2, 5, 1, 3];\nnumbers.sort((a,b)=> Math.random()- 0.5 )   \n```\n\n\n\n{% note warning no-icon %}\n好像旧版本 chorme 对sort 支持有点问题 \n\n[https://hufangyun.com/2017/sort-array/](https://hufangyun.com/2017/sort-array/)\n\n{% endnote %}","slug":"前端/js/2020-10-22_Web_JS_Arr_sort","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cki0qxv63000mrtvt7igkhev9","content":"<h1 id=\"Array-sort\"><a href=\"#Array-sort\" class=\"headerlink\" title=\"Array.sort()\"></a>Array.sort()</h1><div class=\"note info no-icon flat\"><p>arr.sort([compareFunction])</p>\n</div>\n\n<div class=\"note warning no-icon flat\"><p>在原数组上进行排序,会改变原数组的值.如果有需求最好深拷贝一份在处理.</p>\n<p>默认的是根据 unicode 编码进行排序!</p>\n</div>\n\n\n\n\n\n\n\n\n\n<h2 id=\"数组大小排序\"><a href=\"#数组大小排序\" class=\"headerlink\" title=\"数组大小排序\"></a>数组大小排序</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers. = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> a-b ) <span class=\"comment\">//1-5   </span></span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> b-a ) <span class=\"comment\">//5-1  </span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"随机排序\"><a href=\"#随机排序\" class=\"headerlink\" title=\"随机排序\"></a>随机排序</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers. = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> <span class=\"built_in\">Math</span>.random()- <span class=\"number\">0.5</span> )   </span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"note warning no-icon flat\"><p>好像旧版本 chorme 对sort 支持有点问题 </p>\n<p><a href=\"https://hufangyun.com/2017/sort-array/\">https://hufangyun.com/2017/sort-array/</a></p>\n</div>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Array-sort\"><a href=\"#Array-sort\" class=\"headerlink\" title=\"Array.sort()\"></a>Array.sort()</h1><div class=\"note info no-icon flat\"><p>arr.sort([compareFunction])</p>\n</div>\n\n<div class=\"note warning no-icon flat\"><p>在原数组上进行排序,会改变原数组的值.如果有需求最好深拷贝一份在处理.</p>\n<p>默认的是根据 unicode 编码进行排序!</p>\n</div>\n\n\n\n\n\n\n\n\n\n<h2 id=\"数组大小排序\"><a href=\"#数组大小排序\" class=\"headerlink\" title=\"数组大小排序\"></a>数组大小排序</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers. = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> a-b ) <span class=\"comment\">//1-5   </span></span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> b-a ) <span class=\"comment\">//5-1  </span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"随机排序\"><a href=\"#随机排序\" class=\"headerlink\" title=\"随机排序\"></a>随机排序</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> numbers. = [<span class=\"number\">4</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">numbers.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span> <span class=\"built_in\">Math</span>.random()- <span class=\"number\">0.5</span> )   </span><br></pre></td></tr></table></figure>\n\n\n\n<div class=\"note warning no-icon flat\"><p>好像旧版本 chorme 对sort 支持有点问题 </p>\n<p><a href=\"https://hufangyun.com/2017/sort-array/\">https://hufangyun.com/2017/sort-array/</a></p>\n</div>"},{"title":"奇淫的火箭","date":"2020-09-01T16:00:00.000Z","updated":"2020-11-27T20:55:00.040Z","cover":"https://picgo.genji.xyz/blog/posts/picjs.png","description":"真的有人这么写么?","keywords":"js","_content":"\n\n# Object.push()\n\n\n```js\n\nvar obj = {\n  push: function push(e) {\n\t  [].push.call(this, e )\n  }\n};\n\n//简写\nvar obj = {\n  push:[].push\n};\n\nconsole.log(obj) //{ push: [Function: push] }\nobj.push({name:\"genji\"})\n\n\nconsole.log(obj)  //{ '0': { name: 'genji' }, push: [Function: push], length: 1 }\n\n可以看出多个length\n\n\nvar obj = {\n\t\"2\": \"a\",\n\t\"3\": \"b\",\n\t\"length\": 1,\n\t\"push\": Array.prototype.push\n  }\n  obj.push(\"c\");\n  obj.push(\"d\");\n\n  console.log(obj)  //{ '1': 'c', '2': 'd', '3': 'b', length: 3, push: [Function: push] }\n\nlength 是几就下哪push  没有length  从0 开始\n\n```\n\n\n\n","source":"_posts/前端/js/2020-10-22_Web_JS_奇淫的题.md","raw":"---\ntitle: 奇淫的火箭\ndate: 2020-09-02 00:00:00\nupdated:\ncover: https://picgo.genji.xyz/blog/posts/picjs.png\ndescription: 真的有人这么写么?\ntags: []\ncategories: [前端,js]\nkeywords: \"js\"\n---\n\n\n# Object.push()\n\n\n```js\n\nvar obj = {\n  push: function push(e) {\n\t  [].push.call(this, e )\n  }\n};\n\n//简写\nvar obj = {\n  push:[].push\n};\n\nconsole.log(obj) //{ push: [Function: push] }\nobj.push({name:\"genji\"})\n\n\nconsole.log(obj)  //{ '0': { name: 'genji' }, push: [Function: push], length: 1 }\n\n可以看出多个length\n\n\nvar obj = {\n\t\"2\": \"a\",\n\t\"3\": \"b\",\n\t\"length\": 1,\n\t\"push\": Array.prototype.push\n  }\n  obj.push(\"c\");\n  obj.push(\"d\");\n\n  console.log(obj)  //{ '1': 'c', '2': 'd', '3': 'b', length: 3, push: [Function: push] }\n\nlength 是几就下哪push  没有length  从0 开始\n\n```\n\n\n\n","slug":"前端/js/2020-10-22_Web_JS_奇淫的题","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cki0qxv65000prtvtaj6n1mvq","content":"<h1 id=\"Object-push\"><a href=\"#Object-push\" class=\"headerlink\" title=\"Object.push()\"></a>Object.push()</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  push: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">push</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">\t  [].push.call(<span class=\"built_in\">this</span>, e )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//简写</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  push:[].push</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj) <span class=\"comment\">//&#123; push: [Function: push] &#125;</span></span><br><span class=\"line\">obj.push(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;genji&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj)  <span class=\"comment\">//&#123; &#x27;0&#x27;: &#123; name: &#x27;genji&#x27; &#125;, push: [Function: push], length: 1 &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">可以看出多个length</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;2&quot;</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;3&quot;</span>: <span class=\"string\">&quot;b&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;length&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;push&quot;</span>: <span class=\"built_in\">Array</span>.prototype.push</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  obj.push(<span class=\"string\">&quot;c&quot;</span>);</span><br><span class=\"line\">  obj.push(<span class=\"string\">&quot;d&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(obj)  <span class=\"comment\">//&#123; &#x27;1&#x27;: &#x27;c&#x27;, &#x27;2&#x27;: &#x27;d&#x27;, &#x27;3&#x27;: &#x27;b&#x27;, length: 3, push: [Function: push] &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">length 是几就下哪push  没有length  从<span class=\"number\">0</span> 开始</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Object-push\"><a href=\"#Object-push\" class=\"headerlink\" title=\"Object.push()\"></a>Object.push()</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  push: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">push</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">\t  [].push.call(<span class=\"built_in\">this</span>, e )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//简写</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  push:[].push</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj) <span class=\"comment\">//&#123; push: [Function: push] &#125;</span></span><br><span class=\"line\">obj.push(&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;genji&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj)  <span class=\"comment\">//&#123; &#x27;0&#x27;: &#123; name: &#x27;genji&#x27; &#125;, push: [Function: push], length: 1 &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">可以看出多个length</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">\t<span class=\"string\">&quot;2&quot;</span>: <span class=\"string\">&quot;a&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;3&quot;</span>: <span class=\"string\">&quot;b&quot;</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;length&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">\t<span class=\"string\">&quot;push&quot;</span>: <span class=\"built_in\">Array</span>.prototype.push</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  obj.push(<span class=\"string\">&quot;c&quot;</span>);</span><br><span class=\"line\">  obj.push(<span class=\"string\">&quot;d&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(obj)  <span class=\"comment\">//&#123; &#x27;1&#x27;: &#x27;c&#x27;, &#x27;2&#x27;: &#x27;d&#x27;, &#x27;3&#x27;: &#x27;b&#x27;, length: 3, push: [Function: push] &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">length 是几就下哪push  没有length  从<span class=\"number\">0</span> 开始</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n"},{"title":"nodemailer","date":"2020-02-03T16:00:00.000Z","updated":"2021-03-11T06:48:29.334Z","cover":"https://picgo.genji.xyz/blog/posts/normaile.png","description":"发送邮箱验证码","keywords":"email","_content":"\n# nodemailer\n 1. npm install nodemailer\n 2. 开启邮箱POP3/SMTP服务 各个邮箱开启方式不同\n 3. \n```js\n//mail.js\nconst nodemailer = require('nodemailer');\n\n//创建发送邮件的请求对象\nlet transporter = nodemailer.createTransport({\n    host: 'smtp.qq.com',    //发送端邮箱类型（QQ邮箱）\n    port: 465,      //端口号\n    secure: true, \n    auth: {\n        user: 'liulingyue@vip.qq.com', // 发送方的邮箱地址（自己的）\n        pass: '*****' // mtp 验证码\n    }\n});\n\nfunction send(mail, code) {\n    let mailObj = {\n        from: '\"611的冰箱\" <liulingyue@vip.qq.com>',   // 邮件名称和发件人邮箱地址\n        to: mail,   //收件人邮箱地址（这里的mail是封装后方法的参数，代表收件人的邮箱地址）\n        subject: '验证码',   //邮件标题\n        text: '您的验证码是：'+ code, // 邮件内容，这里的code是这个方法的参数，代表要发送的验证码信息，这里的内容可以自定义\n    }\n    // 发送邮件(封装成一个promise对象)，方便后面调用该方法\n    //这部分代码直接复制粘贴即可，但是注意发送邮件的请求对象名称要和上面声明的名称保持一致（这里我的名称是transporter）\n    return new Promise((resolve, reject)=>{\n        transporter.sendMail(mailObj, (err, data) => {\n            if(err){\n                reject()    //出错\n            }else{\n                resolve()    //成功\n            }\n        })\n    })\n}\n\nmodule.exports = { send }\n```\n\n```js\n//send.js\nvar Mail = require('./mail')  \n\nMail.send('460605674@qq.com', 342135)\n\n```\n\n\n\n```js\n\"QQ\": {\n        \"host\": \"smtp.qq.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\"126\": {\n        \"host\": \"smtp.126.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n\"163\": {\n        \"host\": \"smtp.163.com\",\n        \"port\": 465,\n        \"secure\": true\n    }\n```\n\n# 随机6位验证码\n我一开始有几个疑问?\n\n- 为什么验证码要6位,我只知道6比4安全.\n  知乎:人机交互理论中提到人的短期记忆容量为 7±2, 数字过多则记忆困难；数字太少的话安全性会不足。因此6是一个非常合适的数。\n\n- 无数个人请求验证码,验证码重复无怎么办?\n  手机号,和邮箱不会重复, 哈哈哈 傻逼了我.\n\n- 附上一些能用的东西\n```js\n\n生成6位验证码: \n let code = (\"000000\" + Math.floor(Math.random() * 999999)).slice(-6);\n\n正则验证手机号: \nlet reg = /^(13[0-9]|14[01456879]|15[0-3,5-9]|16[2567]|17[0-8]|18[0-9]|19[0-3,5-9])\\d{8}$/\n\n隐藏手机号中间字段:\nconst hiddenReg = /^\\d{3}(?<hidden>\\d{4})\\d{4}$/;\nphoneNumber.replace(phoneNumber.match(hiddenReg).groups.hidden, \"****\");\n  \n\n```\n  \n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/前端/node/Nodemailer.md","raw":"---\ntitle: nodemailer\ndate: 2020-02-04 00:00:00\nupdated: \ncover: https://picgo.genji.xyz/blog/posts/normaile.png\ndescription: 发送邮箱验证码 \n\nkeywords: email\ntags: [node]\ncategories: [前端,node]\n---\n\n# nodemailer\n 1. npm install nodemailer\n 2. 开启邮箱POP3/SMTP服务 各个邮箱开启方式不同\n 3. \n```js\n//mail.js\nconst nodemailer = require('nodemailer');\n\n//创建发送邮件的请求对象\nlet transporter = nodemailer.createTransport({\n    host: 'smtp.qq.com',    //发送端邮箱类型（QQ邮箱）\n    port: 465,      //端口号\n    secure: true, \n    auth: {\n        user: 'liulingyue@vip.qq.com', // 发送方的邮箱地址（自己的）\n        pass: '*****' // mtp 验证码\n    }\n});\n\nfunction send(mail, code) {\n    let mailObj = {\n        from: '\"611的冰箱\" <liulingyue@vip.qq.com>',   // 邮件名称和发件人邮箱地址\n        to: mail,   //收件人邮箱地址（这里的mail是封装后方法的参数，代表收件人的邮箱地址）\n        subject: '验证码',   //邮件标题\n        text: '您的验证码是：'+ code, // 邮件内容，这里的code是这个方法的参数，代表要发送的验证码信息，这里的内容可以自定义\n    }\n    // 发送邮件(封装成一个promise对象)，方便后面调用该方法\n    //这部分代码直接复制粘贴即可，但是注意发送邮件的请求对象名称要和上面声明的名称保持一致（这里我的名称是transporter）\n    return new Promise((resolve, reject)=>{\n        transporter.sendMail(mailObj, (err, data) => {\n            if(err){\n                reject()    //出错\n            }else{\n                resolve()    //成功\n            }\n        })\n    })\n}\n\nmodule.exports = { send }\n```\n\n```js\n//send.js\nvar Mail = require('./mail')  \n\nMail.send('460605674@qq.com', 342135)\n\n```\n\n\n\n```js\n\"QQ\": {\n        \"host\": \"smtp.qq.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\"126\": {\n        \"host\": \"smtp.126.com\",\n        \"port\": 465,\n        \"secure\": true\n    },\n\n\"163\": {\n        \"host\": \"smtp.163.com\",\n        \"port\": 465,\n        \"secure\": true\n    }\n```\n\n# 随机6位验证码\n我一开始有几个疑问?\n\n- 为什么验证码要6位,我只知道6比4安全.\n  知乎:人机交互理论中提到人的短期记忆容量为 7±2, 数字过多则记忆困难；数字太少的话安全性会不足。因此6是一个非常合适的数。\n\n- 无数个人请求验证码,验证码重复无怎么办?\n  手机号,和邮箱不会重复, 哈哈哈 傻逼了我.\n\n- 附上一些能用的东西\n```js\n\n生成6位验证码: \n let code = (\"000000\" + Math.floor(Math.random() * 999999)).slice(-6);\n\n正则验证手机号: \nlet reg = /^(13[0-9]|14[01456879]|15[0-3,5-9]|16[2567]|17[0-8]|18[0-9]|19[0-3,5-9])\\d{8}$/\n\n隐藏手机号中间字段:\nconst hiddenReg = /^\\d{3}(?<hidden>\\d{4})\\d{4}$/;\nphoneNumber.replace(phoneNumber.match(hiddenReg).groups.hidden, \"****\");\n  \n\n```\n  \n\n\n\n\n\n\n\n\n\n\n\n","slug":"前端/node/Nodemailer","published":1,"_id":"cki19a7ig00001nvtfr2w0tt6","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"nodemailer\"><a href=\"#nodemailer\" class=\"headerlink\" title=\"nodemailer\"></a>nodemailer</h1><ol>\n<li>npm install nodemailer</li>\n<li>开启邮箱POP3/SMTP服务 各个邮箱开启方式不同</li>\n<li><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//mail.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> nodemailer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;nodemailer&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建发送邮件的请求对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> transporter = nodemailer.createTransport(&#123;</span><br><span class=\"line\">    host: <span class=\"string\">&#x27;smtp.qq.com&#x27;</span>,    <span class=\"comment\">//发送端邮箱类型（QQ邮箱）</span></span><br><span class=\"line\">    port: <span class=\"number\">465</span>,      <span class=\"comment\">//端口号</span></span><br><span class=\"line\">    secure: <span class=\"literal\">true</span>, </span><br><span class=\"line\">    auth: &#123;</span><br><span class=\"line\">        user: <span class=\"string\">&#x27;liulingyue@vip.qq.com&#x27;</span>, <span class=\"comment\">// 发送方的邮箱地址（自己的）</span></span><br><span class=\"line\">        pass: <span class=\"string\">&#x27;*****&#x27;</span> <span class=\"comment\">// mtp 验证码</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">send</span>(<span class=\"params\">mail, code</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mailObj = &#123;</span><br><span class=\"line\">        <span class=\"keyword\">from</span>: <span class=\"string\">&#x27;&quot;611的冰箱&quot; &lt;liulingyue@vip.qq.com&gt;&#x27;</span>,   <span class=\"comment\">// 邮件名称和发件人邮箱地址</span></span><br><span class=\"line\">        to: mail,   <span class=\"comment\">//收件人邮箱地址（这里的mail是封装后方法的参数，代表收件人的邮箱地址）</span></span><br><span class=\"line\">        subject: <span class=\"string\">&#x27;验证码&#x27;</span>,   <span class=\"comment\">//邮件标题</span></span><br><span class=\"line\">        text: <span class=\"string\">&#x27;您的验证码是：&#x27;</span>+ code, <span class=\"comment\">// 邮件内容，这里的code是这个方法的参数，代表要发送的验证码信息，这里的内容可以自定义</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 发送邮件(封装成一个promise对象)，方便后面调用该方法</span></span><br><span class=\"line\">    <span class=\"comment\">//这部分代码直接复制粘贴即可，但是注意发送邮件的请求对象名称要和上面声明的名称保持一致（这里我的名称是transporter）</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        transporter.sendMail(mailObj, <span class=\"function\">(<span class=\"params\">err, data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(err)&#123;</span><br><span class=\"line\">                reject()    <span class=\"comment\">//出错</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                resolve()    <span class=\"comment\">//成功</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123; send &#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//send.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Mail = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./mail&#x27;</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\">Mail.send(<span class=\"string\">&#x27;460605674@qq.com&#x27;</span>, <span class=\"number\">342135</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;QQ&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;smtp.qq.com&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">465</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;secure&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"string\">&quot;126&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;smtp.126.com&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">465</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;secure&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;163&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;smtp.163.com&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">465</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;secure&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"随机6位验证码\"><a href=\"#随机6位验证码\" class=\"headerlink\" title=\"随机6位验证码\"></a>随机6位验证码</h1><p>我一开始有几个疑问?</p>\n<ul>\n<li><p>为什么验证码要6位,我只知道6比4安全.<br>知乎:人机交互理论中提到人的短期记忆容量为 7±2, 数字过多则记忆困难；数字太少的话安全性会不足。因此6是一个非常合适的数。</p>\n</li>\n<li><p>无数个人请求验证码,验证码重复无怎么办?<br>手机号,和邮箱不会重复, 哈哈哈 傻逼了我.</p>\n</li>\n<li><p>附上一些能用的东西</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">生成<span class=\"number\">6</span>位验证码: </span><br><span class=\"line\"> <span class=\"keyword\">let</span> code = (<span class=\"string\">&quot;000000&quot;</span> + <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">999999</span>)).slice(<span class=\"number\">-6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">正则验证手机号: </span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/^(13[0-9]|14[01456879]|15[0-3,5-9]|16[2567]|17[0-8]|18[0-9]|19[0-3,5-9])\\d&#123;8&#125;$/</span></span><br><span class=\"line\"></span><br><span class=\"line\">隐藏手机号中间字段:</span><br><span class=\"line\"><span class=\"keyword\">const</span> hiddenReg = <span class=\"regexp\">/^\\d&#123;3&#125;(?&lt;hidden&gt;\\d&#123;4&#125;)\\d&#123;4&#125;$/</span>;</span><br><span class=\"line\">phoneNumber.replace(phoneNumber.match(hiddenReg).groups.hidden, <span class=\"string\">&quot;****&quot;</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"nodemailer\"><a href=\"#nodemailer\" class=\"headerlink\" title=\"nodemailer\"></a>nodemailer</h1><ol>\n<li>npm install nodemailer</li>\n<li>开启邮箱POP3/SMTP服务 各个邮箱开启方式不同</li>\n<li><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//mail.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> nodemailer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;nodemailer&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建发送邮件的请求对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> transporter = nodemailer.createTransport(&#123;</span><br><span class=\"line\">    host: <span class=\"string\">&#x27;smtp.qq.com&#x27;</span>,    <span class=\"comment\">//发送端邮箱类型（QQ邮箱）</span></span><br><span class=\"line\">    port: <span class=\"number\">465</span>,      <span class=\"comment\">//端口号</span></span><br><span class=\"line\">    secure: <span class=\"literal\">true</span>, </span><br><span class=\"line\">    auth: &#123;</span><br><span class=\"line\">        user: <span class=\"string\">&#x27;liulingyue@vip.qq.com&#x27;</span>, <span class=\"comment\">// 发送方的邮箱地址（自己的）</span></span><br><span class=\"line\">        pass: <span class=\"string\">&#x27;*****&#x27;</span> <span class=\"comment\">// mtp 验证码</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">send</span>(<span class=\"params\">mail, code</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mailObj = &#123;</span><br><span class=\"line\">        <span class=\"keyword\">from</span>: <span class=\"string\">&#x27;&quot;611的冰箱&quot; &lt;liulingyue@vip.qq.com&gt;&#x27;</span>,   <span class=\"comment\">// 邮件名称和发件人邮箱地址</span></span><br><span class=\"line\">        to: mail,   <span class=\"comment\">//收件人邮箱地址（这里的mail是封装后方法的参数，代表收件人的邮箱地址）</span></span><br><span class=\"line\">        subject: <span class=\"string\">&#x27;验证码&#x27;</span>,   <span class=\"comment\">//邮件标题</span></span><br><span class=\"line\">        text: <span class=\"string\">&#x27;您的验证码是：&#x27;</span>+ code, <span class=\"comment\">// 邮件内容，这里的code是这个方法的参数，代表要发送的验证码信息，这里的内容可以自定义</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 发送邮件(封装成一个promise对象)，方便后面调用该方法</span></span><br><span class=\"line\">    <span class=\"comment\">//这部分代码直接复制粘贴即可，但是注意发送邮件的请求对象名称要和上面声明的名称保持一致（这里我的名称是transporter）</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class=\"line\">        transporter.sendMail(mailObj, <span class=\"function\">(<span class=\"params\">err, data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(err)&#123;</span><br><span class=\"line\">                reject()    <span class=\"comment\">//出错</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                resolve()    <span class=\"comment\">//成功</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123; send &#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//send.js</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Mail = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./mail&#x27;</span>)  </span><br><span class=\"line\"></span><br><span class=\"line\">Mail.send(<span class=\"string\">&#x27;460605674@qq.com&#x27;</span>, <span class=\"number\">342135</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;QQ&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;smtp.qq.com&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">465</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;secure&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"><span class=\"string\">&quot;126&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;smtp.126.com&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">465</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;secure&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;163&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;host&quot;</span>: <span class=\"string\">&quot;smtp.163.com&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;port&quot;</span>: <span class=\"number\">465</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;secure&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"随机6位验证码\"><a href=\"#随机6位验证码\" class=\"headerlink\" title=\"随机6位验证码\"></a>随机6位验证码</h1><p>我一开始有几个疑问?</p>\n<ul>\n<li><p>为什么验证码要6位,我只知道6比4安全.<br>知乎:人机交互理论中提到人的短期记忆容量为 7±2, 数字过多则记忆困难；数字太少的话安全性会不足。因此6是一个非常合适的数。</p>\n</li>\n<li><p>无数个人请求验证码,验证码重复无怎么办?<br>手机号,和邮箱不会重复, 哈哈哈 傻逼了我.</p>\n</li>\n<li><p>附上一些能用的东西</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">生成<span class=\"number\">6</span>位验证码: </span><br><span class=\"line\"> <span class=\"keyword\">let</span> code = (<span class=\"string\">&quot;000000&quot;</span> + <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">999999</span>)).slice(<span class=\"number\">-6</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">正则验证手机号: </span><br><span class=\"line\"><span class=\"keyword\">let</span> reg = <span class=\"regexp\">/^(13[0-9]|14[01456879]|15[0-3,5-9]|16[2567]|17[0-8]|18[0-9]|19[0-3,5-9])\\d&#123;8&#125;$/</span></span><br><span class=\"line\"></span><br><span class=\"line\">隐藏手机号中间字段:</span><br><span class=\"line\"><span class=\"keyword\">const</span> hiddenReg = <span class=\"regexp\">/^\\d&#123;3&#125;(?&lt;hidden&gt;\\d&#123;4&#125;)\\d&#123;4&#125;$/</span>;</span><br><span class=\"line\">phoneNumber.replace(phoneNumber.match(hiddenReg).groups.hidden, <span class=\"string\">&quot;****&quot;</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n\n</li>\n</ul>\n"},{"title":"console.","date":"2020-09-01T16:00:00.000Z","updated":"2021-03-11T14:32:11.320Z","cover":"https://picgo.genji.xyz/blog/posts/console_log.png","description":"一些常用的console","keywords":"console","_content":"- console.log\n- console.dir\n- console.table()\n- console.trace\n- console.error() console.warn()\n- console.time()和 console.timeEnd()\n- console.group() console.groupEnd()\n- console.count()\n- console.clear()\n- 自定义样式\n\n## console.log()\n\n```js\n//没啥说的\nvar name = \"genji\";\nconsole.log(\"name : \", name);\n\n// name :  genji\n\n//tips\nconsole.log([object]);\n```\n\n## console.dir()\n\n```js\n//tips\nconsole.dir(object, {depth:null}}\n```\n\n## console.table()\n\n一开始没觉得很好用,直到有一天\n\n```js\nvar animal = {\n  dog: { name: \"haha\", like: \"shit\", about: \"123\" },\n  cat: { name: \"lili\", like: \"wool\", about: \"4523523\" },\n};\nconsole.table(animal, [\"name\"]);\n```\n\n![image-20201128144734279](https://picgo.genji.xyz/blog/posts/image-20201128144734279.png)\n\n可是筛选,可以排序.\n\n有些请求的数据,有很多东西是你不用的,这样一筛选,很清晰了\n\n换成数组试试.\n\n```js\nvar animal = [\n  { name: \"lili\", email: \"haha@qq.com\" },\n  { name: \"lala\" },\n  { name: \"wang\", email: \"123@qq.com\" },\n];\nconsole.table(animal, \"email\");\n```\n\n![image-20201128145644045](https://picgo.genji.xyz/blog/posts/image-20201128145644045.png)\n\n可以清晰看到, 数组哪个对象的`key`是不存在的.并且能清晰的看到 index\n\n要不你还得\n\n```js\nanimal.forEach((e, i) => console.log(`${i}----${e.email}`));\n```\n\n![image-20201128145939043](https://picgo.genji.xyz/blog/posts/image-20201128145939043.png)\n\n各有利弊,适当选择.我觉得有时候挺香的,有时候没那么香.\n\n\n\n## console.error() console.warn()\n\n我就是当高亮 来用!\n\n![image-20201128151533877](https://picgo.genji.xyz/blog/posts/image-20201128151533877.png)\n\n## console.trace()\n\n```html\n<button onclick=\"fn1()\">跟踪函数运行</button>\n\n<script>\n  function fn1() {\n    fn2();\n  }\n  function fn2() {\n    console.trace();\n  }\n</script>\n\n/// console.trace fn2 fn1 onclick\n```\n\n## console.group() console.groupEnd()\n\n就是分下组. 更有层次吧\n\n```js\nconsole.log(\"Runoob\");\nconsole.group(\"post请求\");\nconsole.log(\"res = {data:'hello'}\");\nconsole.groupEnd();\nconsole.log(\"执行下一个个命令\");\n```\n\n![image-20201128140913499](https://picgo.genji.xyz/blog/posts/image-20201128140913499.png)\n\n## console.time()和 console.timeEnd()\n\n我主要是计时比较下性能,\n\n```js\nconsole.time();\nfor (i = 0; i < 100000; i++) {}\nconsole.timeEnd();\n```\n\n## console.count() console.clear()\n\n```js\nfor (i = 0; i < 10; i++) {\n  console.count(\"name\");\n}\n\n// name: 1\n// name: 2\n// name: 3\n// name: 4\n// name: 5\n// name: 6\n// name: 7\n// name: 8\n// name: 9\n就是个计数的 从1 开始\n\nconsole.clear()  // 清空\n\n```\n\n## console.profile console.profileEnd\n\n```js\nconsole.profile('性能分析器');\nfn();\nconsole.profileEnd();\n```\n\n![image-20201128140338413](https://picgo.genji.xyz/blog/posts/image-20201128140338413.png)\n\n## 自定义内容\n\n| 占位符   | 作用                          |\n| -------- | ----------------------------- |\n| %s       | 字符串                        |\n| %d or %i | 整数                          |\n| %f       | 浮点数                        |\n| %o       | 可展开的DOM                   |\n| %O       | 列出DOM的属性                 |\n| %c       | 根据提供的css样式格式化字符串 |\n\n```js\n// 格式成可展开的的DOM，像在开发者工具Element面板那样可展开 \nconsole.log('%o',document.body.firstElementChild); \n// 像JS对象那样访问DOM元素，可查看DOM元素的属性 \n// 等同于console.dir(document.body.firstElementChild) \nconsole.log('%O',document.body.firstElementChild);\n```\n\n![image-20201128160732266](https://picgo.genji.xyz/blog/posts/image-20201128160732266.png)\n\n```js\nconsole.log(\n  \" ________   ____    \\n/\\\\_____  \\\\ /'___\\\\   \\n\\\\/___//'/'/\\\\ \\\\__/   \\n    /' /' \\\\ \\\\  _``\\\\ \\n  /' /'    \\\\ \\\\ \\\\L\\\\ \\\\\\n /\\\\_/       \\\\ \\\\____/\\n \\\\//         \\\\/___/ \\n\"\n),\n  console.log(\"%c 送我杯咖啡 \", \"color:orange;font-size:16px\"),\n  console.log(\n    \"%c \",\n    \"background: url(http://picgo.genji.xyz/zanshangma.jpeg) no-repeat center;padding:100px;border-radius:20px;background-size: cover;\"\n  ),\n  console.log(\"%c 前端小菜鸟,欢迎您来找 \", \"color:orange;font-size:24px\"),\n  console.log(\n    \"%c \",\n    \"background: url(http://pic.genji.xyz/images/2020/03/15/WechatIMG3.jpg) no-repeat center;padding:100px;background-size: cover;\"\n  );\n```\n\n\n\n\n\n76 是怎么弄得 \n\n\n\n字\n\n[http://www.network-science.de/ascii/](http://www.network-science.de/ascii/)\n\n[http://www.figlet.org/examples.html](http://www.figlet.org/examples.html)\n\n\n\n图\n\nhttps://www.degraeve.com/img2txt.php\n\n或者google pic2ascii","source":"_posts/前端/js/console.md","raw":"---\ntitle: console.\ndate: 2020-09-02 00:00:00\nupdated: \ncover: https://picgo.genji.xyz/blog/posts/console_log.png\ndescription: 一些常用的console\n\ntags:  \t[js]\ncategories: [前端,js]\nkeywords: \"console\"\n---\n- console.log\n- console.dir\n- console.table()\n- console.trace\n- console.error() console.warn()\n- console.time()和 console.timeEnd()\n- console.group() console.groupEnd()\n- console.count()\n- console.clear()\n- 自定义样式\n\n## console.log()\n\n```js\n//没啥说的\nvar name = \"genji\";\nconsole.log(\"name : \", name);\n\n// name :  genji\n\n//tips\nconsole.log([object]);\n```\n\n## console.dir()\n\n```js\n//tips\nconsole.dir(object, {depth:null}}\n```\n\n## console.table()\n\n一开始没觉得很好用,直到有一天\n\n```js\nvar animal = {\n  dog: { name: \"haha\", like: \"shit\", about: \"123\" },\n  cat: { name: \"lili\", like: \"wool\", about: \"4523523\" },\n};\nconsole.table(animal, [\"name\"]);\n```\n\n![image-20201128144734279](https://picgo.genji.xyz/blog/posts/image-20201128144734279.png)\n\n可是筛选,可以排序.\n\n有些请求的数据,有很多东西是你不用的,这样一筛选,很清晰了\n\n换成数组试试.\n\n```js\nvar animal = [\n  { name: \"lili\", email: \"haha@qq.com\" },\n  { name: \"lala\" },\n  { name: \"wang\", email: \"123@qq.com\" },\n];\nconsole.table(animal, \"email\");\n```\n\n![image-20201128145644045](https://picgo.genji.xyz/blog/posts/image-20201128145644045.png)\n\n可以清晰看到, 数组哪个对象的`key`是不存在的.并且能清晰的看到 index\n\n要不你还得\n\n```js\nanimal.forEach((e, i) => console.log(`${i}----${e.email}`));\n```\n\n![image-20201128145939043](https://picgo.genji.xyz/blog/posts/image-20201128145939043.png)\n\n各有利弊,适当选择.我觉得有时候挺香的,有时候没那么香.\n\n\n\n## console.error() console.warn()\n\n我就是当高亮 来用!\n\n![image-20201128151533877](https://picgo.genji.xyz/blog/posts/image-20201128151533877.png)\n\n## console.trace()\n\n```html\n<button onclick=\"fn1()\">跟踪函数运行</button>\n\n<script>\n  function fn1() {\n    fn2();\n  }\n  function fn2() {\n    console.trace();\n  }\n</script>\n\n/// console.trace fn2 fn1 onclick\n```\n\n## console.group() console.groupEnd()\n\n就是分下组. 更有层次吧\n\n```js\nconsole.log(\"Runoob\");\nconsole.group(\"post请求\");\nconsole.log(\"res = {data:'hello'}\");\nconsole.groupEnd();\nconsole.log(\"执行下一个个命令\");\n```\n\n![image-20201128140913499](https://picgo.genji.xyz/blog/posts/image-20201128140913499.png)\n\n## console.time()和 console.timeEnd()\n\n我主要是计时比较下性能,\n\n```js\nconsole.time();\nfor (i = 0; i < 100000; i++) {}\nconsole.timeEnd();\n```\n\n## console.count() console.clear()\n\n```js\nfor (i = 0; i < 10; i++) {\n  console.count(\"name\");\n}\n\n// name: 1\n// name: 2\n// name: 3\n// name: 4\n// name: 5\n// name: 6\n// name: 7\n// name: 8\n// name: 9\n就是个计数的 从1 开始\n\nconsole.clear()  // 清空\n\n```\n\n## console.profile console.profileEnd\n\n```js\nconsole.profile('性能分析器');\nfn();\nconsole.profileEnd();\n```\n\n![image-20201128140338413](https://picgo.genji.xyz/blog/posts/image-20201128140338413.png)\n\n## 自定义内容\n\n| 占位符   | 作用                          |\n| -------- | ----------------------------- |\n| %s       | 字符串                        |\n| %d or %i | 整数                          |\n| %f       | 浮点数                        |\n| %o       | 可展开的DOM                   |\n| %O       | 列出DOM的属性                 |\n| %c       | 根据提供的css样式格式化字符串 |\n\n```js\n// 格式成可展开的的DOM，像在开发者工具Element面板那样可展开 \nconsole.log('%o',document.body.firstElementChild); \n// 像JS对象那样访问DOM元素，可查看DOM元素的属性 \n// 等同于console.dir(document.body.firstElementChild) \nconsole.log('%O',document.body.firstElementChild);\n```\n\n![image-20201128160732266](https://picgo.genji.xyz/blog/posts/image-20201128160732266.png)\n\n```js\nconsole.log(\n  \" ________   ____    \\n/\\\\_____  \\\\ /'___\\\\   \\n\\\\/___//'/'/\\\\ \\\\__/   \\n    /' /' \\\\ \\\\  _``\\\\ \\n  /' /'    \\\\ \\\\ \\\\L\\\\ \\\\\\n /\\\\_/       \\\\ \\\\____/\\n \\\\//         \\\\/___/ \\n\"\n),\n  console.log(\"%c 送我杯咖啡 \", \"color:orange;font-size:16px\"),\n  console.log(\n    \"%c \",\n    \"background: url(http://picgo.genji.xyz/zanshangma.jpeg) no-repeat center;padding:100px;border-radius:20px;background-size: cover;\"\n  ),\n  console.log(\"%c 前端小菜鸟,欢迎您来找 \", \"color:orange;font-size:24px\"),\n  console.log(\n    \"%c \",\n    \"background: url(http://pic.genji.xyz/images/2020/03/15/WechatIMG3.jpg) no-repeat center;padding:100px;background-size: cover;\"\n  );\n```\n\n\n\n\n\n76 是怎么弄得 \n\n\n\n字\n\n[http://www.network-science.de/ascii/](http://www.network-science.de/ascii/)\n\n[http://www.figlet.org/examples.html](http://www.figlet.org/examples.html)\n\n\n\n图\n\nhttps://www.degraeve.com/img2txt.php\n\n或者google pic2ascii","slug":"前端/js/console","published":1,"_id":"cki1f88ql00008svtaxn56b5n","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>console.log</li>\n<li>console.dir</li>\n<li>console.table()</li>\n<li>console.trace</li>\n<li>console.error() console.warn()</li>\n<li>console.time()和 console.timeEnd()</li>\n<li>console.group() console.groupEnd()</li>\n<li>console.count()</li>\n<li>console.clear()</li>\n<li>自定义样式</li>\n</ul>\n<h2 id=\"console-log\"><a href=\"#console-log\" class=\"headerlink\" title=\"console.log()\"></a>console.log()</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//没啥说的</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;genji&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;name : &quot;</span>, name);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// name :  genji</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//tips</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log([object]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-dir\"><a href=\"#console-dir\" class=\"headerlink\" title=\"console.dir()\"></a>console.dir()</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//tips</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.dir(object, &#123;<span class=\"attr\">depth</span>:<span class=\"literal\">null</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-table\"><a href=\"#console-table\" class=\"headerlink\" title=\"console.table()\"></a>console.table()</h2><p>一开始没觉得很好用,直到有一天</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> animal = &#123;</span><br><span class=\"line\">  dog: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;haha&quot;</span>, <span class=\"attr\">like</span>: <span class=\"string\">&quot;shit&quot;</span>, <span class=\"attr\">about</span>: <span class=\"string\">&quot;123&quot;</span> &#125;,</span><br><span class=\"line\">  cat: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;lili&quot;</span>, <span class=\"attr\">like</span>: <span class=\"string\">&quot;wool&quot;</span>, <span class=\"attr\">about</span>: <span class=\"string\">&quot;4523523&quot;</span> &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(animal, [<span class=\"string\">&quot;name&quot;</span>]);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128144734279.png\" alt=\"image-20201128144734279\"></p>\n<p>可是筛选,可以排序.</p>\n<p>有些请求的数据,有很多东西是你不用的,这样一筛选,很清晰了</p>\n<p>换成数组试试.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> animal = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;lili&quot;</span>, <span class=\"attr\">email</span>: <span class=\"string\">&quot;haha@qq.com&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;lala&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;wang&quot;</span>, <span class=\"attr\">email</span>: <span class=\"string\">&quot;123@qq.com&quot;</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(animal, <span class=\"string\">&quot;email&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128145644045.png\" alt=\"image-20201128145644045\"></p>\n<p>可以清晰看到, 数组哪个对象的<code>key</code>是不存在的.并且能清晰的看到 index</p>\n<p>要不你还得</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animal.forEach(<span class=\"function\">(<span class=\"params\">e, i</span>) =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>----<span class=\"subst\">$&#123;e.email&#125;</span>`</span>));</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128145939043.png\" alt=\"image-20201128145939043\"></p>\n<p>各有利弊,适当选择.我觉得有时候挺香的,有时候没那么香.</p>\n<h2 id=\"console-error-console-warn\"><a href=\"#console-error-console-warn\" class=\"headerlink\" title=\"console.error() console.warn()\"></a>console.error() console.warn()</h2><p>我就是当高亮 来用!</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128151533877.png\" alt=\"image-20201128151533877\"></p>\n<h2 id=\"console-trace\"><a href=\"#console-trace\" class=\"headerlink\" title=\"console.trace()\"></a>console.trace()</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;fn1()&quot;</span>&gt;</span>跟踪函数运行<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">    fn2();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn2</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.trace();</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">/// console.trace fn2 fn1 onclick</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-group-console-groupEnd\"><a href=\"#console-group-console-groupEnd\" class=\"headerlink\" title=\"console.group() console.groupEnd()\"></a>console.group() console.groupEnd()</h2><p>就是分下组. 更有层次吧</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;Runoob&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.group(<span class=\"string\">&quot;post请求&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;res = &#123;data:&#x27;hello&#x27;&#125;&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.groupEnd();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;执行下一个个命令&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128140913499.png\" alt=\"image-20201128140913499\"></p>\n<h2 id=\"console-time-和-console-timeEnd\"><a href=\"#console-time-和-console-timeEnd\" class=\"headerlink\" title=\"console.time()和 console.timeEnd()\"></a>console.time()和 console.timeEnd()</h2><p>我主要是计时比较下性能,</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.time();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.timeEnd();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-count-console-clear\"><a href=\"#console-count-console-clear\" class=\"headerlink\" title=\"console.count() console.clear()\"></a>console.count() console.clear()</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.count(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// name: 1</span></span><br><span class=\"line\"><span class=\"comment\">// name: 2</span></span><br><span class=\"line\"><span class=\"comment\">// name: 3</span></span><br><span class=\"line\"><span class=\"comment\">// name: 4</span></span><br><span class=\"line\"><span class=\"comment\">// name: 5</span></span><br><span class=\"line\"><span class=\"comment\">// name: 6</span></span><br><span class=\"line\"><span class=\"comment\">// name: 7</span></span><br><span class=\"line\"><span class=\"comment\">// name: 8</span></span><br><span class=\"line\"><span class=\"comment\">// name: 9</span></span><br><span class=\"line\">就是个计数的 从<span class=\"number\">1</span> 开始</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.clear()  <span class=\"comment\">// 清空</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-profile-console-profileEnd\"><a href=\"#console-profile-console-profileEnd\" class=\"headerlink\" title=\"console.profile console.profileEnd\"></a>console.profile console.profileEnd</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.profile(<span class=\"string\">&#x27;性能分析器&#x27;</span>);</span><br><span class=\"line\">fn();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.profileEnd();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128140338413.png\" alt=\"image-20201128140338413\"></p>\n<h2 id=\"自定义内容\"><a href=\"#自定义内容\" class=\"headerlink\" title=\"自定义内容\"></a>自定义内容</h2><table>\n<thead>\n<tr>\n<th>占位符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%s</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td>%d or %i</td>\n<td>整数</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>浮点数</td>\n</tr>\n<tr>\n<td>%o</td>\n<td>可展开的DOM</td>\n</tr>\n<tr>\n<td>%O</td>\n<td>列出DOM的属性</td>\n</tr>\n<tr>\n<td>%c</td>\n<td>根据提供的css样式格式化字符串</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 格式成可展开的的DOM，像在开发者工具Element面板那样可展开 </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;%o&#x27;</span>,<span class=\"built_in\">document</span>.body.firstElementChild); </span><br><span class=\"line\"><span class=\"comment\">// 像JS对象那样访问DOM元素，可查看DOM元素的属性 </span></span><br><span class=\"line\"><span class=\"comment\">// 等同于console.dir(document.body.firstElementChild) </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;%O&#x27;</span>,<span class=\"built_in\">document</span>.body.firstElementChild);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128160732266.png\" alt=\"image-20201128160732266\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">  <span class=\"string\">&quot; ________   ____    \\n/\\\\_____  \\\\ /&#x27;___\\\\   \\n\\\\/___//&#x27;/&#x27;/\\\\ \\\\__/   \\n    /&#x27; /&#x27; \\\\ \\\\  _``\\\\ \\n  /&#x27; /&#x27;    \\\\ \\\\ \\\\L\\\\ \\\\\\n /\\\\_/       \\\\ \\\\____/\\n \\\\//         \\\\/___/ \\n&quot;</span></span><br><span class=\"line\">),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c 送我杯咖啡 &quot;</span>, <span class=\"string\">&quot;color:orange;font-size:16px&quot;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">    <span class=\"string\">&quot;%c &quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;background: url(http://picgo.genji.xyz/zanshangma.jpeg) no-repeat center;padding:100px;border-radius:20px;background-size: cover;&quot;</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c 前端小菜鸟,欢迎您来找 &quot;</span>, <span class=\"string\">&quot;color:orange;font-size:24px&quot;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">    <span class=\"string\">&quot;%c &quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;background: url(http://pic.genji.xyz/images/2020/03/15/WechatIMG3.jpg) no-repeat center;padding:100px;background-size: cover;&quot;</span></span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>76 是怎么弄得 </p>\n<p>字</p>\n<p><a href=\"http://www.network-science.de/ascii/\">http://www.network-science.de/ascii/</a></p>\n<p><a href=\"http://www.figlet.org/examples.html\">http://www.figlet.org/examples.html</a></p>\n<p>图</p>\n<p><a href=\"https://www.degraeve.com/img2txt.php\">https://www.degraeve.com/img2txt.php</a></p>\n<p>或者google pic2ascii</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>console.log</li>\n<li>console.dir</li>\n<li>console.table()</li>\n<li>console.trace</li>\n<li>console.error() console.warn()</li>\n<li>console.time()和 console.timeEnd()</li>\n<li>console.group() console.groupEnd()</li>\n<li>console.count()</li>\n<li>console.clear()</li>\n<li>自定义样式</li>\n</ul>\n<h2 id=\"console-log\"><a href=\"#console-log\" class=\"headerlink\" title=\"console.log()\"></a>console.log()</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//没啥说的</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">&quot;genji&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;name : &quot;</span>, name);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// name :  genji</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//tips</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log([object]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-dir\"><a href=\"#console-dir\" class=\"headerlink\" title=\"console.dir()\"></a>console.dir()</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//tips</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.dir(object, &#123;<span class=\"attr\">depth</span>:<span class=\"literal\">null</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-table\"><a href=\"#console-table\" class=\"headerlink\" title=\"console.table()\"></a>console.table()</h2><p>一开始没觉得很好用,直到有一天</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> animal = &#123;</span><br><span class=\"line\">  dog: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;haha&quot;</span>, <span class=\"attr\">like</span>: <span class=\"string\">&quot;shit&quot;</span>, <span class=\"attr\">about</span>: <span class=\"string\">&quot;123&quot;</span> &#125;,</span><br><span class=\"line\">  cat: &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;lili&quot;</span>, <span class=\"attr\">like</span>: <span class=\"string\">&quot;wool&quot;</span>, <span class=\"attr\">about</span>: <span class=\"string\">&quot;4523523&quot;</span> &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(animal, [<span class=\"string\">&quot;name&quot;</span>]);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128144734279.png\" alt=\"image-20201128144734279\"></p>\n<p>可是筛选,可以排序.</p>\n<p>有些请求的数据,有很多东西是你不用的,这样一筛选,很清晰了</p>\n<p>换成数组试试.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> animal = [</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;lili&quot;</span>, <span class=\"attr\">email</span>: <span class=\"string\">&quot;haha@qq.com&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;lala&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;wang&quot;</span>, <span class=\"attr\">email</span>: <span class=\"string\">&quot;123@qq.com&quot;</span> &#125;,</span><br><span class=\"line\">];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(animal, <span class=\"string\">&quot;email&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128145644045.png\" alt=\"image-20201128145644045\"></p>\n<p>可以清晰看到, 数组哪个对象的<code>key</code>是不存在的.并且能清晰的看到 index</p>\n<p>要不你还得</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animal.forEach(<span class=\"function\">(<span class=\"params\">e, i</span>) =&gt;</span> <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;i&#125;</span>----<span class=\"subst\">$&#123;e.email&#125;</span>`</span>));</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128145939043.png\" alt=\"image-20201128145939043\"></p>\n<p>各有利弊,适当选择.我觉得有时候挺香的,有时候没那么香.</p>\n<h2 id=\"console-error-console-warn\"><a href=\"#console-error-console-warn\" class=\"headerlink\" title=\"console.error() console.warn()\"></a>console.error() console.warn()</h2><p>我就是当高亮 来用!</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128151533877.png\" alt=\"image-20201128151533877\"></p>\n<h2 id=\"console-trace\"><a href=\"#console-trace\" class=\"headerlink\" title=\"console.trace()\"></a>console.trace()</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;fn1()&quot;</span>&gt;</span>跟踪函数运行<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">    fn2();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn2</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.trace();</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">/// console.trace fn2 fn1 onclick</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-group-console-groupEnd\"><a href=\"#console-group-console-groupEnd\" class=\"headerlink\" title=\"console.group() console.groupEnd()\"></a>console.group() console.groupEnd()</h2><p>就是分下组. 更有层次吧</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;Runoob&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.group(<span class=\"string\">&quot;post请求&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;res = &#123;data:&#x27;hello&#x27;&#125;&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.groupEnd();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;执行下一个个命令&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128140913499.png\" alt=\"image-20201128140913499\"></p>\n<h2 id=\"console-time-和-console-timeEnd\"><a href=\"#console-time-和-console-timeEnd\" class=\"headerlink\" title=\"console.time()和 console.timeEnd()\"></a>console.time()和 console.timeEnd()</h2><p>我主要是计时比较下性能,</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.time();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.timeEnd();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-count-console-clear\"><a href=\"#console-count-console-clear\" class=\"headerlink\" title=\"console.count() console.clear()\"></a>console.count() console.clear()</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.count(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// name: 1</span></span><br><span class=\"line\"><span class=\"comment\">// name: 2</span></span><br><span class=\"line\"><span class=\"comment\">// name: 3</span></span><br><span class=\"line\"><span class=\"comment\">// name: 4</span></span><br><span class=\"line\"><span class=\"comment\">// name: 5</span></span><br><span class=\"line\"><span class=\"comment\">// name: 6</span></span><br><span class=\"line\"><span class=\"comment\">// name: 7</span></span><br><span class=\"line\"><span class=\"comment\">// name: 8</span></span><br><span class=\"line\"><span class=\"comment\">// name: 9</span></span><br><span class=\"line\">就是个计数的 从<span class=\"number\">1</span> 开始</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.clear()  <span class=\"comment\">// 清空</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"console-profile-console-profileEnd\"><a href=\"#console-profile-console-profileEnd\" class=\"headerlink\" title=\"console.profile console.profileEnd\"></a>console.profile console.profileEnd</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.profile(<span class=\"string\">&#x27;性能分析器&#x27;</span>);</span><br><span class=\"line\">fn();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.profileEnd();</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128140338413.png\" alt=\"image-20201128140338413\"></p>\n<h2 id=\"自定义内容\"><a href=\"#自定义内容\" class=\"headerlink\" title=\"自定义内容\"></a>自定义内容</h2><table>\n<thead>\n<tr>\n<th>占位符</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>%s</td>\n<td>字符串</td>\n</tr>\n<tr>\n<td>%d or %i</td>\n<td>整数</td>\n</tr>\n<tr>\n<td>%f</td>\n<td>浮点数</td>\n</tr>\n<tr>\n<td>%o</td>\n<td>可展开的DOM</td>\n</tr>\n<tr>\n<td>%O</td>\n<td>列出DOM的属性</td>\n</tr>\n<tr>\n<td>%c</td>\n<td>根据提供的css样式格式化字符串</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 格式成可展开的的DOM，像在开发者工具Element面板那样可展开 </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;%o&#x27;</span>,<span class=\"built_in\">document</span>.body.firstElementChild); </span><br><span class=\"line\"><span class=\"comment\">// 像JS对象那样访问DOM元素，可查看DOM元素的属性 </span></span><br><span class=\"line\"><span class=\"comment\">// 等同于console.dir(document.body.firstElementChild) </span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;%O&#x27;</span>,<span class=\"built_in\">document</span>.body.firstElementChild);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128160732266.png\" alt=\"image-20201128160732266\"></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">  <span class=\"string\">&quot; ________   ____    \\n/\\\\_____  \\\\ /&#x27;___\\\\   \\n\\\\/___//&#x27;/&#x27;/\\\\ \\\\__/   \\n    /&#x27; /&#x27; \\\\ \\\\  _``\\\\ \\n  /&#x27; /&#x27;    \\\\ \\\\ \\\\L\\\\ \\\\\\n /\\\\_/       \\\\ \\\\____/\\n \\\\//         \\\\/___/ \\n&quot;</span></span><br><span class=\"line\">),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c 送我杯咖啡 &quot;</span>, <span class=\"string\">&quot;color:orange;font-size:16px&quot;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">    <span class=\"string\">&quot;%c &quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;background: url(http://picgo.genji.xyz/zanshangma.jpeg) no-repeat center;padding:100px;border-radius:20px;background-size: cover;&quot;</span></span><br><span class=\"line\">  ),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;%c 前端小菜鸟,欢迎您来找 &quot;</span>, <span class=\"string\">&quot;color:orange;font-size:24px&quot;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">    <span class=\"string\">&quot;%c &quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;background: url(http://pic.genji.xyz/images/2020/03/15/WechatIMG3.jpg) no-repeat center;padding:100px;background-size: cover;&quot;</span></span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>76 是怎么弄得 </p>\n<p>字</p>\n<p><a href=\"http://www.network-science.de/ascii/\">http://www.network-science.de/ascii/</a></p>\n<p><a href=\"http://www.figlet.org/examples.html\">http://www.figlet.org/examples.html</a></p>\n<p>图</p>\n<p><a href=\"https://www.degraeve.com/img2txt.php\">https://www.degraeve.com/img2txt.php</a></p>\n<p>或者google pic2ascii</p>\n"},{"title":"滚动视差 scroll parallax js and css","top_img":"https://picgo.genji.xyz/image/parallax/top.png","description":"parallax","keywords":"parallax","date":"2020-04-30T16:00:00.000Z","cover":"https://picgo.genji.xyz/image/parallax/top.png","_content":"\n\n\n\n# 滚动视差 scroll parallax\n\n## 说点没用的\n\n滚动视差 似乎在 5 年前很火!\n\n我个人很喜欢,我喜欢这种沉浸,交互的感觉,但是相反网页展示的信息量要比正常网站少了一点.而且有的垃圾电脑还卡!\n\n在这个 demo 没有优化的时候!\n\n用家里没有显卡的老古董打开 ==>> 卡的一逼\n\n用 nuci7 核显 2k ==> 流畅\n\n用 nuci7 核显 4k ==> 也有点卡\n\n不过优化后 效果明显好多了!\n\n---\n\n## 两种控制方法\n\n### js 与 css\n\n- Js : 监听 scroll 更改 transition\n\n- Css : 设置`perspective` `transform-style: preserve-3d;` `translate Z` 很好理解 `近大远小` `近快远慢`\n\n### 优缺点(仅个人不完全的认为)\n\n- Js : 更灵活 , 而且还能 左右移动 , 透明度 , 添加些 class 来实现动画啊, 颜色之类的. 效果更好\n- css : 更方便 设置 css 即可实现.性能更好. 效果感觉像是一个平面\n\n## js\n\n### 代码\n\n```js\nvar parallax = document.querySelector(\".parallax\"),\n  Top = document.querySelector(\".top\"),\n  Center = document.querySelector(\".center\"),\n  Bottom = document.querySelector(\".bottom\");\n\nwindow.addEventListener(\"scroll\", (e) => {\n  let scrolled_px = document.documentElement.scrollTop;\n  //已经滚动了的 像素\n  let scrolled_per =\n    scrolled_px /\n    (document.documentElement.scrollHeight -\n      document.documentElement.clientHeight);\n  //滚动的百分比  已经滚动的了像素 /(滚动条总长度 -  当前窗口的高度)\n\n  //判断 parallax 是否还是视口\n  if (scrolled_px <= parallax.offsetHeight) {\n    Top.style.transform = `translateY(${scrolled_px *\n      0.8}px) scale(${scrolled_per * 0.5 + 1} )`;\n    Center.style.transform = `translateY(${scrolled_px *\n      0.7}px) scale(${scrolled_per * 1 + 1} )`;\n    Bottom.style.transform = `translateY(${scrolled_px *\n      0.05}px) scale(${scrolled_per * 1 + 1} )`;\n  }\n});\n```\n\n我没有确切计算, 随便地根据效果设置的 `translateY` `scale`.\n\n我见过那种计算的特别精确的, 滚动后图片之间的线还能连上. 应该是用矩阵算的.(找了一个月都找不到那个网站了) \n\n### 优化\n\n现在这几行代码,我 2k 分辨率不卡 4k 就有点卡了.\n\nscroll 触发频率很高的 ,而且,我还安装平滑滚动的软件 `Mos`,就触发的更频繁了.\n\n搞个节流试试\n\n```js\nfunction move() {\n  let scrolled_px = document.documentElement.scrollTop;\n  let scrolled_per =\n    scrolled_px /\n    (document.documentElement.scrollHeight -\n      document.documentElement.clientHeight);\n  Top.style.transform = `translateY(${scrolled_px *\n    0.8}px) scale(${scrolled_per * 0.5 + 1} )`;\n  Center.style.transform = `translateY(${scrolled_px *\n    0.7}px) scale(${scrolled_per * 1 + 1} )`;\n  Bottom.style.transform = `translateY(${scrolled_px *\n    0.05}px) scale(${scrolled_per * 1 + 1} )`;\n}\n\nfunction throttle(fn, delay) {\n  let canRun = true;\n  return function() {\n    if (!canRun) return;\n    canRun = false;\n    setTimeout(() => {\n      fn.apply(this, arguments);\n      canRun = true;\n    }, delay);\n  };\n}\n\nwindow.addEventListener(\"scroll\", throttle(move, 16));\n```\n\n换成 requestAnimationFrame 试试\n\n```js\nfunction throttle(fn, delay) {\n  let canRun = true;\n  return function() {\n    if (!canRun) return;\n    canRun = false;\n    window.requestAnimationFrame(() => {\n      fn.apply(this, arguments);\n      canRun = true;\n    });\n  };\n}\n\nwindow.addEventListener(\"scroll\", throttle(move));\n```\n\n再添加个 will change\n\n```css\n.parallax {\n  will-change: transform;\n}\n```\n\n简单的看看\n\n![image-20201202004002303](/Users/liulingyue/Desktop/image-20201202004002303.png)\n\n滚动的时候 帧率也比较稳定 60\n\n![image-20201202004127764](/Users/liulingyue/Desktop/image-20201202004127764.png)\n\n帧率下来的区域是我没有滚动 哦!不是卡顿.\n\n再添加个 IntersectionObserver 来 addEventListener 和 removeEventListener\n\n```js\n// window.addEventListener(\"scroll\",throttle(move));  替换成\n\nvar io = new IntersectionObserver((entries) => {\n  let flag = entries[0].isIntersecting;\n  console.log(flag);\n  if (flag) {\n    window.addEventListener(\"scroll\", throttle);\n  } else {\n    window.removeEventListener(\"scroll\", throttle(move));\n  }\n});\nio.observe(parallax);\n```\n\n省的计算是不是在可视区域了.\n\n完整代码 **_codepen_**\n\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax js\" src=\"https://codepen.io/895939059/embed/yLYWQaq?height=265&theme-id=dark&default-tab=js,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/yLYWQaq'>scroll parallax js</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n## css\n\n![image-20201202011155725](/Users/liulingyue/Desktop/image-20201202011155725.png)\n\n就是 translate Z\n\n### 代码\n\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax css\" src=\"https://codepen.io/895939059/embed/poEJmJO?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/poEJmJO'>scroll parallax css</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n***和js 的效果还是有差别的***\n\n注意几个点\n\n`perspective: 1px;`\n`perspective-origin: 0 0;`\n`transform-style: preserve-3d;`\n\n`transform: translateZ(-20px) scale(21);`\n\n## 计算\n\n加上一个 scale() , 效果更好\n\n至于 scale 放大多大才能完美匹配呢\n\n这有个计算公式\n\n`1 + (translateZ * -1) / perspective`\n\n![image-20201202012244471](/Users/liulingyue/Desktop/image-20201202012244471.png)\n","source":"_posts/前端/css/滚动视差 scroll parallax.md","raw":"---\ntitle: 滚动视差 scroll parallax js and css\ntop_img: https://picgo.genji.xyz/image/parallax/top.png\ndescription: \"parallax\"\nkeywords: \"parallax\"\ndate: 2020-05-01 00:00:00\ncover: https://picgo.genji.xyz/image/parallax/top.png\ntags: [parallax]\ncategories: [前端,css]\n---\n\n\n\n\n# 滚动视差 scroll parallax\n\n## 说点没用的\n\n滚动视差 似乎在 5 年前很火!\n\n我个人很喜欢,我喜欢这种沉浸,交互的感觉,但是相反网页展示的信息量要比正常网站少了一点.而且有的垃圾电脑还卡!\n\n在这个 demo 没有优化的时候!\n\n用家里没有显卡的老古董打开 ==>> 卡的一逼\n\n用 nuci7 核显 2k ==> 流畅\n\n用 nuci7 核显 4k ==> 也有点卡\n\n不过优化后 效果明显好多了!\n\n---\n\n## 两种控制方法\n\n### js 与 css\n\n- Js : 监听 scroll 更改 transition\n\n- Css : 设置`perspective` `transform-style: preserve-3d;` `translate Z` 很好理解 `近大远小` `近快远慢`\n\n### 优缺点(仅个人不完全的认为)\n\n- Js : 更灵活 , 而且还能 左右移动 , 透明度 , 添加些 class 来实现动画啊, 颜色之类的. 效果更好\n- css : 更方便 设置 css 即可实现.性能更好. 效果感觉像是一个平面\n\n## js\n\n### 代码\n\n```js\nvar parallax = document.querySelector(\".parallax\"),\n  Top = document.querySelector(\".top\"),\n  Center = document.querySelector(\".center\"),\n  Bottom = document.querySelector(\".bottom\");\n\nwindow.addEventListener(\"scroll\", (e) => {\n  let scrolled_px = document.documentElement.scrollTop;\n  //已经滚动了的 像素\n  let scrolled_per =\n    scrolled_px /\n    (document.documentElement.scrollHeight -\n      document.documentElement.clientHeight);\n  //滚动的百分比  已经滚动的了像素 /(滚动条总长度 -  当前窗口的高度)\n\n  //判断 parallax 是否还是视口\n  if (scrolled_px <= parallax.offsetHeight) {\n    Top.style.transform = `translateY(${scrolled_px *\n      0.8}px) scale(${scrolled_per * 0.5 + 1} )`;\n    Center.style.transform = `translateY(${scrolled_px *\n      0.7}px) scale(${scrolled_per * 1 + 1} )`;\n    Bottom.style.transform = `translateY(${scrolled_px *\n      0.05}px) scale(${scrolled_per * 1 + 1} )`;\n  }\n});\n```\n\n我没有确切计算, 随便地根据效果设置的 `translateY` `scale`.\n\n我见过那种计算的特别精确的, 滚动后图片之间的线还能连上. 应该是用矩阵算的.(找了一个月都找不到那个网站了) \n\n### 优化\n\n现在这几行代码,我 2k 分辨率不卡 4k 就有点卡了.\n\nscroll 触发频率很高的 ,而且,我还安装平滑滚动的软件 `Mos`,就触发的更频繁了.\n\n搞个节流试试\n\n```js\nfunction move() {\n  let scrolled_px = document.documentElement.scrollTop;\n  let scrolled_per =\n    scrolled_px /\n    (document.documentElement.scrollHeight -\n      document.documentElement.clientHeight);\n  Top.style.transform = `translateY(${scrolled_px *\n    0.8}px) scale(${scrolled_per * 0.5 + 1} )`;\n  Center.style.transform = `translateY(${scrolled_px *\n    0.7}px) scale(${scrolled_per * 1 + 1} )`;\n  Bottom.style.transform = `translateY(${scrolled_px *\n    0.05}px) scale(${scrolled_per * 1 + 1} )`;\n}\n\nfunction throttle(fn, delay) {\n  let canRun = true;\n  return function() {\n    if (!canRun) return;\n    canRun = false;\n    setTimeout(() => {\n      fn.apply(this, arguments);\n      canRun = true;\n    }, delay);\n  };\n}\n\nwindow.addEventListener(\"scroll\", throttle(move, 16));\n```\n\n换成 requestAnimationFrame 试试\n\n```js\nfunction throttle(fn, delay) {\n  let canRun = true;\n  return function() {\n    if (!canRun) return;\n    canRun = false;\n    window.requestAnimationFrame(() => {\n      fn.apply(this, arguments);\n      canRun = true;\n    });\n  };\n}\n\nwindow.addEventListener(\"scroll\", throttle(move));\n```\n\n再添加个 will change\n\n```css\n.parallax {\n  will-change: transform;\n}\n```\n\n简单的看看\n\n![image-20201202004002303](/Users/liulingyue/Desktop/image-20201202004002303.png)\n\n滚动的时候 帧率也比较稳定 60\n\n![image-20201202004127764](/Users/liulingyue/Desktop/image-20201202004127764.png)\n\n帧率下来的区域是我没有滚动 哦!不是卡顿.\n\n再添加个 IntersectionObserver 来 addEventListener 和 removeEventListener\n\n```js\n// window.addEventListener(\"scroll\",throttle(move));  替换成\n\nvar io = new IntersectionObserver((entries) => {\n  let flag = entries[0].isIntersecting;\n  console.log(flag);\n  if (flag) {\n    window.addEventListener(\"scroll\", throttle);\n  } else {\n    window.removeEventListener(\"scroll\", throttle(move));\n  }\n});\nio.observe(parallax);\n```\n\n省的计算是不是在可视区域了.\n\n完整代码 **_codepen_**\n\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax js\" src=\"https://codepen.io/895939059/embed/yLYWQaq?height=265&theme-id=dark&default-tab=js,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/yLYWQaq'>scroll parallax js</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n## css\n\n![image-20201202011155725](/Users/liulingyue/Desktop/image-20201202011155725.png)\n\n就是 translate Z\n\n### 代码\n\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax css\" src=\"https://codepen.io/895939059/embed/poEJmJO?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/poEJmJO'>scroll parallax css</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n***和js 的效果还是有差别的***\n\n注意几个点\n\n`perspective: 1px;`\n`perspective-origin: 0 0;`\n`transform-style: preserve-3d;`\n\n`transform: translateZ(-20px) scale(21);`\n\n## 计算\n\n加上一个 scale() , 效果更好\n\n至于 scale 放大多大才能完美匹配呢\n\n这有个计算公式\n\n`1 + (translateZ * -1) / perspective`\n\n![image-20201202012244471](/Users/liulingyue/Desktop/image-20201202012244471.png)\n","slug":"前端/css/滚动视差 scroll parallax","published":1,"updated":"2020-12-01T17:56:41.716Z","_id":"cki69ze7l00000yvtfqvq8tnu","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"滚动视差-scroll-parallax\"><a href=\"#滚动视差-scroll-parallax\" class=\"headerlink\" title=\"滚动视差 scroll parallax\"></a>滚动视差 scroll parallax</h1><h2 id=\"说点没用的\"><a href=\"#说点没用的\" class=\"headerlink\" title=\"说点没用的\"></a>说点没用的</h2><p>滚动视差 似乎在 5 年前很火!</p>\n<p>我个人很喜欢,我喜欢这种沉浸,交互的感觉,但是相反网页展示的信息量要比正常网站少了一点.而且有的垃圾电脑还卡!</p>\n<p>在这个 demo 没有优化的时候!</p>\n<p>用家里没有显卡的老古董打开 ==&gt;&gt; 卡的一逼</p>\n<p>用 nuci7 核显 2k ==&gt; 流畅</p>\n<p>用 nuci7 核显 4k ==&gt; 也有点卡</p>\n<p>不过优化后 效果明显好多了!</p>\n<hr>\n<h2 id=\"两种控制方法\"><a href=\"#两种控制方法\" class=\"headerlink\" title=\"两种控制方法\"></a>两种控制方法</h2><h3 id=\"js-与-css\"><a href=\"#js-与-css\" class=\"headerlink\" title=\"js 与 css\"></a>js 与 css</h3><ul>\n<li><p>Js : 监听 scroll 更改 transition</p>\n</li>\n<li><p>Css : 设置<code>perspective</code> <code>transform-style: preserve-3d;</code> <code>translate Z</code> 很好理解 <code>近大远小</code> <code>近快远慢</code></p>\n</li>\n</ul>\n<h3 id=\"优缺点-仅个人不完全的认为\"><a href=\"#优缺点-仅个人不完全的认为\" class=\"headerlink\" title=\"优缺点(仅个人不完全的认为)\"></a>优缺点(仅个人不完全的认为)</h3><ul>\n<li>Js : 更灵活 , 而且还能 左右移动 , 透明度 , 添加些 class 来实现动画啊, 颜色之类的. 效果更好</li>\n<li>css : 更方便 设置 css 即可实现.性能更好. 效果感觉像是一个平面</li>\n</ul>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> parallax = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.parallax&quot;</span>),</span><br><span class=\"line\">  Top = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.top&quot;</span>),</span><br><span class=\"line\">  Center = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.center&quot;</span>),</span><br><span class=\"line\">  Bottom = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.bottom&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_px = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">  <span class=\"comment\">//已经滚动了的 像素</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_per =</span><br><span class=\"line\">    scrolled_px /</span><br><span class=\"line\">    (<span class=\"built_in\">document</span>.documentElement.scrollHeight -</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.documentElement.clientHeight);</span><br><span class=\"line\">  <span class=\"comment\">//滚动的百分比  已经滚动的了像素 /(滚动条总长度 -  当前窗口的高度)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//判断 parallax 是否还是视口</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrolled_px &lt;= parallax.offsetHeight) &#123;</span><br><span class=\"line\">    Top.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"number\">0.8</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">0.5</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">    Center.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"number\">0.7</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">    Bottom.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"number\">0.05</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>我没有确切计算, 随便地根据效果设置的 <code>translateY</code> <code>scale</code>.</p>\n<p>我见过那种计算的特别精确的, 滚动后图片之间的线还能连上. 应该是用矩阵算的.(找了一个月都找不到那个网站了) </p>\n<h3 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h3><p>现在这几行代码,我 2k 分辨率不卡 4k 就有点卡了.</p>\n<p>scroll 触发频率很高的 ,而且,我还安装平滑滚动的软件 <code>Mos</code>,就触发的更频繁了.</p>\n<p>搞个节流试试</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_px = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_per =</span><br><span class=\"line\">    scrolled_px /</span><br><span class=\"line\">    (<span class=\"built_in\">document</span>.documentElement.scrollHeight -</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.documentElement.clientHeight);</span><br><span class=\"line\">  Top.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    <span class=\"number\">0.8</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">0.5</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">  Center.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    <span class=\"number\">0.7</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">  Bottom.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    <span class=\"number\">0.05</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span>(<span class=\"params\">fn, delay</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!canRun) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    canRun = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      fn.apply(<span class=\"built_in\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">      canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle(move, <span class=\"number\">16</span>));</span><br></pre></td></tr></table></figure>\n\n<p>换成 requestAnimationFrame 试试</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span>(<span class=\"params\">fn, delay</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!canRun) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    canRun = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      fn.apply(<span class=\"built_in\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">      canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle(move));</span><br></pre></td></tr></table></figure>\n\n<p>再添加个 will change</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parallax</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: transform;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>简单的看看</p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202004002303.png\" alt=\"image-20201202004002303\"></p>\n<p>滚动的时候 帧率也比较稳定 60</p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202004127764.png\" alt=\"image-20201202004127764\"></p>\n<p>帧率下来的区域是我没有滚动 哦!不是卡顿.</p>\n<p>再添加个 IntersectionObserver 来 addEventListener 和 removeEventListener</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// window.addEventListener(&quot;scroll&quot;,throttle(move));  替换成</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> io = <span class=\"keyword\">new</span> IntersectionObserver(<span class=\"function\">(<span class=\"params\">entries</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flag = entries[<span class=\"number\">0</span>].isIntersecting;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle(move));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">io.observe(parallax);</span><br></pre></td></tr></table></figure>\n\n<p>省的计算是不是在可视区域了.</p>\n<p>完整代码 <strong><em>codepen</em></strong></p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax js\" src=\"https://codepen.io/895939059/embed/yLYWQaq?height=265&theme-id=dark&default-tab=js,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/yLYWQaq'>scroll parallax js</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><p><img src=\"/Users/liulingyue/Desktop/image-20201202011155725.png\" alt=\"image-20201202011155725\"></p>\n<p>就是 translate Z</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax css\" src=\"https://codepen.io/895939059/embed/poEJmJO?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/poEJmJO'>scroll parallax css</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n<p><strong><em>和js 的效果还是有差别的</em></strong></p>\n<p>注意几个点</p>\n<p><code>perspective: 1px;</code><br><code>perspective-origin: 0 0;</code><br><code>transform-style: preserve-3d;</code></p>\n<p><code>transform: translateZ(-20px) scale(21);</code></p>\n<h2 id=\"计算\"><a href=\"#计算\" class=\"headerlink\" title=\"计算\"></a>计算</h2><p>加上一个 scale() , 效果更好</p>\n<p>至于 scale 放大多大才能完美匹配呢</p>\n<p>这有个计算公式</p>\n<p><code>1 + (translateZ * -1) / perspective</code></p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202012244471.png\" alt=\"image-20201202012244471\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"滚动视差-scroll-parallax\"><a href=\"#滚动视差-scroll-parallax\" class=\"headerlink\" title=\"滚动视差 scroll parallax\"></a>滚动视差 scroll parallax</h1><h2 id=\"说点没用的\"><a href=\"#说点没用的\" class=\"headerlink\" title=\"说点没用的\"></a>说点没用的</h2><p>滚动视差 似乎在 5 年前很火!</p>\n<p>我个人很喜欢,我喜欢这种沉浸,交互的感觉,但是相反网页展示的信息量要比正常网站少了一点.而且有的垃圾电脑还卡!</p>\n<p>在这个 demo 没有优化的时候!</p>\n<p>用家里没有显卡的老古董打开 ==&gt;&gt; 卡的一逼</p>\n<p>用 nuci7 核显 2k ==&gt; 流畅</p>\n<p>用 nuci7 核显 4k ==&gt; 也有点卡</p>\n<p>不过优化后 效果明显好多了!</p>\n<hr>\n<h2 id=\"两种控制方法\"><a href=\"#两种控制方法\" class=\"headerlink\" title=\"两种控制方法\"></a>两种控制方法</h2><h3 id=\"js-与-css\"><a href=\"#js-与-css\" class=\"headerlink\" title=\"js 与 css\"></a>js 与 css</h3><ul>\n<li><p>Js : 监听 scroll 更改 transition</p>\n</li>\n<li><p>Css : 设置<code>perspective</code> <code>transform-style: preserve-3d;</code> <code>translate Z</code> 很好理解 <code>近大远小</code> <code>近快远慢</code></p>\n</li>\n</ul>\n<h3 id=\"优缺点-仅个人不完全的认为\"><a href=\"#优缺点-仅个人不完全的认为\" class=\"headerlink\" title=\"优缺点(仅个人不完全的认为)\"></a>优缺点(仅个人不完全的认为)</h3><ul>\n<li>Js : 更灵活 , 而且还能 左右移动 , 透明度 , 添加些 class 来实现动画啊, 颜色之类的. 效果更好</li>\n<li>css : 更方便 设置 css 即可实现.性能更好. 效果感觉像是一个平面</li>\n</ul>\n<h2 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h2><h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> parallax = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.parallax&quot;</span>),</span><br><span class=\"line\">  Top = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.top&quot;</span>),</span><br><span class=\"line\">  Center = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.center&quot;</span>),</span><br><span class=\"line\">  Bottom = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">&quot;.bottom&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, <span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_px = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">  <span class=\"comment\">//已经滚动了的 像素</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_per =</span><br><span class=\"line\">    scrolled_px /</span><br><span class=\"line\">    (<span class=\"built_in\">document</span>.documentElement.scrollHeight -</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.documentElement.clientHeight);</span><br><span class=\"line\">  <span class=\"comment\">//滚动的百分比  已经滚动的了像素 /(滚动条总长度 -  当前窗口的高度)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//判断 parallax 是否还是视口</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (scrolled_px &lt;= parallax.offsetHeight) &#123;</span><br><span class=\"line\">    Top.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"number\">0.8</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">0.5</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">    Center.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"number\">0.7</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">    Bottom.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">      <span class=\"number\">0.05</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>我没有确切计算, 随便地根据效果设置的 <code>translateY</code> <code>scale</code>.</p>\n<p>我见过那种计算的特别精确的, 滚动后图片之间的线还能连上. 应该是用矩阵算的.(找了一个月都找不到那个网站了) </p>\n<h3 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h3><p>现在这几行代码,我 2k 分辨率不卡 4k 就有点卡了.</p>\n<p>scroll 触发频率很高的 ,而且,我还安装平滑滚动的软件 <code>Mos</code>,就触发的更频繁了.</p>\n<p>搞个节流试试</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">move</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_px = <span class=\"built_in\">document</span>.documentElement.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> scrolled_per =</span><br><span class=\"line\">    scrolled_px /</span><br><span class=\"line\">    (<span class=\"built_in\">document</span>.documentElement.scrollHeight -</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.documentElement.clientHeight);</span><br><span class=\"line\">  Top.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    <span class=\"number\">0.8</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">0.5</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">  Center.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    <span class=\"number\">0.7</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">  Bottom.style.transform = <span class=\"string\">`translateY(<span class=\"subst\">$&#123;scrolled_px *</span></span></span><br><span class=\"line\"><span class=\"string\"><span class=\"subst\">    <span class=\"number\">0.05</span>&#125;</span>px) scale(<span class=\"subst\">$&#123;scrolled_per * <span class=\"number\">1</span> + <span class=\"number\">1</span>&#125;</span> )`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span>(<span class=\"params\">fn, delay</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!canRun) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    canRun = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      fn.apply(<span class=\"built_in\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">      canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;, delay);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle(move, <span class=\"number\">16</span>));</span><br></pre></td></tr></table></figure>\n\n<p>换成 requestAnimationFrame 试试</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">throttle</span>(<span class=\"params\">fn, delay</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!canRun) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    canRun = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.requestAnimationFrame(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      fn.apply(<span class=\"built_in\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">      canRun = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle(move));</span><br></pre></td></tr></table></figure>\n\n<p>再添加个 will change</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parallax</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">will-change</span>: transform;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>简单的看看</p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202004002303.png\" alt=\"image-20201202004002303\"></p>\n<p>滚动的时候 帧率也比较稳定 60</p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202004127764.png\" alt=\"image-20201202004127764\"></p>\n<p>帧率下来的区域是我没有滚动 哦!不是卡顿.</p>\n<p>再添加个 IntersectionObserver 来 addEventListener 和 removeEventListener</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// window.addEventListener(&quot;scroll&quot;,throttle(move));  替换成</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> io = <span class=\"keyword\">new</span> IntersectionObserver(<span class=\"function\">(<span class=\"params\">entries</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flag = entries[<span class=\"number\">0</span>].isIntersecting;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(flag);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (flag) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.removeEventListener(<span class=\"string\">&quot;scroll&quot;</span>, throttle(move));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">io.observe(parallax);</span><br></pre></td></tr></table></figure>\n\n<p>省的计算是不是在可视区域了.</p>\n<p>完整代码 <strong><em>codepen</em></strong></p>\n<iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax js\" src=\"https://codepen.io/895939059/embed/yLYWQaq?height=265&theme-id=dark&default-tab=js,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/yLYWQaq'>scroll parallax js</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2><p><img src=\"/Users/liulingyue/Desktop/image-20201202011155725.png\" alt=\"image-20201202011155725\"></p>\n<p>就是 translate Z</p>\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><iframe height=\"265\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll parallax css\" src=\"https://codepen.io/895939059/embed/poEJmJO?height=265&theme-id=dark&default-tab=css,result\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href='https://codepen.io/895939059/pen/poEJmJO'>scroll parallax css</a> by Liu ling yue \n  (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n\n<p><strong><em>和js 的效果还是有差别的</em></strong></p>\n<p>注意几个点</p>\n<p><code>perspective: 1px;</code><br><code>perspective-origin: 0 0;</code><br><code>transform-style: preserve-3d;</code></p>\n<p><code>transform: translateZ(-20px) scale(21);</code></p>\n<h2 id=\"计算\"><a href=\"#计算\" class=\"headerlink\" title=\"计算\"></a>计算</h2><p>加上一个 scale() , 效果更好</p>\n<p>至于 scale 放大多大才能完美匹配呢</p>\n<p>这有个计算公式</p>\n<p><code>1 + (translateZ * -1) / perspective</code></p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202012244471.png\" alt=\"image-20201202012244471\"></p>\n"},{"title":"js爬虫 初体验","date":"2020-02-03T16:00:00.000Z","updated":"2020-12-02T15:33:19.540Z","cover":"https://picgo.genji.xyz/blog/posts/image-20201202174646454.png","description":"练个手","keywords":"爬虫","_content":"\n\n#  js爬虫 初体验 ( 帮朋友完成他的作业 )\n\n***一个不好好搞设计,没事闲着学python的的朋友***\n\n妈的 帮她 搞完了 还没用上 !! 白学了一个小下午.\n\n\n\n\n\n\n## 简述\n\n+ 要爬的网站 [香港出入境人次](https://www.immd.gov.hk/hkt/stat_20201102.html )\n+ node 插件 ` axios`  ` cheerio(类似jq 的工具)` `dayjs` `mongoose`\n\n+ 再找用什么爬东西的时候发现个 好用的 `Puppeteer` 有时间试试.\n+ 网站挺简单 没有反爬虫 \n\n## 爬\n\n### 连接数据库 创建schema\n\n```js\n//db.js\nmodule.exports = ()=>{\n\tconst mongoose = require('mongoose')\n\tmongoose.connect(\"mongodb://hongkang:123456@localhost:27017/hongkang\",{\n\t\tuseNewUrlParser:true,\n\t\tuseUnifiedTopology:true,\n\t\tuseCreateIndex:true\n\t}).then(() => {\n\t\tconsole.log(\"本地  连接数据库成功\");\n\t\t})\n\t\t.catch(err => {\n\t\tconsole.log(\"连接数据库失败\");\n\t\t})\n\n}\n\n\n```\n\n```js\nconst mongoose = require(\"mongoose\");\nconst schema = new mongoose.Schema({\n  positionData: {\n    type: Object,\n  },\n  date: {\n    type: String,\n  },\n});\nmodule.exports = mongoose.model(\"hongkang\", schema);\n\n```\n\n### 先爬一天的数据试试\n\n一个小demo  写的不太工整哈哈\n\n```js\nasync function getWebData() {\n  try {\n    let title ,tableTitel= \"\";\n    let catergory,positionData = {};\n\n\n\n    const res = await axios.get(`https://www.immd.gov.hk/hkt/stat_${cur}.html`);\n    const $html = res.data;\n    const $ = cheerio.load($html);\n    $(\"h1\").each((i, el) => {\n      title = el.children[0].data;\n   \n    });\n    $(\"table\").each((i, el) => {\n      tableTitel = el.attribs.title;\n    });\n    $(\"tr\").text((i, el) => {\n      let str = el;\n      let arg = JSON.stringify(str)\n        .replace(/\\\"/g, \"\")\n        .replace(/\\s/g, \"\")\n        .split(\"\\\\n\")\n        .splice(1);\n\n      //提取分类catergory\n      if (i < 4) {\n        return;\n      } else if (i == 4) {\n        catergory = arg;\n        return;\n      } else {\n        let enter = {};\n        let out = {};\n        arg.forEach((el, i) => {\n          if (i != 0 && i <= 4) {\n            enter[`${catergory[i - 1]}`] = arg[i];\n          } else if (i != 0 && i <= 8) {\n            out[`${catergory[i - 1]}`] = arg[i];\n          }\n        });\n        positionData[arg[0]] = {\n          enter,\n          out,\n        };\n      }\n    });    \n    \n    \n    hongkang.create({ positionData, date: cur }); //mongoose 增\n    console.log(`已经获取${cur}的数据`);\n  } catch (error) {\n    console.log(\"error: \", error);\n  }\n}\n```\n\n\n\n### 爬所有的\n\n这个网站其实数据是 1月24   这里用了day.js(moment 的小儿子 )\n\n```js\nvar startDate =  \"2020-01-24\"\nvar  step =  0 \n\nfunction calDate(){\n    let cur = dayjs(startDate)\n      .add(step, \"day\")\n      .format(\"YYYY/MM/DD\")\n    \n    return cur\n}\n\n\nasync function getWebData() {\n  //... //////\n \tlet cur =  calDate()\n  if (\n      cur ==\n      dayjs()\n        .format(\"YYYY/MM/DD\")\n        .replace(/\\//g, \"\")\n    ) {\n      return;\n    }\n //......\n  step++ \n  getWebData()\n}\n```\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172703453.png\" alt=\"image-20201202172703453\" style=\"zoom:50%;\" />\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172739655.png\" alt=\"image-20201202172739655\" style=\"zoom:50%;\" />\n\n## 后端 \n\n没啥说的 直接连数据库 写个接口\n\n```js\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst app = express();\napp.use(cors());\nconst mongoose = require(\"mongoose\");\n\n//------\nmongoose\n  .connect(\"mongodb://hongkang:123456@localhost:27017/hongkang\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true,\n  })\n  .then(() => {\n    console.log(\"本地  连接数据库成功\");\n  })\n  .catch((err) => {\n    console.log(\"连接数据库失败\");\n  });\n//------\napp.listen(3000, (req, res) => {\n  console.log(\"http://localhost:3000\");\n});\n//------\n//------ 引入model\nconst model = require(\"./models/hangkong\");\n\n//------ paramas 是时间 YYYYMMDD 20201010\napp.get(\"/api/:data\", async (req, res) => {\n  let str = req.params.data;\n  const data = await model.find({ date: str });\n  console.log(\"data: \", data.length);\n  if (data.length == 0) {\n    res.send(200, { message: \"对不起数据还没有更新\" });\n  } else {\n    res.send(200, data);\n  }\n});\n```\n\n## 前端 \n\n### 插件\n\n+ `antd table datePicker`\n\n+ v-charts\n\n+ toast (notify)\n\n有点丑,我都有点接受不了,但是朋友着急要 . 我还得先学习怎么爬哈哈 赶工!!\n\n![image-20201202173642251](/Users/liulingyue/Desktop/image-20201202173642251.png)\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202173839733.png\" alt=\"image-20201202173839733\"  />\n\n## 总结\n\n练个手,毕竟没用js爬过东西! ","source":"_posts/前端/node/js爬虫 初体验.md","raw":"---\ntitle: js爬虫 初体验\ndate: 2020-02-04 00:00:00\nupdated: \ncover: https://picgo.genji.xyz/blog/posts/image-20201202174646454.png\ndescription: 练个手\n\nkeywords: \"爬虫\"\ntags: [爬虫]\ncategories: [前端,node]\n---\n\n\n#  js爬虫 初体验 ( 帮朋友完成他的作业 )\n\n***一个不好好搞设计,没事闲着学python的的朋友***\n\n妈的 帮她 搞完了 还没用上 !! 白学了一个小下午.\n\n\n\n\n\n\n## 简述\n\n+ 要爬的网站 [香港出入境人次](https://www.immd.gov.hk/hkt/stat_20201102.html )\n+ node 插件 ` axios`  ` cheerio(类似jq 的工具)` `dayjs` `mongoose`\n\n+ 再找用什么爬东西的时候发现个 好用的 `Puppeteer` 有时间试试.\n+ 网站挺简单 没有反爬虫 \n\n## 爬\n\n### 连接数据库 创建schema\n\n```js\n//db.js\nmodule.exports = ()=>{\n\tconst mongoose = require('mongoose')\n\tmongoose.connect(\"mongodb://hongkang:123456@localhost:27017/hongkang\",{\n\t\tuseNewUrlParser:true,\n\t\tuseUnifiedTopology:true,\n\t\tuseCreateIndex:true\n\t}).then(() => {\n\t\tconsole.log(\"本地  连接数据库成功\");\n\t\t})\n\t\t.catch(err => {\n\t\tconsole.log(\"连接数据库失败\");\n\t\t})\n\n}\n\n\n```\n\n```js\nconst mongoose = require(\"mongoose\");\nconst schema = new mongoose.Schema({\n  positionData: {\n    type: Object,\n  },\n  date: {\n    type: String,\n  },\n});\nmodule.exports = mongoose.model(\"hongkang\", schema);\n\n```\n\n### 先爬一天的数据试试\n\n一个小demo  写的不太工整哈哈\n\n```js\nasync function getWebData() {\n  try {\n    let title ,tableTitel= \"\";\n    let catergory,positionData = {};\n\n\n\n    const res = await axios.get(`https://www.immd.gov.hk/hkt/stat_${cur}.html`);\n    const $html = res.data;\n    const $ = cheerio.load($html);\n    $(\"h1\").each((i, el) => {\n      title = el.children[0].data;\n   \n    });\n    $(\"table\").each((i, el) => {\n      tableTitel = el.attribs.title;\n    });\n    $(\"tr\").text((i, el) => {\n      let str = el;\n      let arg = JSON.stringify(str)\n        .replace(/\\\"/g, \"\")\n        .replace(/\\s/g, \"\")\n        .split(\"\\\\n\")\n        .splice(1);\n\n      //提取分类catergory\n      if (i < 4) {\n        return;\n      } else if (i == 4) {\n        catergory = arg;\n        return;\n      } else {\n        let enter = {};\n        let out = {};\n        arg.forEach((el, i) => {\n          if (i != 0 && i <= 4) {\n            enter[`${catergory[i - 1]}`] = arg[i];\n          } else if (i != 0 && i <= 8) {\n            out[`${catergory[i - 1]}`] = arg[i];\n          }\n        });\n        positionData[arg[0]] = {\n          enter,\n          out,\n        };\n      }\n    });    \n    \n    \n    hongkang.create({ positionData, date: cur }); //mongoose 增\n    console.log(`已经获取${cur}的数据`);\n  } catch (error) {\n    console.log(\"error: \", error);\n  }\n}\n```\n\n\n\n### 爬所有的\n\n这个网站其实数据是 1月24   这里用了day.js(moment 的小儿子 )\n\n```js\nvar startDate =  \"2020-01-24\"\nvar  step =  0 \n\nfunction calDate(){\n    let cur = dayjs(startDate)\n      .add(step, \"day\")\n      .format(\"YYYY/MM/DD\")\n    \n    return cur\n}\n\n\nasync function getWebData() {\n  //... //////\n \tlet cur =  calDate()\n  if (\n      cur ==\n      dayjs()\n        .format(\"YYYY/MM/DD\")\n        .replace(/\\//g, \"\")\n    ) {\n      return;\n    }\n //......\n  step++ \n  getWebData()\n}\n```\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172703453.png\" alt=\"image-20201202172703453\" style=\"zoom:50%;\" />\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172739655.png\" alt=\"image-20201202172739655\" style=\"zoom:50%;\" />\n\n## 后端 \n\n没啥说的 直接连数据库 写个接口\n\n```js\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst app = express();\napp.use(cors());\nconst mongoose = require(\"mongoose\");\n\n//------\nmongoose\n  .connect(\"mongodb://hongkang:123456@localhost:27017/hongkang\", {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true,\n  })\n  .then(() => {\n    console.log(\"本地  连接数据库成功\");\n  })\n  .catch((err) => {\n    console.log(\"连接数据库失败\");\n  });\n//------\napp.listen(3000, (req, res) => {\n  console.log(\"http://localhost:3000\");\n});\n//------\n//------ 引入model\nconst model = require(\"./models/hangkong\");\n\n//------ paramas 是时间 YYYYMMDD 20201010\napp.get(\"/api/:data\", async (req, res) => {\n  let str = req.params.data;\n  const data = await model.find({ date: str });\n  console.log(\"data: \", data.length);\n  if (data.length == 0) {\n    res.send(200, { message: \"对不起数据还没有更新\" });\n  } else {\n    res.send(200, data);\n  }\n});\n```\n\n## 前端 \n\n### 插件\n\n+ `antd table datePicker`\n\n+ v-charts\n\n+ toast (notify)\n\n有点丑,我都有点接受不了,但是朋友着急要 . 我还得先学习怎么爬哈哈 赶工!!\n\n![image-20201202173642251](/Users/liulingyue/Desktop/image-20201202173642251.png)\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202173839733.png\" alt=\"image-20201202173839733\"  />\n\n## 总结\n\n练个手,毕竟没用js爬过东西! ","slug":"前端/node/js爬虫 初体验","published":1,"_id":"cki781fv00000p2vt5oqfgx4c","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"js爬虫-初体验-帮朋友完成他的作业\"><a href=\"#js爬虫-初体验-帮朋友完成他的作业\" class=\"headerlink\" title=\"js爬虫 初体验 ( 帮朋友完成他的作业 )\"></a>js爬虫 初体验 ( 帮朋友完成他的作业 )</h1><p><strong><em>一个不好好搞设计,没事闲着学python的的朋友</em></strong></p>\n<p>妈的 帮她 搞完了 还没用上 !! 白学了一个小下午.</p>\n<h2 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h2><ul>\n<li><p>要爬的网站 <a href=\"https://www.immd.gov.hk/hkt/stat_20201102.html\">香港出入境人次</a></p>\n</li>\n<li><p>node 插件 <code> axios</code>  <code> cheerio(类似jq 的工具)</code> <code>dayjs</code> <code>mongoose</code></p>\n</li>\n<li><p>再找用什么爬东西的时候发现个 好用的 <code>Puppeteer</code> 有时间试试.</p>\n</li>\n<li><p>网站挺简单 没有反爬虫 </p>\n</li>\n</ul>\n<h2 id=\"爬\"><a href=\"#爬\" class=\"headerlink\" title=\"爬\"></a>爬</h2><h3 id=\"连接数据库-创建schema\"><a href=\"#连接数据库-创建schema\" class=\"headerlink\" title=\"连接数据库 创建schema\"></a>连接数据库 创建schema</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//db.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>)</span><br><span class=\"line\">\tmongoose.connect(<span class=\"string\">&quot;mongodb://hongkang:123456@localhost:27017/hongkang&quot;</span>,&#123;</span><br><span class=\"line\">\t\tuseNewUrlParser:<span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tuseUnifiedTopology:<span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tuseCreateIndex:<span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;本地  连接数据库成功&quot;</span>);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;连接数据库失败&quot;</span>);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;mongoose&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> schema = <span class=\"keyword\">new</span> mongoose.Schema(&#123;</span><br><span class=\"line\">  positionData: &#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">Object</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  date: &#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = mongoose.model(<span class=\"string\">&quot;hongkang&quot;</span>, schema);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"先爬一天的数据试试\"><a href=\"#先爬一天的数据试试\" class=\"headerlink\" title=\"先爬一天的数据试试\"></a>先爬一天的数据试试</h3><p>一个小demo  写的不太工整哈哈</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWebData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> title ,tableTitel= <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> catergory,positionData = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> axios.get(<span class=\"string\">`https://www.immd.gov.hk/hkt/stat_<span class=\"subst\">$&#123;cur&#125;</span>.html`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> $html = res.data;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> $ = cheerio.load($html);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;h1&quot;</span>).each(<span class=\"function\">(<span class=\"params\">i, el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      title = el.children[<span class=\"number\">0</span>].data;</span><br><span class=\"line\">   </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;table&quot;</span>).each(<span class=\"function\">(<span class=\"params\">i, el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      tableTitel = el.attribs.title;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;tr&quot;</span>).text(<span class=\"function\">(<span class=\"params\">i, el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> str = el;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> arg = <span class=\"built_in\">JSON</span>.stringify(str)</span><br><span class=\"line\">        .replace(<span class=\"regexp\">/\\&quot;/g</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        .replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        .split(<span class=\"string\">&quot;\\\\n&quot;</span>)</span><br><span class=\"line\">        .splice(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//提取分类catergory</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        catergory = arg;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> enter = &#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> out = &#123;&#125;;</span><br><span class=\"line\">        arg.forEach(<span class=\"function\">(<span class=\"params\">el, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; i &lt;= <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">            enter[<span class=\"string\">`<span class=\"subst\">$&#123;catergory[i - <span class=\"number\">1</span>]&#125;</span>`</span>] = arg[i];</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; i &lt;= <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">            out[<span class=\"string\">`<span class=\"subst\">$&#123;catergory[i - <span class=\"number\">1</span>]&#125;</span>`</span>] = arg[i];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        positionData[arg[<span class=\"number\">0</span>]] = &#123;</span><br><span class=\"line\">          enter,</span><br><span class=\"line\">          out,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    hongkang.create(&#123; positionData, <span class=\"attr\">date</span>: cur &#125;); <span class=\"comment\">//mongoose 增</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`已经获取<span class=\"subst\">$&#123;cur&#125;</span>的数据`</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;error: &quot;</span>, error);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"爬所有的\"><a href=\"#爬所有的\" class=\"headerlink\" title=\"爬所有的\"></a>爬所有的</h3><p>这个网站其实数据是 1月24   这里用了day.js(moment 的小儿子 )</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> startDate =  <span class=\"string\">&quot;2020-01-24&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span>  step =  <span class=\"number\">0</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calDate</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = dayjs(startDate)</span><br><span class=\"line\">      .add(step, <span class=\"string\">&quot;day&quot;</span>)</span><br><span class=\"line\">      .format(<span class=\"string\">&quot;YYYY/MM/DD&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> cur</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWebData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//... //////</span></span><br><span class=\"line\"> \t<span class=\"keyword\">let</span> cur =  calDate()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      cur ==</span><br><span class=\"line\">      dayjs()</span><br><span class=\"line\">        .format(<span class=\"string\">&quot;YYYY/MM/DD&quot;</span>)</span><br><span class=\"line\">        .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> <span class=\"comment\">//......</span></span><br><span class=\"line\">  step++ </span><br><span class=\"line\">  getWebData()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172703453.png\" alt=\"image-20201202172703453\" style=\"zoom:50%;\" />\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172739655.png\" alt=\"image-20201202172739655\" style=\"zoom:50%;\" />\n\n<h2 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h2><p>没啥说的 直接连数据库 写个接口</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;express&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> cors = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;cors&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\">app.use(cors());</span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;mongoose&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------</span></span><br><span class=\"line\">mongoose</span><br><span class=\"line\">  .connect(<span class=\"string\">&quot;mongodb://hongkang:123456@localhost:27017/hongkang&quot;</span>, &#123;</span><br><span class=\"line\">    useNewUrlParser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    useUnifiedTopology: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    useCreateIndex: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;本地  连接数据库成功&quot;</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;连接数据库失败&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"comment\">//------</span></span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;http://localhost:3000&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//------</span></span><br><span class=\"line\"><span class=\"comment\">//------ 引入model</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> model = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;./models/hangkong&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------ paramas 是时间 YYYYMMDD 20201010</span></span><br><span class=\"line\">app.get(<span class=\"string\">&quot;/api/:data&quot;</span>, <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = req.params.data;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> model.find(&#123; <span class=\"attr\">date</span>: str &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;data: &quot;</span>, data.length);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (data.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    res.send(<span class=\"number\">200</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">&quot;对不起数据还没有更新&quot;</span> &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    res.send(<span class=\"number\">200</span>, data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><h3 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h3><ul>\n<li><p><code>antd table datePicker</code></p>\n</li>\n<li><p>v-charts</p>\n</li>\n<li><p>toast (notify)</p>\n</li>\n</ul>\n<p>有点丑,我都有点接受不了,但是朋友着急要 . 我还得先学习怎么爬哈哈 赶工!!</p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202173642251.png\" alt=\"image-20201202173642251\"></p>\n<img src=\"/Users/liulingyue/Desktop/image-20201202173839733.png\" alt=\"image-20201202173839733\"  />\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>练个手,毕竟没用js爬过东西! </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"js爬虫-初体验-帮朋友完成他的作业\"><a href=\"#js爬虫-初体验-帮朋友完成他的作业\" class=\"headerlink\" title=\"js爬虫 初体验 ( 帮朋友完成他的作业 )\"></a>js爬虫 初体验 ( 帮朋友完成他的作业 )</h1><p><strong><em>一个不好好搞设计,没事闲着学python的的朋友</em></strong></p>\n<p>妈的 帮她 搞完了 还没用上 !! 白学了一个小下午.</p>\n<h2 id=\"简述\"><a href=\"#简述\" class=\"headerlink\" title=\"简述\"></a>简述</h2><ul>\n<li><p>要爬的网站 <a href=\"https://www.immd.gov.hk/hkt/stat_20201102.html\">香港出入境人次</a></p>\n</li>\n<li><p>node 插件 <code> axios</code>  <code> cheerio(类似jq 的工具)</code> <code>dayjs</code> <code>mongoose</code></p>\n</li>\n<li><p>再找用什么爬东西的时候发现个 好用的 <code>Puppeteer</code> 有时间试试.</p>\n</li>\n<li><p>网站挺简单 没有反爬虫 </p>\n</li>\n</ul>\n<h2 id=\"爬\"><a href=\"#爬\" class=\"headerlink\" title=\"爬\"></a>爬</h2><h3 id=\"连接数据库-创建schema\"><a href=\"#连接数据库-创建schema\" class=\"headerlink\" title=\"连接数据库 创建schema\"></a>连接数据库 创建schema</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//db.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;mongoose&#x27;</span>)</span><br><span class=\"line\">\tmongoose.connect(<span class=\"string\">&quot;mongodb://hongkang:123456@localhost:27017/hongkang&quot;</span>,&#123;</span><br><span class=\"line\">\t\tuseNewUrlParser:<span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tuseUnifiedTopology:<span class=\"literal\">true</span>,</span><br><span class=\"line\">\t\tuseCreateIndex:<span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;本地  连接数据库成功&quot;</span>);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;连接数据库失败&quot;</span>);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;mongoose&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> schema = <span class=\"keyword\">new</span> mongoose.Schema(&#123;</span><br><span class=\"line\">  positionData: &#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">Object</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  date: &#123;</span><br><span class=\"line\">    type: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = mongoose.model(<span class=\"string\">&quot;hongkang&quot;</span>, schema);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"先爬一天的数据试试\"><a href=\"#先爬一天的数据试试\" class=\"headerlink\" title=\"先爬一天的数据试试\"></a>先爬一天的数据试试</h3><p>一个小demo  写的不太工整哈哈</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWebData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> title ,tableTitel= <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> catergory,positionData = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> axios.get(<span class=\"string\">`https://www.immd.gov.hk/hkt/stat_<span class=\"subst\">$&#123;cur&#125;</span>.html`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> $html = res.data;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> $ = cheerio.load($html);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;h1&quot;</span>).each(<span class=\"function\">(<span class=\"params\">i, el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      title = el.children[<span class=\"number\">0</span>].data;</span><br><span class=\"line\">   </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;table&quot;</span>).each(<span class=\"function\">(<span class=\"params\">i, el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      tableTitel = el.attribs.title;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $(<span class=\"string\">&quot;tr&quot;</span>).text(<span class=\"function\">(<span class=\"params\">i, el</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> str = el;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> arg = <span class=\"built_in\">JSON</span>.stringify(str)</span><br><span class=\"line\">        .replace(<span class=\"regexp\">/\\&quot;/g</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        .replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        .split(<span class=\"string\">&quot;\\\\n&quot;</span>)</span><br><span class=\"line\">        .splice(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//提取分类catergory</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        catergory = arg;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> enter = &#123;&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> out = &#123;&#125;;</span><br><span class=\"line\">        arg.forEach(<span class=\"function\">(<span class=\"params\">el, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; i &lt;= <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">            enter[<span class=\"string\">`<span class=\"subst\">$&#123;catergory[i - <span class=\"number\">1</span>]&#125;</span>`</span>] = arg[i];</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; i &lt;= <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">            out[<span class=\"string\">`<span class=\"subst\">$&#123;catergory[i - <span class=\"number\">1</span>]&#125;</span>`</span>] = arg[i];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        positionData[arg[<span class=\"number\">0</span>]] = &#123;</span><br><span class=\"line\">          enter,</span><br><span class=\"line\">          out,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);    </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    hongkang.create(&#123; positionData, <span class=\"attr\">date</span>: cur &#125;); <span class=\"comment\">//mongoose 增</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`已经获取<span class=\"subst\">$&#123;cur&#125;</span>的数据`</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;error: &quot;</span>, error);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"爬所有的\"><a href=\"#爬所有的\" class=\"headerlink\" title=\"爬所有的\"></a>爬所有的</h3><p>这个网站其实数据是 1月24   这里用了day.js(moment 的小儿子 )</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> startDate =  <span class=\"string\">&quot;2020-01-24&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span>  step =  <span class=\"number\">0</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">calDate</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cur = dayjs(startDate)</span><br><span class=\"line\">      .add(step, <span class=\"string\">&quot;day&quot;</span>)</span><br><span class=\"line\">      .format(<span class=\"string\">&quot;YYYY/MM/DD&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> cur</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getWebData</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//... //////</span></span><br><span class=\"line\"> \t<span class=\"keyword\">let</span> cur =  calDate()</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (</span><br><span class=\"line\">      cur ==</span><br><span class=\"line\">      dayjs()</span><br><span class=\"line\">        .format(<span class=\"string\">&quot;YYYY/MM/DD&quot;</span>)</span><br><span class=\"line\">        .replace(<span class=\"regexp\">/\\//g</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    ) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> <span class=\"comment\">//......</span></span><br><span class=\"line\">  step++ </span><br><span class=\"line\">  getWebData()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172703453.png\" alt=\"image-20201202172703453\" style=\"zoom:50%;\" />\n\n<img src=\"/Users/liulingyue/Desktop/image-20201202172739655.png\" alt=\"image-20201202172739655\" style=\"zoom:50%;\" />\n\n<h2 id=\"后端\"><a href=\"#后端\" class=\"headerlink\" title=\"后端\"></a>后端</h2><p>没啥说的 直接连数据库 写个接口</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;express&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> cors = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;cors&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = express();</span><br><span class=\"line\">app.use(cors());</span><br><span class=\"line\"><span class=\"keyword\">const</span> mongoose = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;mongoose&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------</span></span><br><span class=\"line\">mongoose</span><br><span class=\"line\">  .connect(<span class=\"string\">&quot;mongodb://hongkang:123456@localhost:27017/hongkang&quot;</span>, &#123;</span><br><span class=\"line\">    useNewUrlParser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    useUnifiedTopology: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    useCreateIndex: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;本地  连接数据库成功&quot;</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;连接数据库失败&quot;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"><span class=\"comment\">//------</span></span><br><span class=\"line\">app.listen(<span class=\"number\">3000</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;http://localhost:3000&quot;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">//------</span></span><br><span class=\"line\"><span class=\"comment\">//------ 引入model</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> model = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;./models/hangkong&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//------ paramas 是时间 YYYYMMDD 20201010</span></span><br><span class=\"line\">app.get(<span class=\"string\">&quot;/api/:data&quot;</span>, <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> str = req.params.data;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> model.find(&#123; <span class=\"attr\">date</span>: str &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;data: &quot;</span>, data.length);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (data.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    res.send(<span class=\"number\">200</span>, &#123; <span class=\"attr\">message</span>: <span class=\"string\">&quot;对不起数据还没有更新&quot;</span> &#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    res.send(<span class=\"number\">200</span>, data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"前端\"><a href=\"#前端\" class=\"headerlink\" title=\"前端\"></a>前端</h2><h3 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h3><ul>\n<li><p><code>antd table datePicker</code></p>\n</li>\n<li><p>v-charts</p>\n</li>\n<li><p>toast (notify)</p>\n</li>\n</ul>\n<p>有点丑,我都有点接受不了,但是朋友着急要 . 我还得先学习怎么爬哈哈 赶工!!</p>\n<p><img src=\"/Users/liulingyue/Desktop/image-20201202173642251.png\" alt=\"image-20201202173642251\"></p>\n<img src=\"/Users/liulingyue/Desktop/image-20201202173839733.png\" alt=\"image-20201202173839733\"  />\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>练个手,毕竟没用js爬过东西! </p>\n"},{"_content":"\ntitle: title \ndate: 2020-04-01 00:00:00\nupdated: \ncover:  封面\ndescription: 描述\n\ntags:  \t标签\nkeywords: 关键词\ncategories: [分类,分类]\n","source":"_posts/模板.md","raw":"\ntitle: title \ndate: 2020-04-01 00:00:00\nupdated: \ncover:  封面\ndescription: 描述\n\ntags:  \t标签\nkeywords: 关键词\ncategories: [分类,分类]\n","slug":"模板","published":1,"date":"2021-03-11T06:10:13.642Z","updated":"2021-03-11T06:20:22.156Z","_id":"ckm4h6wzb0003meleczatb117","title":"","comments":1,"layout":"post","photos":[],"link":"","content":"<p>title: title<br>date: 2020-04-01 00:00:00<br>updated:<br>cover:  封面<br>description: 描述</p>\n<p>tags:      标签<br>keywords: 关键词<br>categories: [分类,分类]</p>\n","site":{"data":{}},"cover":"https://picgo.genji.xyz/blog/bg/hardcoding4.png","excerpt":"","more":"<p>title: title<br>date: 2020-04-01 00:00:00<br>updated:<br>cover:  封面<br>description: 描述</p>\n<p>tags:      标签<br>keywords: 关键词<br>categories: [分类,分类]</p>\n"},{"title":"intel nuc8i5 黑苹果","date":"2020-03-03T16:00:00.000Z","updated":"2021-03-11T06:32:39.039Z","cover":"https://picgo.genji.xyz/blog/bg/hardcoding4.png","description":"穷! 香!(m1出了,不香了,想买macmini了)","keywords":"黑苹果","_content":"\n# 需要\n\n| 配件                | 详细              | 价格  |\n| ------------------- | ----------------- | ----- |\n| 海盗船 ddr4 2666 *2 | 16g*2             | ¥938  |\n| Intel nuc8i5        | 咸鱼 未开封  官保 | ¥2200 |\n| 西数 黑盘 sn750     | 500G              | ¥579  |\n| U盘                 | 自己有            | ¥0    |\n| 白苹果拆机卡        | 我舍弃了(穷)      | ¥0    |\n\n Intel nuc8i5 黑苹果内存最高支持 2400 ,买2666 是因为 换下来 有的笔记本也能用 .(内存现在最高支持64G)\n\n# 设置bios\n\n\n\n1. 开机时，连续点按 F2 进入 BIOS，为了避免之前有其他不合适的改动，建议先按 F9 重置 BIOS 默认设置。\n2. Boot->Boot Priority->Legacy Boot Priority-> « Legacy Boot » ：禁用\n3. Boot->Boot Configuration->\n    UEFI Boot->« Fast Boot »： 禁用\n    UEFI Boot->« Boot USB Devices First » ： 启用\n    UEFI Boot->« Boot Network Devices Last » ：启用\n    Boot Devices->«Network Boot» ：设置为 « Disable »\n4. Boot->Secure Boot-> « Secure Boot » ：禁用\n5. Security->Security Features-> « Inter VT for directed I/VO (VT-d) » ： 禁用\n6. Power->Secondary Power Settings-> « Wake on LAN from S4/S5 » ： 设置为 « Stay Off »\n\n\n---\n# 制作启动U盘\n\n\n\n1. 准备一个 Fat32 格式的 U 盘（注意：U 盘名**不要**包含汉字和空格！！），剩余空间应大于 500MB。\n\n{% note primay %}\n\n这里放弃了以前的安装方法,换成了在线安装.\n\nclover 引导换成了 OpenCore\n\n{% endnote %}\n\n2. 下载大佬做好的  NUC8_MacOnlineInstaller.zip、EFI-OC-xxxxxx.zip 拷贝至 U 盘根目录并分别解压。(以前是用balenaEtcher 做启动盘)\n\n3. 将 U盘 插上 NUC8 并开机，立即按住 command/win 键并持续点按 R 键。OpenCore 支持 Cmd+R 快捷键进入 Recovery 模式，即可开始安装。\n---\n# 安装\n\n1. 快捷键激活 Recovery 模式\n\n   U 盘插入 NUC 后，按下电源键并立即持续点按 F10，进入 BIOS 启动菜单，选择 UEFI 开头的 U 盘，按回车并立即 Cmd+R\n   （注意按回车和 Cmd+R 不能有明显停顿，Cmd+R 具体按法：Cmd为保持长按，R是连续点按，注意“长按”和“持续点按”的区别）\n   如果还是不行，可以持续点按 ESC 或 Option/Alt 键，出现 OC 引导菜单后，按空格，出现隐藏引导项“macOS Boot From Recovery”，选中它并回车进入。\n\n2. 选择“磁盘工具”，先格式化要安装 macOS 的硬盘：\n   选择根节点, 名称`MacOS`  , 格式`APFS`,方案`GUID分区图`\n   \n3. 联网-->重新安装macos\n\n# EFI\n\n1. 打开 Hackintool，选择“磁盘”页，如图挂载硬盘的 EFI 分区。\n\n2. 摇号，即生成随机三码\n   \n   ![image-20201128053146108](https://picgo.genji.xyz/blog/posts/image-20201128053146108.png)\n\n3. 更该电源模式\n\n   ![image-20201128053243350](https://picgo.genji.xyz/blog/posts/image-20201128053243350.png)\n\n# 更新驱动\n\n\n\n[蓝牙和wifi https://github.com/OpenIntelWireless](https://github.com/OpenIntelWireless)\n\n别忘了修改bios\n\n\n\n\n","source":"_posts/Diy/黑苹果.md","raw":"---\ntitle: intel nuc8i5 黑苹果\ndate: 2020-03-04 00:00:00\nupdated: \ncover:  \ndescription: 穷! 香!(m1出了,不香了,想买macmini了)\ntags:  \t[黑苹果]\ncategories: [diy]\nkeywords: \"黑苹果\"\n---\n\n# 需要\n\n| 配件                | 详细              | 价格  |\n| ------------------- | ----------------- | ----- |\n| 海盗船 ddr4 2666 *2 | 16g*2             | ¥938  |\n| Intel nuc8i5        | 咸鱼 未开封  官保 | ¥2200 |\n| 西数 黑盘 sn750     | 500G              | ¥579  |\n| U盘                 | 自己有            | ¥0    |\n| 白苹果拆机卡        | 我舍弃了(穷)      | ¥0    |\n\n Intel nuc8i5 黑苹果内存最高支持 2400 ,买2666 是因为 换下来 有的笔记本也能用 .(内存现在最高支持64G)\n\n# 设置bios\n\n\n\n1. 开机时，连续点按 F2 进入 BIOS，为了避免之前有其他不合适的改动，建议先按 F9 重置 BIOS 默认设置。\n2. Boot->Boot Priority->Legacy Boot Priority-> « Legacy Boot » ：禁用\n3. Boot->Boot Configuration->\n    UEFI Boot->« Fast Boot »： 禁用\n    UEFI Boot->« Boot USB Devices First » ： 启用\n    UEFI Boot->« Boot Network Devices Last » ：启用\n    Boot Devices->«Network Boot» ：设置为 « Disable »\n4. Boot->Secure Boot-> « Secure Boot » ：禁用\n5. Security->Security Features-> « Inter VT for directed I/VO (VT-d) » ： 禁用\n6. Power->Secondary Power Settings-> « Wake on LAN from S4/S5 » ： 设置为 « Stay Off »\n\n\n---\n# 制作启动U盘\n\n\n\n1. 准备一个 Fat32 格式的 U 盘（注意：U 盘名**不要**包含汉字和空格！！），剩余空间应大于 500MB。\n\n{% note primay %}\n\n这里放弃了以前的安装方法,换成了在线安装.\n\nclover 引导换成了 OpenCore\n\n{% endnote %}\n\n2. 下载大佬做好的  NUC8_MacOnlineInstaller.zip、EFI-OC-xxxxxx.zip 拷贝至 U 盘根目录并分别解压。(以前是用balenaEtcher 做启动盘)\n\n3. 将 U盘 插上 NUC8 并开机，立即按住 command/win 键并持续点按 R 键。OpenCore 支持 Cmd+R 快捷键进入 Recovery 模式，即可开始安装。\n---\n# 安装\n\n1. 快捷键激活 Recovery 模式\n\n   U 盘插入 NUC 后，按下电源键并立即持续点按 F10，进入 BIOS 启动菜单，选择 UEFI 开头的 U 盘，按回车并立即 Cmd+R\n   （注意按回车和 Cmd+R 不能有明显停顿，Cmd+R 具体按法：Cmd为保持长按，R是连续点按，注意“长按”和“持续点按”的区别）\n   如果还是不行，可以持续点按 ESC 或 Option/Alt 键，出现 OC 引导菜单后，按空格，出现隐藏引导项“macOS Boot From Recovery”，选中它并回车进入。\n\n2. 选择“磁盘工具”，先格式化要安装 macOS 的硬盘：\n   选择根节点, 名称`MacOS`  , 格式`APFS`,方案`GUID分区图`\n   \n3. 联网-->重新安装macos\n\n# EFI\n\n1. 打开 Hackintool，选择“磁盘”页，如图挂载硬盘的 EFI 分区。\n\n2. 摇号，即生成随机三码\n   \n   ![image-20201128053146108](https://picgo.genji.xyz/blog/posts/image-20201128053146108.png)\n\n3. 更该电源模式\n\n   ![image-20201128053243350](https://picgo.genji.xyz/blog/posts/image-20201128053243350.png)\n\n# 更新驱动\n\n\n\n[蓝牙和wifi https://github.com/OpenIntelWireless](https://github.com/OpenIntelWireless)\n\n别忘了修改bios\n\n\n\n\n","slug":"Diy/黑苹果","published":1,"_id":"ckm4h6wzv000omeleg4ec139f","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"需要\"><a href=\"#需要\" class=\"headerlink\" title=\"需要\"></a>需要</h1><table>\n<thead>\n<tr>\n<th>配件</th>\n<th>详细</th>\n<th>价格</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>海盗船 ddr4 2666 *2</td>\n<td>16g*2</td>\n<td>¥938</td>\n</tr>\n<tr>\n<td>Intel nuc8i5</td>\n<td>咸鱼 未开封  官保</td>\n<td>¥2200</td>\n</tr>\n<tr>\n<td>西数 黑盘 sn750</td>\n<td>500G</td>\n<td>¥579</td>\n</tr>\n<tr>\n<td>U盘</td>\n<td>自己有</td>\n<td>¥0</td>\n</tr>\n<tr>\n<td>白苹果拆机卡</td>\n<td>我舍弃了(穷)</td>\n<td>¥0</td>\n</tr>\n</tbody></table>\n<p> Intel nuc8i5 黑苹果内存最高支持 2400 ,买2666 是因为 换下来 有的笔记本也能用 .(内存现在最高支持64G)</p>\n<h1 id=\"设置bios\"><a href=\"#设置bios\" class=\"headerlink\" title=\"设置bios\"></a>设置bios</h1><ol>\n<li>开机时，连续点按 F2 进入 BIOS，为了避免之前有其他不合适的改动，建议先按 F9 重置 BIOS 默认设置。</li>\n<li>Boot-&gt;Boot Priority-&gt;Legacy Boot Priority-&gt; « Legacy Boot » ：禁用</li>\n<li>Boot-&gt;Boot Configuration-&gt;<br> UEFI Boot-&gt;« Fast Boot »： 禁用<br> UEFI Boot-&gt;« Boot USB Devices First » ： 启用<br> UEFI Boot-&gt;« Boot Network Devices Last » ：启用<br> Boot Devices-&gt;«Network Boot» ：设置为 « Disable »</li>\n<li>Boot-&gt;Secure Boot-&gt; « Secure Boot » ：禁用</li>\n<li>Security-&gt;Security Features-&gt; « Inter VT for directed I/VO (VT-d) » ： 禁用</li>\n<li>Power-&gt;Secondary Power Settings-&gt; « Wake on LAN from S4/S5 » ： 设置为 « Stay Off »</li>\n</ol>\n<hr>\n<h1 id=\"制作启动U盘\"><a href=\"#制作启动U盘\" class=\"headerlink\" title=\"制作启动U盘\"></a>制作启动U盘</h1><ol>\n<li>准备一个 Fat32 格式的 U 盘（注意：U 盘名<strong>不要</strong>包含汉字和空格！！），剩余空间应大于 500MB。</li>\n</ol>\n<div class=\"note primay flat\"><p>这里放弃了以前的安装方法,换成了在线安装.</p>\n<p>clover 引导换成了 OpenCore</p>\n</div>\n\n<ol start=\"2\">\n<li><p>下载大佬做好的  NUC8_MacOnlineInstaller.zip、EFI-OC-xxxxxx.zip 拷贝至 U 盘根目录并分别解压。(以前是用balenaEtcher 做启动盘)</p>\n</li>\n<li><p>将 U盘 插上 NUC8 并开机，立即按住 command/win 键并持续点按 R 键。OpenCore 支持 Cmd+R 快捷键进入 Recovery 模式，即可开始安装。</p>\n</li>\n</ol>\n<hr>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ol>\n<li><p>快捷键激活 Recovery 模式</p>\n<p>U 盘插入 NUC 后，按下电源键并立即持续点按 F10，进入 BIOS 启动菜单，选择 UEFI 开头的 U 盘，按回车并立即 Cmd+R<br>（注意按回车和 Cmd+R 不能有明显停顿，Cmd+R 具体按法：Cmd为保持长按，R是连续点按，注意“长按”和“持续点按”的区别）<br>如果还是不行，可以持续点按 ESC 或 Option/Alt 键，出现 OC 引导菜单后，按空格，出现隐藏引导项“macOS Boot From Recovery”，选中它并回车进入。</p>\n</li>\n<li><p>选择“磁盘工具”，先格式化要安装 macOS 的硬盘：<br>选择根节点, 名称<code>MacOS</code>  , 格式<code>APFS</code>,方案<code>GUID分区图</code></p>\n</li>\n<li><p>联网–&gt;重新安装macos</p>\n</li>\n</ol>\n<h1 id=\"EFI\"><a href=\"#EFI\" class=\"headerlink\" title=\"EFI\"></a>EFI</h1><ol>\n<li><p>打开 Hackintool，选择“磁盘”页，如图挂载硬盘的 EFI 分区。</p>\n</li>\n<li><p>摇号，即生成随机三码</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128053146108.png\" alt=\"image-20201128053146108\"></p>\n</li>\n<li><p>更该电源模式</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128053243350.png\" alt=\"image-20201128053243350\"></p>\n</li>\n</ol>\n<h1 id=\"更新驱动\"><a href=\"#更新驱动\" class=\"headerlink\" title=\"更新驱动\"></a>更新驱动</h1><p><a href=\"https://github.com/OpenIntelWireless\">蓝牙和wifi https://github.com/OpenIntelWireless</a></p>\n<p>别忘了修改bios</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"需要\"><a href=\"#需要\" class=\"headerlink\" title=\"需要\"></a>需要</h1><table>\n<thead>\n<tr>\n<th>配件</th>\n<th>详细</th>\n<th>价格</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>海盗船 ddr4 2666 *2</td>\n<td>16g*2</td>\n<td>¥938</td>\n</tr>\n<tr>\n<td>Intel nuc8i5</td>\n<td>咸鱼 未开封  官保</td>\n<td>¥2200</td>\n</tr>\n<tr>\n<td>西数 黑盘 sn750</td>\n<td>500G</td>\n<td>¥579</td>\n</tr>\n<tr>\n<td>U盘</td>\n<td>自己有</td>\n<td>¥0</td>\n</tr>\n<tr>\n<td>白苹果拆机卡</td>\n<td>我舍弃了(穷)</td>\n<td>¥0</td>\n</tr>\n</tbody></table>\n<p> Intel nuc8i5 黑苹果内存最高支持 2400 ,买2666 是因为 换下来 有的笔记本也能用 .(内存现在最高支持64G)</p>\n<h1 id=\"设置bios\"><a href=\"#设置bios\" class=\"headerlink\" title=\"设置bios\"></a>设置bios</h1><ol>\n<li>开机时，连续点按 F2 进入 BIOS，为了避免之前有其他不合适的改动，建议先按 F9 重置 BIOS 默认设置。</li>\n<li>Boot-&gt;Boot Priority-&gt;Legacy Boot Priority-&gt; « Legacy Boot » ：禁用</li>\n<li>Boot-&gt;Boot Configuration-&gt;<br> UEFI Boot-&gt;« Fast Boot »： 禁用<br> UEFI Boot-&gt;« Boot USB Devices First » ： 启用<br> UEFI Boot-&gt;« Boot Network Devices Last » ：启用<br> Boot Devices-&gt;«Network Boot» ：设置为 « Disable »</li>\n<li>Boot-&gt;Secure Boot-&gt; « Secure Boot » ：禁用</li>\n<li>Security-&gt;Security Features-&gt; « Inter VT for directed I/VO (VT-d) » ： 禁用</li>\n<li>Power-&gt;Secondary Power Settings-&gt; « Wake on LAN from S4/S5 » ： 设置为 « Stay Off »</li>\n</ol>\n<hr>\n<h1 id=\"制作启动U盘\"><a href=\"#制作启动U盘\" class=\"headerlink\" title=\"制作启动U盘\"></a>制作启动U盘</h1><ol>\n<li>准备一个 Fat32 格式的 U 盘（注意：U 盘名<strong>不要</strong>包含汉字和空格！！），剩余空间应大于 500MB。</li>\n</ol>\n<div class=\"note primay flat\"><p>这里放弃了以前的安装方法,换成了在线安装.</p>\n<p>clover 引导换成了 OpenCore</p>\n</div>\n\n<ol start=\"2\">\n<li><p>下载大佬做好的  NUC8_MacOnlineInstaller.zip、EFI-OC-xxxxxx.zip 拷贝至 U 盘根目录并分别解压。(以前是用balenaEtcher 做启动盘)</p>\n</li>\n<li><p>将 U盘 插上 NUC8 并开机，立即按住 command/win 键并持续点按 R 键。OpenCore 支持 Cmd+R 快捷键进入 Recovery 模式，即可开始安装。</p>\n</li>\n</ol>\n<hr>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><ol>\n<li><p>快捷键激活 Recovery 模式</p>\n<p>U 盘插入 NUC 后，按下电源键并立即持续点按 F10，进入 BIOS 启动菜单，选择 UEFI 开头的 U 盘，按回车并立即 Cmd+R<br>（注意按回车和 Cmd+R 不能有明显停顿，Cmd+R 具体按法：Cmd为保持长按，R是连续点按，注意“长按”和“持续点按”的区别）<br>如果还是不行，可以持续点按 ESC 或 Option/Alt 键，出现 OC 引导菜单后，按空格，出现隐藏引导项“macOS Boot From Recovery”，选中它并回车进入。</p>\n</li>\n<li><p>选择“磁盘工具”，先格式化要安装 macOS 的硬盘：<br>选择根节点, 名称<code>MacOS</code>  , 格式<code>APFS</code>,方案<code>GUID分区图</code></p>\n</li>\n<li><p>联网–&gt;重新安装macos</p>\n</li>\n</ol>\n<h1 id=\"EFI\"><a href=\"#EFI\" class=\"headerlink\" title=\"EFI\"></a>EFI</h1><ol>\n<li><p>打开 Hackintool，选择“磁盘”页，如图挂载硬盘的 EFI 分区。</p>\n</li>\n<li><p>摇号，即生成随机三码</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128053146108.png\" alt=\"image-20201128053146108\"></p>\n</li>\n<li><p>更该电源模式</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201128053243350.png\" alt=\"image-20201128053243350\"></p>\n</li>\n</ol>\n<h1 id=\"更新驱动\"><a href=\"#更新驱动\" class=\"headerlink\" title=\"更新驱动\"></a>更新驱动</h1><p><a href=\"https://github.com/OpenIntelWireless\">蓝牙和wifi https://github.com/OpenIntelWireless</a></p>\n<p>别忘了修改bios</p>\n"},{"title":"mongoDB","date":"2020-03-31T16:00:00.000Z","updated":"2021-03-11T06:34:04.676Z","cover":"https://picgo.genji.xyz/blog/posts/mongoDB.jpg","description":"mongoDB 安装,及其他软件使用","keywords":"mongoDB","_content":"\n# MongoDB安装\n\n\n\n{% note info %}\nMongodb  操作方式 和js  挺像的.省事.\n\n[redis 和 mongoDB区别](https://zhuanlan.zhihu.com/p/86777551)\n\n\n\n[mongodb 官方文档](https://docs.mongodb.com/)\n\n[mongodb 官方文档中文版](https://docs.mongoing.com/)\n\n{% endnote %}\n\n\n\n## Homebrew安装 (我懒所以...)\n\n慢就换源,或者终端开代理.\n```bash\n### 切换库\nbrew tap mongodb/brew\n\n##搜索 看版本\nbrew search mongodb\n\n##安装 \nbrew install mongodb-community\n```\n\n\n\n- 配置文件：**/usr/local/etc/mongod.conf**\n- 日志文件路径：**/usr/local/var/log/mongodb**\n- 数据存放路径：**/usr/local/var/mongodb**\n\n\n\n```\n## 切换数据库目录\nmongod --dbpath /Users/liulingyue/mongodata/data\n\n## 使用 brew 命令启动服务。\nbrew services start mongodb-community\nbrew services stop mongodb-community\n```\n\n\n-----\n# 数据库转移\n把本地的数据 转移到 服务器.\n\n## 打包\n```\n ## 在当前文件夹生成 dump 文件\n mongodump -d 数据库名 \n```\n## 导入\n复制`dump`到服务器,在`dump`当前目录执行\n```\nmongorestore \n```\n-----\n\n# 可视化工具\n\n[Robo 3T](https://robomongo.org/ )     **注意不是studio 3T,那个是花钱的.**\n\n[MongoDB Compass](https://www.mongodb.com/products/compass)  **官方社区的**\n\n\n 感觉这俩都差不多,但是 3T 那行命令是显示出来的,自己可以写很多map,替换啊 ,正则的操作. \n\n~~compass  没有找到在哪写 ,可能有 ,但是我没找到...~~\n\n找到了也还挺好用.哈哈都差不多.\n\n![image-20201008094014627](https://picgo.genji.xyz/blog/posts/image-20201008094014627.png)\n\n-----\n# 数据库连接\n\n1. 本地连本地\n\n   可视化工具链接:   localhost:27017 直接填就行\n\n   ```node\n   //node\n   ## mongoose\n   module.exports = app=>{\n   \tconst mongoose = require('mongoose')\n   \t\tmongoose.connect(\"mongodb://127.0.0.1:27017/name\",{\n   \t\tuseNewUrlParser:true,\n   \t\tuseUnifiedTopology:true,\n   \t\tuseCreateIndex:true\n   \t}).then(() => {\n   \t\tconsole.log(\"本地  连接数据库成功\");\n   \t\t})\n   \t\t.catch(err => {\n   \t\tconsole.log(\"连接数据库失败\");\n   \t\t})\n   }\n   \n   ## node \n   const { MongoClient } = require(\"mongodb\");\n   const uri = 'mongodb://localhost:27017';  \n   (async function() {\n     try {\n       const client = await MongoClient.connect(uri,{ useNewUrlParser: true });\n       // ... anything\n   \n       client.close();\n     } catch(e) {\n       console.error(e)\n     }\n   \n   })()\n   \n   \n   ## 这些我了解的不是特别清晰 \n   \t\tuseNewUrlParser:true,\n   \t\tuseUnifiedTopology:true,\n   \t\tuseCreateIndex:true\n   报警 添上就对了... 应该是允许某些规则...\n   \t\t\n   ```\n\n2.   连接云数据库\n\n\t```zsh\n\t## 一般都会给你个链接 添上你数据库密码 和 dbname 即可\n\tsrv://<username>:<password>@<ip/domain><:port>/<dbname>?<options>\n\t```\n\n3. 可视化工具连服务器 \n\n   等于ssh登录,再连本地.\n\n\t![image-20201008220836636](https://picgo.genji.xyz/blog/posts/image-20201008220836636.png)\n\n\t![image-20201008220812468](https://picgo.genji.xyz/blog/posts/image-20201008220812468.png)\n\n4.  连接需要  authentication 的 \n\n 先创建需要验证的 username\n\n\t```ssh\n\tmongo \n\tuse admin\n\t## 最高权限\n\tdb.createUser({user:\"root\",pwd:\"123456\",roles:[\"root\"]}) \n\t## 指定数据库权限\n\tdb.createUser({user:\"username\",pwd:\"password\",roles:[{role:\"dbOwner\",db:\"数据库名\"}]})\n\n\t```\n\t修改mongod.conf文件 开启验证\n\n\t```diff\n\tsystemLog:\n\t  destination: file\n\t  path: /usr/local/var/log/mongodb/mongo.log\n\t  logAppend: true\n\tstorage:\n \t dbPath: /usr/local/var/mongodb\n\tnet:\n \t port: 27017\n\t-  bindIp: 127.0.0.1\n\t+  bindIp: 0.0.0.0\n\tsecurity:\n\t-  authorization: disabled\n\t+  authorization: enabled\n\t\n\t```\n\n{% note warning simple %}\n别忘了 防火墙 和 安全组 开放 你设置的端口!!!!\n{% endnote %}\n\n重启\n\nnode 方连接方式  同理连接 云数据库.\n\n写下可视化工具连接. \n\n这里`Database` 写admin 就好了 ,**别写你要连接的数据库**.\n\n![image-20201008220457323](https://picgo.genji.xyz/blog/posts/image-20201008220457323.png)\n\n\n\n\n\n####  roles 如下：\n\n**数据库用户角色（Database User Roles)**\n\n- read : 授权User只读数据的权限，允许用户读取指定的数据库\n- readWrite 授权User读/写数据的权限，允许用户读/写指定的数据库\n\n**数据库管理角色（Database Admininstration Roles)**\n\n- dbAdmin：在当前的数据库中执行管理操作，如索引的创建、删除、统计、查看等\n- dbOwner：在当前的数据库中执行任意操作，增、删、改、查等\n- userAdmin ：在当前的数据库中管理User**，**创建、删除和管理用户。\n\n**备份和还原角色（Backup and Restoration Roles)**\n\n- backup\n- restore\n\n**跨库角色（All-Database Roles)**\n\n- readAnyDatabase：授权在所有的数据库上读取数据的权限，只在admin 中可用\n- readWriteAnyDatabase：授权在所有的数据库上读写数据的权限，只在admin 中可用\n- userAdminAnyDatabase：授权在所有的数据库上管理User的权限，只在admin中可用\n- dbAdminAnyDatabase： 授权管理所有数据库的权限，只在admin 中可用\n\n**集群管理角色（Cluster Administration Roles)**\n\n- clusterAdmin：授权管理集群的最高权限，只在admin中可用\n- clusterManager：授权管理和监控集群的权限\n- clusterMonoitor：授权监控集群的权限，对监控工具具有readonly的权限\n- hostManager：管理server\n\n**超级角色（super master  Roles)**\n\n- root ：超级账户和权限，只在admin中可用le\n\n\n\n# mongodb 常用命令\n\n```\n# 连接格式 有的需要srv 有的不需要验证直接连不用username\nmongodb://[username:password@]host1[:port1][,...hostN[:portN]]][/[database][?options]]\n\n# 查看db 运行ip 和 端口信息\ndb.getMongo()\n\n\n# 创建超级管理员\ndb.createUser({user:\"root\",pwd:\"123456\",roles:[\"root\"]})\n\n# mongo \n# use admin \n\n\n# 更改数据库 \n{\n \"_id\":ObjectId(),\n \"icon\":\"https://localhost:3000/upload/fdjfiejifejfe.png\"\n}\n\ndb.getCollection('collections').find({}).map(doc => {\n\tdoc.icon = doc.icon ? doc.icon.replace('localhost:3000','yourDomain.com') : null\n\treturn doc\n\tdb.collectionName.save(doc)\n})\n\n\n# 更改嵌套\n{\n\t\"_id\":ObjectId(),\n\t\"items\":[\n\t\t{\n\t\t\t\"_id\":ObjectId(),\n\t\t\t\"icon\":\"https://localhost:3000/upload/fdjfiejifejfe.png\"\n\t\t},\n\t\t{\n\t\t\t\"_id\":ObjectId(),\n\t\t\t\"icon\":\"https://localhost:3000/upload/12323123.png\"\n\t\t}\n\t]\n}\n\n\ndb.getCollection('collections').find({}).map(doc => {\n\t\n\t# 这里没用doc.items = doc.items.map()   因为更改的是个对象 改地址等于改本身\n\tdoc.items.map( item => {\n\t\titem.icon = item.icon ?item.icon.replace('localhost:3000','yourDomain.com') : null\n\t\treturn item\n\t})\n\treturn doc\n\tdb.collectionName.save(doc)\n})\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/DB/2020-04-01_DB_mongoDB.md","raw":"---\ntitle: mongoDB \ndate: 2020-04-01 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/mongoDB.jpg\ndescription: mongoDB 安装,及其他软件使用\n\ntags:  \tmongoDB\nkeywords: mongoDB\ncategories: [DB,mongodb]\n---\n\n# MongoDB安装\n\n\n\n{% note info %}\nMongodb  操作方式 和js  挺像的.省事.\n\n[redis 和 mongoDB区别](https://zhuanlan.zhihu.com/p/86777551)\n\n\n\n[mongodb 官方文档](https://docs.mongodb.com/)\n\n[mongodb 官方文档中文版](https://docs.mongoing.com/)\n\n{% endnote %}\n\n\n\n## Homebrew安装 (我懒所以...)\n\n慢就换源,或者终端开代理.\n```bash\n### 切换库\nbrew tap mongodb/brew\n\n##搜索 看版本\nbrew search mongodb\n\n##安装 \nbrew install mongodb-community\n```\n\n\n\n- 配置文件：**/usr/local/etc/mongod.conf**\n- 日志文件路径：**/usr/local/var/log/mongodb**\n- 数据存放路径：**/usr/local/var/mongodb**\n\n\n\n```\n## 切换数据库目录\nmongod --dbpath /Users/liulingyue/mongodata/data\n\n## 使用 brew 命令启动服务。\nbrew services start mongodb-community\nbrew services stop mongodb-community\n```\n\n\n-----\n# 数据库转移\n把本地的数据 转移到 服务器.\n\n## 打包\n```\n ## 在当前文件夹生成 dump 文件\n mongodump -d 数据库名 \n```\n## 导入\n复制`dump`到服务器,在`dump`当前目录执行\n```\nmongorestore \n```\n-----\n\n# 可视化工具\n\n[Robo 3T](https://robomongo.org/ )     **注意不是studio 3T,那个是花钱的.**\n\n[MongoDB Compass](https://www.mongodb.com/products/compass)  **官方社区的**\n\n\n 感觉这俩都差不多,但是 3T 那行命令是显示出来的,自己可以写很多map,替换啊 ,正则的操作. \n\n~~compass  没有找到在哪写 ,可能有 ,但是我没找到...~~\n\n找到了也还挺好用.哈哈都差不多.\n\n![image-20201008094014627](https://picgo.genji.xyz/blog/posts/image-20201008094014627.png)\n\n-----\n# 数据库连接\n\n1. 本地连本地\n\n   可视化工具链接:   localhost:27017 直接填就行\n\n   ```node\n   //node\n   ## mongoose\n   module.exports = app=>{\n   \tconst mongoose = require('mongoose')\n   \t\tmongoose.connect(\"mongodb://127.0.0.1:27017/name\",{\n   \t\tuseNewUrlParser:true,\n   \t\tuseUnifiedTopology:true,\n   \t\tuseCreateIndex:true\n   \t}).then(() => {\n   \t\tconsole.log(\"本地  连接数据库成功\");\n   \t\t})\n   \t\t.catch(err => {\n   \t\tconsole.log(\"连接数据库失败\");\n   \t\t})\n   }\n   \n   ## node \n   const { MongoClient } = require(\"mongodb\");\n   const uri = 'mongodb://localhost:27017';  \n   (async function() {\n     try {\n       const client = await MongoClient.connect(uri,{ useNewUrlParser: true });\n       // ... anything\n   \n       client.close();\n     } catch(e) {\n       console.error(e)\n     }\n   \n   })()\n   \n   \n   ## 这些我了解的不是特别清晰 \n   \t\tuseNewUrlParser:true,\n   \t\tuseUnifiedTopology:true,\n   \t\tuseCreateIndex:true\n   报警 添上就对了... 应该是允许某些规则...\n   \t\t\n   ```\n\n2.   连接云数据库\n\n\t```zsh\n\t## 一般都会给你个链接 添上你数据库密码 和 dbname 即可\n\tsrv://<username>:<password>@<ip/domain><:port>/<dbname>?<options>\n\t```\n\n3. 可视化工具连服务器 \n\n   等于ssh登录,再连本地.\n\n\t![image-20201008220836636](https://picgo.genji.xyz/blog/posts/image-20201008220836636.png)\n\n\t![image-20201008220812468](https://picgo.genji.xyz/blog/posts/image-20201008220812468.png)\n\n4.  连接需要  authentication 的 \n\n 先创建需要验证的 username\n\n\t```ssh\n\tmongo \n\tuse admin\n\t## 最高权限\n\tdb.createUser({user:\"root\",pwd:\"123456\",roles:[\"root\"]}) \n\t## 指定数据库权限\n\tdb.createUser({user:\"username\",pwd:\"password\",roles:[{role:\"dbOwner\",db:\"数据库名\"}]})\n\n\t```\n\t修改mongod.conf文件 开启验证\n\n\t```diff\n\tsystemLog:\n\t  destination: file\n\t  path: /usr/local/var/log/mongodb/mongo.log\n\t  logAppend: true\n\tstorage:\n \t dbPath: /usr/local/var/mongodb\n\tnet:\n \t port: 27017\n\t-  bindIp: 127.0.0.1\n\t+  bindIp: 0.0.0.0\n\tsecurity:\n\t-  authorization: disabled\n\t+  authorization: enabled\n\t\n\t```\n\n{% note warning simple %}\n别忘了 防火墙 和 安全组 开放 你设置的端口!!!!\n{% endnote %}\n\n重启\n\nnode 方连接方式  同理连接 云数据库.\n\n写下可视化工具连接. \n\n这里`Database` 写admin 就好了 ,**别写你要连接的数据库**.\n\n![image-20201008220457323](https://picgo.genji.xyz/blog/posts/image-20201008220457323.png)\n\n\n\n\n\n####  roles 如下：\n\n**数据库用户角色（Database User Roles)**\n\n- read : 授权User只读数据的权限，允许用户读取指定的数据库\n- readWrite 授权User读/写数据的权限，允许用户读/写指定的数据库\n\n**数据库管理角色（Database Admininstration Roles)**\n\n- dbAdmin：在当前的数据库中执行管理操作，如索引的创建、删除、统计、查看等\n- dbOwner：在当前的数据库中执行任意操作，增、删、改、查等\n- userAdmin ：在当前的数据库中管理User**，**创建、删除和管理用户。\n\n**备份和还原角色（Backup and Restoration Roles)**\n\n- backup\n- restore\n\n**跨库角色（All-Database Roles)**\n\n- readAnyDatabase：授权在所有的数据库上读取数据的权限，只在admin 中可用\n- readWriteAnyDatabase：授权在所有的数据库上读写数据的权限，只在admin 中可用\n- userAdminAnyDatabase：授权在所有的数据库上管理User的权限，只在admin中可用\n- dbAdminAnyDatabase： 授权管理所有数据库的权限，只在admin 中可用\n\n**集群管理角色（Cluster Administration Roles)**\n\n- clusterAdmin：授权管理集群的最高权限，只在admin中可用\n- clusterManager：授权管理和监控集群的权限\n- clusterMonoitor：授权监控集群的权限，对监控工具具有readonly的权限\n- hostManager：管理server\n\n**超级角色（super master  Roles)**\n\n- root ：超级账户和权限，只在admin中可用le\n\n\n\n# mongodb 常用命令\n\n```\n# 连接格式 有的需要srv 有的不需要验证直接连不用username\nmongodb://[username:password@]host1[:port1][,...hostN[:portN]]][/[database][?options]]\n\n# 查看db 运行ip 和 端口信息\ndb.getMongo()\n\n\n# 创建超级管理员\ndb.createUser({user:\"root\",pwd:\"123456\",roles:[\"root\"]})\n\n# mongo \n# use admin \n\n\n# 更改数据库 \n{\n \"_id\":ObjectId(),\n \"icon\":\"https://localhost:3000/upload/fdjfiejifejfe.png\"\n}\n\ndb.getCollection('collections').find({}).map(doc => {\n\tdoc.icon = doc.icon ? doc.icon.replace('localhost:3000','yourDomain.com') : null\n\treturn doc\n\tdb.collectionName.save(doc)\n})\n\n\n# 更改嵌套\n{\n\t\"_id\":ObjectId(),\n\t\"items\":[\n\t\t{\n\t\t\t\"_id\":ObjectId(),\n\t\t\t\"icon\":\"https://localhost:3000/upload/fdjfiejifejfe.png\"\n\t\t},\n\t\t{\n\t\t\t\"_id\":ObjectId(),\n\t\t\t\"icon\":\"https://localhost:3000/upload/12323123.png\"\n\t\t}\n\t]\n}\n\n\ndb.getCollection('collections').find({}).map(doc => {\n\t\n\t# 这里没用doc.items = doc.items.map()   因为更改的是个对象 改地址等于改本身\n\tdoc.items.map( item => {\n\t\titem.icon = item.icon ?item.icon.replace('localhost:3000','yourDomain.com') : null\n\t\treturn item\n\t})\n\treturn doc\n\tdb.collectionName.save(doc)\n})\n\n\n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n","slug":"DB/2020-04-01_DB_mongoDB","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tvu0000dmlegqma916n","content":"<h1 id=\"MongoDB安装\"><a href=\"#MongoDB安装\" class=\"headerlink\" title=\"MongoDB安装\"></a>MongoDB安装</h1><div class=\"note info flat\"><p>Mongodb  操作方式 和js  挺像的.省事.</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/86777551\">redis 和 mongoDB区别</a></p>\n<p><a href=\"https://docs.mongodb.com/\">mongodb 官方文档</a></p>\n<p><a href=\"https://docs.mongoing.com/\">mongodb 官方文档中文版</a></p>\n</div>\n\n\n\n<h2 id=\"Homebrew安装-我懒所以…\"><a href=\"#Homebrew安装-我懒所以…\" class=\"headerlink\" title=\"Homebrew安装 (我懒所以…)\"></a>Homebrew安装 (我懒所以…)</h2><p>慢就换源,或者终端开代理.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 切换库</span></span><br><span class=\"line\">brew tap mongodb/brew</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##搜索 看版本</span></span><br><span class=\"line\">brew search mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##安装 </span></span><br><span class=\"line\">brew install mongodb-community</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>配置文件：**/usr/local/etc/mongod.conf**</li>\n<li>日志文件路径：**/usr/local/var/log/mongodb**</li>\n<li>数据存放路径：**/usr/local/var/mongodb**</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 切换数据库目录</span><br><span class=\"line\">mongod --dbpath &#x2F;Users&#x2F;liulingyue&#x2F;mongodata&#x2F;data</span><br><span class=\"line\"></span><br><span class=\"line\">## 使用 brew 命令启动服务。</span><br><span class=\"line\">brew services start mongodb-community</span><br><span class=\"line\">brew services stop mongodb-community</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h1 id=\"数据库转移\"><a href=\"#数据库转移\" class=\"headerlink\" title=\"数据库转移\"></a>数据库转移</h1><p>把本地的数据 转移到 服务器.</p>\n<h2 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 在当前文件夹生成 dump 文件</span><br><span class=\"line\">mongodump -d 数据库名 </span><br></pre></td></tr></table></figure>\n<h2 id=\"导入\"><a href=\"#导入\" class=\"headerlink\" title=\"导入\"></a>导入</h2><p>复制<code>dump</code>到服务器,在<code>dump</code>当前目录执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongorestore </span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"可视化工具\"><a href=\"#可视化工具\" class=\"headerlink\" title=\"可视化工具\"></a>可视化工具</h1><p><a href=\"https://robomongo.org/\">Robo 3T</a>     <strong>注意不是studio 3T,那个是花钱的.</strong></p>\n<p><a href=\"https://www.mongodb.com/products/compass\">MongoDB Compass</a>  <strong>官方社区的</strong></p>\n<p> 感觉这俩都差不多,但是 3T 那行命令是显示出来的,自己可以写很多map,替换啊 ,正则的操作. </p>\n<p><del>compass  没有找到在哪写 ,可能有 ,但是我没找到…</del></p>\n<p>找到了也还挺好用.哈哈都差不多.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201008094014627.png\" alt=\"image-20201008094014627\"></p>\n<hr>\n<h1 id=\"数据库连接\"><a href=\"#数据库连接\" class=\"headerlink\" title=\"数据库连接\"></a>数据库连接</h1><ol>\n<li><p>本地连本地</p>\n<p>可视化工具链接:   localhost:27017 直接填就行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;node</span><br><span class=\"line\">## mongoose</span><br><span class=\"line\">module.exports &#x3D; app&#x3D;&gt;&#123;</span><br><span class=\"line\">\tconst mongoose &#x3D; require(&#39;mongoose&#39;)</span><br><span class=\"line\">\t\tmongoose.connect(&quot;mongodb:&#x2F;&#x2F;127.0.0.1:27017&#x2F;name&quot;,&#123;</span><br><span class=\"line\">\t\tuseNewUrlParser:true,</span><br><span class=\"line\">\t\tuseUnifiedTopology:true,</span><br><span class=\"line\">\t\tuseCreateIndex:true</span><br><span class=\"line\">\t&#125;).then(() &#x3D;&gt; &#123;</span><br><span class=\"line\">\t\tconsole.log(&quot;本地  连接数据库成功&quot;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(err &#x3D;&gt; &#123;</span><br><span class=\"line\">\t\tconsole.log(&quot;连接数据库失败&quot;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">## node </span><br><span class=\"line\">const &#123; MongoClient &#125; &#x3D; require(&quot;mongodb&quot;);</span><br><span class=\"line\">const uri &#x3D; &#39;mongodb:&#x2F;&#x2F;localhost:27017&#39;;  </span><br><span class=\"line\">(async function() &#123;</span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\">    const client &#x3D; await MongoClient.connect(uri,&#123; useNewUrlParser: true &#125;);</span><br><span class=\"line\">    &#x2F;&#x2F; ... anything</span><br><span class=\"line\"></span><br><span class=\"line\">    client.close();</span><br><span class=\"line\">  &#125; catch(e) &#123;</span><br><span class=\"line\">    console.error(e)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## 这些我了解的不是特别清晰 </span><br><span class=\"line\">\t\tuseNewUrlParser:true,</span><br><span class=\"line\">\t\tuseUnifiedTopology:true,</span><br><span class=\"line\">\t\tuseCreateIndex:true</span><br><span class=\"line\">报警 添上就对了... 应该是允许某些规则...</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>连接云数据库</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 一般都会给你个链接 添上你数据库密码 和 dbname 即可</span></span><br><span class=\"line\">srv://&lt;username&gt;:&lt;password&gt;@&lt;ip/domain&gt;&lt;:port&gt;/&lt;dbname&gt;?&lt;options&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可视化工具连服务器 </p>\n<p>等于ssh登录,再连本地.</p>\n<p> <img src=\"https://picgo.genji.xyz/blog/posts/image-20201008220836636.png\" alt=\"image-20201008220836636\"></p>\n<p> <img src=\"https://picgo.genji.xyz/blog/posts/image-20201008220812468.png\" alt=\"image-20201008220812468\"></p>\n</li>\n<li><p>连接需要  authentication 的 </p>\n<p>先创建需要验证的 username</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo </span><br><span class=\"line\">use admin</span><br><span class=\"line\">## 最高权限</span><br><span class=\"line\">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&quot;root&quot;]&#125;) </span><br><span class=\"line\">## 指定数据库权限</span><br><span class=\"line\">db.createUser(&#123;user:&quot;username&quot;,pwd:&quot;password&quot;,roles:[&#123;role:&quot;dbOwner&quot;,db:&quot;数据库名&quot;&#125;]&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>修改mongod.conf文件 开启验证</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemLog:</span><br><span class=\"line\">  destination: file</span><br><span class=\"line\">  path: /usr/local/var/log/mongodb/mongo.log</span><br><span class=\"line\">  logAppend: true</span><br><span class=\"line\">storage:</span><br><span class=\"line\">\t dbPath: /usr/local/var/mongodb</span><br><span class=\"line\">net:</span><br><span class=\"line\">\t port: 27017</span><br><span class=\"line\"><span class=\"deletion\">-  bindIp: 127.0.0.1</span></span><br><span class=\"line\"><span class=\"addition\">+  bindIp: 0.0.0.0</span></span><br><span class=\"line\">security:</span><br><span class=\"line\"><span class=\"deletion\">-  authorization: disabled</span></span><br><span class=\"line\"><span class=\"addition\">+  authorization: enabled</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<div class=\"note warning simple\"><p>别忘了 防火墙 和 安全组 开放 你设置的端口!!!!</p>\n</div>\n\n<p>重启</p>\n<p>node 方连接方式  同理连接 云数据库.</p>\n<p>写下可视化工具连接. </p>\n<p>这里<code>Database</code> 写admin 就好了 ,<strong>别写你要连接的数据库</strong>.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201008220457323.png\" alt=\"image-20201008220457323\"></p>\n<h4 id=\"roles-如下：\"><a href=\"#roles-如下：\" class=\"headerlink\" title=\"roles 如下：\"></a>roles 如下：</h4><p><strong>数据库用户角色（Database User Roles)</strong></p>\n<ul>\n<li>read : 授权User只读数据的权限，允许用户读取指定的数据库</li>\n<li>readWrite 授权User读/写数据的权限，允许用户读/写指定的数据库</li>\n</ul>\n<p><strong>数据库管理角色（Database Admininstration Roles)</strong></p>\n<ul>\n<li>dbAdmin：在当前的数据库中执行管理操作，如索引的创建、删除、统计、查看等</li>\n<li>dbOwner：在当前的数据库中执行任意操作，增、删、改、查等</li>\n<li>userAdmin ：在当前的数据库中管理User<strong>，</strong>创建、删除和管理用户。</li>\n</ul>\n<p><strong>备份和还原角色（Backup and Restoration Roles)</strong></p>\n<ul>\n<li>backup</li>\n<li>restore</li>\n</ul>\n<p><strong>跨库角色（All-Database Roles)</strong></p>\n<ul>\n<li>readAnyDatabase：授权在所有的数据库上读取数据的权限，只在admin 中可用</li>\n<li>readWriteAnyDatabase：授权在所有的数据库上读写数据的权限，只在admin 中可用</li>\n<li>userAdminAnyDatabase：授权在所有的数据库上管理User的权限，只在admin中可用</li>\n<li>dbAdminAnyDatabase： 授权管理所有数据库的权限，只在admin 中可用</li>\n</ul>\n<p><strong>集群管理角色（Cluster Administration Roles)</strong></p>\n<ul>\n<li>clusterAdmin：授权管理集群的最高权限，只在admin中可用</li>\n<li>clusterManager：授权管理和监控集群的权限</li>\n<li>clusterMonoitor：授权监控集群的权限，对监控工具具有readonly的权限</li>\n<li>hostManager：管理server</li>\n</ul>\n<p><strong>超级角色（super master  Roles)</strong></p>\n<ul>\n<li>root ：超级账户和权限，只在admin中可用le</li>\n</ul>\n<h1 id=\"mongodb-常用命令\"><a href=\"#mongodb-常用命令\" class=\"headerlink\" title=\"mongodb 常用命令\"></a>mongodb 常用命令</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 连接格式 有的需要srv 有的不需要验证直接连不用username</span><br><span class=\"line\">mongodb:&#x2F;&#x2F;[username:password@]host1[:port1][,...hostN[:portN]]][&#x2F;[database][?options]]</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看db 运行ip 和 端口信息</span><br><span class=\"line\">db.getMongo()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建超级管理员</span><br><span class=\"line\">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&quot;root&quot;]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"># mongo </span><br><span class=\"line\"># use admin </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 更改数据库 </span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> &quot;_id&quot;:ObjectId(),</span><br><span class=\"line\"> &quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;fdjfiejifejfe.png&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">db.getCollection(&#39;collections&#39;).find(&#123;&#125;).map(doc &#x3D;&gt; &#123;</span><br><span class=\"line\">\tdoc.icon &#x3D; doc.icon ? doc.icon.replace(&#39;localhost:3000&#39;,&#39;yourDomain.com&#39;) : null</span><br><span class=\"line\">\treturn doc</span><br><span class=\"line\">\tdb.collectionName.save(doc)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 更改嵌套</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;_id&quot;:ObjectId(),</span><br><span class=\"line\">\t&quot;items&quot;:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t&quot;_id&quot;:ObjectId(),</span><br><span class=\"line\">\t\t\t&quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;fdjfiejifejfe.png&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t&quot;_id&quot;:ObjectId(),</span><br><span class=\"line\">\t\t\t&quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;12323123.png&quot;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.getCollection(&#39;collections&#39;).find(&#123;&#125;).map(doc &#x3D;&gt; &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t# 这里没用doc.items &#x3D; doc.items.map()   因为更改的是个对象 改地址等于改本身</span><br><span class=\"line\">\tdoc.items.map( item &#x3D;&gt; &#123;</span><br><span class=\"line\">\t\titem.icon &#x3D; item.icon ?item.icon.replace(&#39;localhost:3000&#39;,&#39;yourDomain.com&#39;) : null</span><br><span class=\"line\">\t\treturn item</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\treturn doc</span><br><span class=\"line\">\tdb.collectionName.save(doc)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MongoDB安装\"><a href=\"#MongoDB安装\" class=\"headerlink\" title=\"MongoDB安装\"></a>MongoDB安装</h1><div class=\"note info flat\"><p>Mongodb  操作方式 和js  挺像的.省事.</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/86777551\">redis 和 mongoDB区别</a></p>\n<p><a href=\"https://docs.mongodb.com/\">mongodb 官方文档</a></p>\n<p><a href=\"https://docs.mongoing.com/\">mongodb 官方文档中文版</a></p>\n</div>\n\n\n\n<h2 id=\"Homebrew安装-我懒所以…\"><a href=\"#Homebrew安装-我懒所以…\" class=\"headerlink\" title=\"Homebrew安装 (我懒所以…)\"></a>Homebrew安装 (我懒所以…)</h2><p>慢就换源,或者终端开代理.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">### 切换库</span></span><br><span class=\"line\">brew tap mongodb/brew</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##搜索 看版本</span></span><br><span class=\"line\">brew search mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##安装 </span></span><br><span class=\"line\">brew install mongodb-community</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>配置文件：**/usr/local/etc/mongod.conf**</li>\n<li>日志文件路径：**/usr/local/var/log/mongodb**</li>\n<li>数据存放路径：**/usr/local/var/mongodb**</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 切换数据库目录</span><br><span class=\"line\">mongod --dbpath &#x2F;Users&#x2F;liulingyue&#x2F;mongodata&#x2F;data</span><br><span class=\"line\"></span><br><span class=\"line\">## 使用 brew 命令启动服务。</span><br><span class=\"line\">brew services start mongodb-community</span><br><span class=\"line\">brew services stop mongodb-community</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<h1 id=\"数据库转移\"><a href=\"#数据库转移\" class=\"headerlink\" title=\"数据库转移\"></a>数据库转移</h1><p>把本地的数据 转移到 服务器.</p>\n<h2 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 在当前文件夹生成 dump 文件</span><br><span class=\"line\">mongodump -d 数据库名 </span><br></pre></td></tr></table></figure>\n<h2 id=\"导入\"><a href=\"#导入\" class=\"headerlink\" title=\"导入\"></a>导入</h2><p>复制<code>dump</code>到服务器,在<code>dump</code>当前目录执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongorestore </span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"可视化工具\"><a href=\"#可视化工具\" class=\"headerlink\" title=\"可视化工具\"></a>可视化工具</h1><p><a href=\"https://robomongo.org/\">Robo 3T</a>     <strong>注意不是studio 3T,那个是花钱的.</strong></p>\n<p><a href=\"https://www.mongodb.com/products/compass\">MongoDB Compass</a>  <strong>官方社区的</strong></p>\n<p> 感觉这俩都差不多,但是 3T 那行命令是显示出来的,自己可以写很多map,替换啊 ,正则的操作. </p>\n<p><del>compass  没有找到在哪写 ,可能有 ,但是我没找到…</del></p>\n<p>找到了也还挺好用.哈哈都差不多.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201008094014627.png\" alt=\"image-20201008094014627\"></p>\n<hr>\n<h1 id=\"数据库连接\"><a href=\"#数据库连接\" class=\"headerlink\" title=\"数据库连接\"></a>数据库连接</h1><ol>\n<li><p>本地连本地</p>\n<p>可视化工具链接:   localhost:27017 直接填就行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;node</span><br><span class=\"line\">## mongoose</span><br><span class=\"line\">module.exports &#x3D; app&#x3D;&gt;&#123;</span><br><span class=\"line\">\tconst mongoose &#x3D; require(&#39;mongoose&#39;)</span><br><span class=\"line\">\t\tmongoose.connect(&quot;mongodb:&#x2F;&#x2F;127.0.0.1:27017&#x2F;name&quot;,&#123;</span><br><span class=\"line\">\t\tuseNewUrlParser:true,</span><br><span class=\"line\">\t\tuseUnifiedTopology:true,</span><br><span class=\"line\">\t\tuseCreateIndex:true</span><br><span class=\"line\">\t&#125;).then(() &#x3D;&gt; &#123;</span><br><span class=\"line\">\t\tconsole.log(&quot;本地  连接数据库成功&quot;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t\t.catch(err &#x3D;&gt; &#123;</span><br><span class=\"line\">\t\tconsole.log(&quot;连接数据库失败&quot;);</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">## node </span><br><span class=\"line\">const &#123; MongoClient &#125; &#x3D; require(&quot;mongodb&quot;);</span><br><span class=\"line\">const uri &#x3D; &#39;mongodb:&#x2F;&#x2F;localhost:27017&#39;;  </span><br><span class=\"line\">(async function() &#123;</span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\">    const client &#x3D; await MongoClient.connect(uri,&#123; useNewUrlParser: true &#125;);</span><br><span class=\"line\">    &#x2F;&#x2F; ... anything</span><br><span class=\"line\"></span><br><span class=\"line\">    client.close();</span><br><span class=\"line\">  &#125; catch(e) &#123;</span><br><span class=\"line\">    console.error(e)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## 这些我了解的不是特别清晰 </span><br><span class=\"line\">\t\tuseNewUrlParser:true,</span><br><span class=\"line\">\t\tuseUnifiedTopology:true,</span><br><span class=\"line\">\t\tuseCreateIndex:true</span><br><span class=\"line\">报警 添上就对了... 应该是允许某些规则...</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>连接云数据库</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 一般都会给你个链接 添上你数据库密码 和 dbname 即可</span></span><br><span class=\"line\">srv://&lt;username&gt;:&lt;password&gt;@&lt;ip/domain&gt;&lt;:port&gt;/&lt;dbname&gt;?&lt;options&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可视化工具连服务器 </p>\n<p>等于ssh登录,再连本地.</p>\n<p> <img src=\"https://picgo.genji.xyz/blog/posts/image-20201008220836636.png\" alt=\"image-20201008220836636\"></p>\n<p> <img src=\"https://picgo.genji.xyz/blog/posts/image-20201008220812468.png\" alt=\"image-20201008220812468\"></p>\n</li>\n<li><p>连接需要  authentication 的 </p>\n<p>先创建需要验证的 username</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo </span><br><span class=\"line\">use admin</span><br><span class=\"line\">## 最高权限</span><br><span class=\"line\">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&quot;root&quot;]&#125;) </span><br><span class=\"line\">## 指定数据库权限</span><br><span class=\"line\">db.createUser(&#123;user:&quot;username&quot;,pwd:&quot;password&quot;,roles:[&#123;role:&quot;dbOwner&quot;,db:&quot;数据库名&quot;&#125;]&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>修改mongod.conf文件 开启验证</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemLog:</span><br><span class=\"line\">  destination: file</span><br><span class=\"line\">  path: /usr/local/var/log/mongodb/mongo.log</span><br><span class=\"line\">  logAppend: true</span><br><span class=\"line\">storage:</span><br><span class=\"line\">\t dbPath: /usr/local/var/mongodb</span><br><span class=\"line\">net:</span><br><span class=\"line\">\t port: 27017</span><br><span class=\"line\"><span class=\"deletion\">-  bindIp: 127.0.0.1</span></span><br><span class=\"line\"><span class=\"addition\">+  bindIp: 0.0.0.0</span></span><br><span class=\"line\">security:</span><br><span class=\"line\"><span class=\"deletion\">-  authorization: disabled</span></span><br><span class=\"line\"><span class=\"addition\">+  authorization: enabled</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<div class=\"note warning simple\"><p>别忘了 防火墙 和 安全组 开放 你设置的端口!!!!</p>\n</div>\n\n<p>重启</p>\n<p>node 方连接方式  同理连接 云数据库.</p>\n<p>写下可视化工具连接. </p>\n<p>这里<code>Database</code> 写admin 就好了 ,<strong>别写你要连接的数据库</strong>.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201008220457323.png\" alt=\"image-20201008220457323\"></p>\n<h4 id=\"roles-如下：\"><a href=\"#roles-如下：\" class=\"headerlink\" title=\"roles 如下：\"></a>roles 如下：</h4><p><strong>数据库用户角色（Database User Roles)</strong></p>\n<ul>\n<li>read : 授权User只读数据的权限，允许用户读取指定的数据库</li>\n<li>readWrite 授权User读/写数据的权限，允许用户读/写指定的数据库</li>\n</ul>\n<p><strong>数据库管理角色（Database Admininstration Roles)</strong></p>\n<ul>\n<li>dbAdmin：在当前的数据库中执行管理操作，如索引的创建、删除、统计、查看等</li>\n<li>dbOwner：在当前的数据库中执行任意操作，增、删、改、查等</li>\n<li>userAdmin ：在当前的数据库中管理User<strong>，</strong>创建、删除和管理用户。</li>\n</ul>\n<p><strong>备份和还原角色（Backup and Restoration Roles)</strong></p>\n<ul>\n<li>backup</li>\n<li>restore</li>\n</ul>\n<p><strong>跨库角色（All-Database Roles)</strong></p>\n<ul>\n<li>readAnyDatabase：授权在所有的数据库上读取数据的权限，只在admin 中可用</li>\n<li>readWriteAnyDatabase：授权在所有的数据库上读写数据的权限，只在admin 中可用</li>\n<li>userAdminAnyDatabase：授权在所有的数据库上管理User的权限，只在admin中可用</li>\n<li>dbAdminAnyDatabase： 授权管理所有数据库的权限，只在admin 中可用</li>\n</ul>\n<p><strong>集群管理角色（Cluster Administration Roles)</strong></p>\n<ul>\n<li>clusterAdmin：授权管理集群的最高权限，只在admin中可用</li>\n<li>clusterManager：授权管理和监控集群的权限</li>\n<li>clusterMonoitor：授权监控集群的权限，对监控工具具有readonly的权限</li>\n<li>hostManager：管理server</li>\n</ul>\n<p><strong>超级角色（super master  Roles)</strong></p>\n<ul>\n<li>root ：超级账户和权限，只在admin中可用le</li>\n</ul>\n<h1 id=\"mongodb-常用命令\"><a href=\"#mongodb-常用命令\" class=\"headerlink\" title=\"mongodb 常用命令\"></a>mongodb 常用命令</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 连接格式 有的需要srv 有的不需要验证直接连不用username</span><br><span class=\"line\">mongodb:&#x2F;&#x2F;[username:password@]host1[:port1][,...hostN[:portN]]][&#x2F;[database][?options]]</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看db 运行ip 和 端口信息</span><br><span class=\"line\">db.getMongo()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建超级管理员</span><br><span class=\"line\">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&quot;root&quot;]&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"># mongo </span><br><span class=\"line\"># use admin </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 更改数据库 </span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> &quot;_id&quot;:ObjectId(),</span><br><span class=\"line\"> &quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;fdjfiejifejfe.png&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">db.getCollection(&#39;collections&#39;).find(&#123;&#125;).map(doc &#x3D;&gt; &#123;</span><br><span class=\"line\">\tdoc.icon &#x3D; doc.icon ? doc.icon.replace(&#39;localhost:3000&#39;,&#39;yourDomain.com&#39;) : null</span><br><span class=\"line\">\treturn doc</span><br><span class=\"line\">\tdb.collectionName.save(doc)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 更改嵌套</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&quot;_id&quot;:ObjectId(),</span><br><span class=\"line\">\t&quot;items&quot;:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t&quot;_id&quot;:ObjectId(),</span><br><span class=\"line\">\t\t\t&quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;fdjfiejifejfe.png&quot;</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t&quot;_id&quot;:ObjectId(),</span><br><span class=\"line\">\t\t\t&quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;12323123.png&quot;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.getCollection(&#39;collections&#39;).find(&#123;&#125;).map(doc &#x3D;&gt; &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t# 这里没用doc.items &#x3D; doc.items.map()   因为更改的是个对象 改地址等于改本身</span><br><span class=\"line\">\tdoc.items.map( item &#x3D;&gt; &#123;</span><br><span class=\"line\">\t\titem.icon &#x3D; item.icon ?item.icon.replace(&#39;localhost:3000&#39;,&#39;yourDomain.com&#39;) : null</span><br><span class=\"line\">\t\treturn item</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\treturn doc</span><br><span class=\"line\">\tdb.collectionName.save(doc)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n\n"},{"title":"awtrix","date":"2020-09-01T16:00:00.000Z","updated":"2021-03-11T06:26:00.037Z","cover":"https://picgo.genji.xyz/blog/posts/image-20200930140531153.png","description":"像素电子时钟 制作","keywords":"awtrix,像素电子时钟","_content":"\n\n\n\n\n\n\n\n\n#  <i class=\"fas fa-dog\"></i> awtrix\n\n{% note success no-icon %}\n最开始是在YouTube看到的这个项目,当时这个项目还是 version 1.0  \n现在都有`pro`了!  闲着没事更新一下\n{% endnote %}\n\n\n\n\n\n## 硬件功能删减\n\n我决定只保留基本的功能,\n\n因为其他的功能都不太好用(不是云玩家,当时测试了一个月)  \n\n\n\n- 自动调节亮度(添加光敏电阻)   不稳定\n\n- 播放器功能 (DFplayer)  鸡肋\n\n- 手势功能  用不上几次\n\n- 温度   用小米挺香  \n\n    \n\n  \n\n##  材料\n\n这里只写了最精简的配件,如果需要其他功能请去 [官方文档](https://awtrixdocs.blueforcer.de/#/)\n\n| No   | Name                                     |\n| ---- | ---------------------------------------- |\n| 1    | 32*8 的矩阵屏幕                          |\n| 2    | Wemos  D1mini                            |\n| 3    | 电源用usb 线代替(后面会说明)             |\n| 4    | 导线                                     |\n| 5    | 焊锡 ( 你有面包板也行)                   |\n| 6    | 白纸一张                                 |\n| 7    | 半透明 黑色 亚克力板 (淘宝10元包邮 定制) |\n| 8    | 不透光 光栅 (咸鱼 20元收)                |\n\n  \n\n\n\n## 改造\n\n当时`1.0版本` 使用了什么板子 我给忘了反正是没有办法直接供电 \n\n现在这个板 `d1 mini` 可以用usb 直接供电 (5v 1A)  虽然达不到额定功率(亮度高的时候 矩阵屏幕会不稳定),但是亮度调低点就好了\n\n![image-20200929003524665](https://picgo.genji.xyz/blog/posts/image-20200929003524665.png)   \n\n \n\n##  祖传的焊接手艺\n\n![WeChata7c1ef3090104df97ddc594c9beaa126](https://picgo.genji.xyz/blog/posts/WeChata7c1ef3090104df97ddc594c9beaa126.png)\n\n看图连线时间.\n\n好像有焊接好板 能直接插 贵一点.  \n\n\n\n##  客户端 Flash  / Wifi\n\n{% note default %}\n\n之前是用 vscode `platformIO` 这个插件写入 ,而且需要自己修改配置文件,修改wifi什么的.\n\n现在有 打包好的 flash 包, wifi 连接也更方便了,\n\n[新版用了这个开源的包 esp8266 wifi Manager](https://github.com/tzapu/WiFiManager)\n\n{% endnote %} \n\n\n\n[写入/wifi 步骤点此链接](https://awtrixdocs.blueforcer.de/#/en-en/controller)\n\n 我用的macOS,window更方便 注意下 com 端口 即可\n\n\n\n  \n\n\n\n## 服务端\n\n想用把服务端 放在 软路由的`docker`里 奈何 N1是 armv8架构 \n\n现有的docker镜像 只支持 arm,arm64\n\n所以放到了 `阿里云`\n\n\n\n```bash\ndocker run --name AwTriX2 -p 7000:7000 -p 7001:7001 -p 5568:5568/udp --restart always -e TZ=Asia/Shanghai whyet/awtrix2:latest\n\n\n\n## TZ time zone 时区 \nAsia/Shanghai\n\n7000 端口是 服务端面板\n7001 才是你连wifi 时需要设置的端口\n\n```\n\n  \n\n\n\n## 成品\n\n咸鱼买了个 `半透明茶色 亚克力板 ` 瞬间变得 ,清晰, 有质感.\n\n![image-20200930135226606](https://picgo.genji.xyz/blog/posts/image-20200930135226606.png)\n\n  \n\n\n\n##  显示内容\n\n服务端 里面有个 `App Store`\n\n提供了很多功能: `天气` ,`温度`,`bilibili/youtube粉丝数`,`日出日落`等等.......\n\n![image-20200930140137536](https://picgo.genji.xyz/blog/posts/image-20200930140137536.png)\n\n  \n\n\n\n## API\n\n[https://awtrixdocs.blueforcer.de/#/en-en/api](https://awtrixdocs.blueforcer.de/#/en-en/api)\n\n作者提供了很多API ,\n\n之前用vue 写过一个类似遥控器的单屏网页 , 现在好像弄丢了....\n\n\n\n比如你可以这样,显示一些文字 \n\n\n\n{% note  flat %}\n\n当某个客人要来你家时候,你用手机提前设置好,也挺好玩的\n\nHello  XXX !\n\n{% endnote  %}\n\n![image-20200930140531153](https://picgo.genji.xyz/blog/posts/image-20200930140531153.png)\n\n## 最后 这玩意多数时间还是当个 `表` 和 `日历` 来用 ...  过年了 开一开 平时吃灰","source":"_posts/Diy/awtrix.md","raw":"---\ntitle: awtrix\ndate: 2020-09-02 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/image-20200930140531153.png\ndescription: 像素电子时钟 制作\n\n\ntags:  \t[awtrix]\ncategories: diy\nkeywords: \"awtrix,像素电子时钟\"\n---\n\n\n\n\n\n\n\n\n\n#  <i class=\"fas fa-dog\"></i> awtrix\n\n{% note success no-icon %}\n最开始是在YouTube看到的这个项目,当时这个项目还是 version 1.0  \n现在都有`pro`了!  闲着没事更新一下\n{% endnote %}\n\n\n\n\n\n## 硬件功能删减\n\n我决定只保留基本的功能,\n\n因为其他的功能都不太好用(不是云玩家,当时测试了一个月)  \n\n\n\n- 自动调节亮度(添加光敏电阻)   不稳定\n\n- 播放器功能 (DFplayer)  鸡肋\n\n- 手势功能  用不上几次\n\n- 温度   用小米挺香  \n\n    \n\n  \n\n##  材料\n\n这里只写了最精简的配件,如果需要其他功能请去 [官方文档](https://awtrixdocs.blueforcer.de/#/)\n\n| No   | Name                                     |\n| ---- | ---------------------------------------- |\n| 1    | 32*8 的矩阵屏幕                          |\n| 2    | Wemos  D1mini                            |\n| 3    | 电源用usb 线代替(后面会说明)             |\n| 4    | 导线                                     |\n| 5    | 焊锡 ( 你有面包板也行)                   |\n| 6    | 白纸一张                                 |\n| 7    | 半透明 黑色 亚克力板 (淘宝10元包邮 定制) |\n| 8    | 不透光 光栅 (咸鱼 20元收)                |\n\n  \n\n\n\n## 改造\n\n当时`1.0版本` 使用了什么板子 我给忘了反正是没有办法直接供电 \n\n现在这个板 `d1 mini` 可以用usb 直接供电 (5v 1A)  虽然达不到额定功率(亮度高的时候 矩阵屏幕会不稳定),但是亮度调低点就好了\n\n![image-20200929003524665](https://picgo.genji.xyz/blog/posts/image-20200929003524665.png)   \n\n \n\n##  祖传的焊接手艺\n\n![WeChata7c1ef3090104df97ddc594c9beaa126](https://picgo.genji.xyz/blog/posts/WeChata7c1ef3090104df97ddc594c9beaa126.png)\n\n看图连线时间.\n\n好像有焊接好板 能直接插 贵一点.  \n\n\n\n##  客户端 Flash  / Wifi\n\n{% note default %}\n\n之前是用 vscode `platformIO` 这个插件写入 ,而且需要自己修改配置文件,修改wifi什么的.\n\n现在有 打包好的 flash 包, wifi 连接也更方便了,\n\n[新版用了这个开源的包 esp8266 wifi Manager](https://github.com/tzapu/WiFiManager)\n\n{% endnote %} \n\n\n\n[写入/wifi 步骤点此链接](https://awtrixdocs.blueforcer.de/#/en-en/controller)\n\n 我用的macOS,window更方便 注意下 com 端口 即可\n\n\n\n  \n\n\n\n## 服务端\n\n想用把服务端 放在 软路由的`docker`里 奈何 N1是 armv8架构 \n\n现有的docker镜像 只支持 arm,arm64\n\n所以放到了 `阿里云`\n\n\n\n```bash\ndocker run --name AwTriX2 -p 7000:7000 -p 7001:7001 -p 5568:5568/udp --restart always -e TZ=Asia/Shanghai whyet/awtrix2:latest\n\n\n\n## TZ time zone 时区 \nAsia/Shanghai\n\n7000 端口是 服务端面板\n7001 才是你连wifi 时需要设置的端口\n\n```\n\n  \n\n\n\n## 成品\n\n咸鱼买了个 `半透明茶色 亚克力板 ` 瞬间变得 ,清晰, 有质感.\n\n![image-20200930135226606](https://picgo.genji.xyz/blog/posts/image-20200930135226606.png)\n\n  \n\n\n\n##  显示内容\n\n服务端 里面有个 `App Store`\n\n提供了很多功能: `天气` ,`温度`,`bilibili/youtube粉丝数`,`日出日落`等等.......\n\n![image-20200930140137536](https://picgo.genji.xyz/blog/posts/image-20200930140137536.png)\n\n  \n\n\n\n## API\n\n[https://awtrixdocs.blueforcer.de/#/en-en/api](https://awtrixdocs.blueforcer.de/#/en-en/api)\n\n作者提供了很多API ,\n\n之前用vue 写过一个类似遥控器的单屏网页 , 现在好像弄丢了....\n\n\n\n比如你可以这样,显示一些文字 \n\n\n\n{% note  flat %}\n\n当某个客人要来你家时候,你用手机提前设置好,也挺好玩的\n\nHello  XXX !\n\n{% endnote  %}\n\n![image-20200930140531153](https://picgo.genji.xyz/blog/posts/image-20200930140531153.png)\n\n## 最后 这玩意多数时间还是当个 `表` 和 `日历` 来用 ...  过年了 开一开 平时吃灰","slug":"Diy/awtrix","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tvy0001dmle6r0xa0l1","content":"<h1 id=\"awtrix\"><a href=\"#awtrix\" class=\"headerlink\" title=\" awtrix\"></a><i class=\"fas fa-dog\"></i> awtrix</h1><div class=\"note success no-icon flat\"><p>最开始是在YouTube看到的这个项目,当时这个项目还是 version 1.0<br>现在都有<code>pro</code>了!  闲着没事更新一下</p>\n</div>\n\n\n\n\n\n<h2 id=\"硬件功能删减\"><a href=\"#硬件功能删减\" class=\"headerlink\" title=\"硬件功能删减\"></a>硬件功能删减</h2><p>我决定只保留基本的功能,</p>\n<p>因为其他的功能都不太好用(不是云玩家,当时测试了一个月)  </p>\n<ul>\n<li><p>自动调节亮度(添加光敏电阻)   不稳定</p>\n</li>\n<li><p>播放器功能 (DFplayer)  鸡肋</p>\n</li>\n<li><p>手势功能  用不上几次</p>\n</li>\n<li><p>温度   用小米挺香  </p>\n</li>\n</ul>\n<h2 id=\"材料\"><a href=\"#材料\" class=\"headerlink\" title=\"材料\"></a>材料</h2><p>这里只写了最精简的配件,如果需要其他功能请去 <a href=\"https://awtrixdocs.blueforcer.de/#/\">官方文档</a></p>\n<table>\n<thead>\n<tr>\n<th>No</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>32*8 的矩阵屏幕</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Wemos  D1mini</td>\n</tr>\n<tr>\n<td>3</td>\n<td>电源用usb 线代替(后面会说明)</td>\n</tr>\n<tr>\n<td>4</td>\n<td>导线</td>\n</tr>\n<tr>\n<td>5</td>\n<td>焊锡 ( 你有面包板也行)</td>\n</tr>\n<tr>\n<td>6</td>\n<td>白纸一张</td>\n</tr>\n<tr>\n<td>7</td>\n<td>半透明 黑色 亚克力板 (淘宝10元包邮 定制)</td>\n</tr>\n<tr>\n<td>8</td>\n<td>不透光 光栅 (咸鱼 20元收)</td>\n</tr>\n</tbody></table>\n<h2 id=\"改造\"><a href=\"#改造\" class=\"headerlink\" title=\"改造\"></a>改造</h2><p>当时<code>1.0版本</code> 使用了什么板子 我给忘了反正是没有办法直接供电 </p>\n<p>现在这个板 <code>d1 mini</code> 可以用usb 直接供电 (5v 1A)  虽然达不到额定功率(亮度高的时候 矩阵屏幕会不稳定),但是亮度调低点就好了</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200929003524665.png\" alt=\"image-20200929003524665\">   </p>\n<h2 id=\"祖传的焊接手艺\"><a href=\"#祖传的焊接手艺\" class=\"headerlink\" title=\"祖传的焊接手艺\"></a>祖传的焊接手艺</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/WeChata7c1ef3090104df97ddc594c9beaa126.png\" alt=\"WeChata7c1ef3090104df97ddc594c9beaa126\"></p>\n<p>看图连线时间.</p>\n<p>好像有焊接好板 能直接插 贵一点.  </p>\n<h2 id=\"客户端-Flash-Wifi\"><a href=\"#客户端-Flash-Wifi\" class=\"headerlink\" title=\"客户端 Flash  / Wifi\"></a>客户端 Flash  / Wifi</h2><div class=\"note default flat\"><p>之前是用 vscode <code>platformIO</code> 这个插件写入 ,而且需要自己修改配置文件,修改wifi什么的.</p>\n<p>现在有 打包好的 flash 包, wifi 连接也更方便了,</p>\n<p><a href=\"https://github.com/tzapu/WiFiManager\">新版用了这个开源的包 esp8266 wifi Manager</a></p>\n</div> \n\n\n\n<p><a href=\"https://awtrixdocs.blueforcer.de/#/en-en/controller\">写入/wifi 步骤点此链接</a></p>\n<p> 我用的macOS,window更方便 注意下 com 端口 即可</p>\n<h2 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h2><p>想用把服务端 放在 软路由的<code>docker</code>里 奈何 N1是 armv8架构 </p>\n<p>现有的docker镜像 只支持 arm,arm64</p>\n<p>所以放到了 <code>阿里云</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name AwTriX2 -p 7000:7000 -p 7001:7001 -p 5568:5568/udp --restart always -e TZ=Asia/Shanghai whyet/awtrix2:latest</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## TZ time zone 时区 </span></span><br><span class=\"line\">Asia/Shanghai</span><br><span class=\"line\"></span><br><span class=\"line\">7000 端口是 服务端面板</span><br><span class=\"line\">7001 才是你连wifi 时需要设置的端口</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"成品\"><a href=\"#成品\" class=\"headerlink\" title=\"成品\"></a>成品</h2><p>咸鱼买了个 <code>半透明茶色 亚克力板 </code> 瞬间变得 ,清晰, 有质感.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930135226606.png\" alt=\"image-20200930135226606\"></p>\n<h2 id=\"显示内容\"><a href=\"#显示内容\" class=\"headerlink\" title=\"显示内容\"></a>显示内容</h2><p>服务端 里面有个 <code>App Store</code></p>\n<p>提供了很多功能: <code>天气</code> ,<code>温度</code>,<code>bilibili/youtube粉丝数</code>,<code>日出日落</code>等等…….</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930140137536.png\" alt=\"image-20200930140137536\"></p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p><a href=\"https://awtrixdocs.blueforcer.de/#/en-en/api\">https://awtrixdocs.blueforcer.de/#/en-en/api</a></p>\n<p>作者提供了很多API ,</p>\n<p>之前用vue 写过一个类似遥控器的单屏网页 , 现在好像弄丢了….</p>\n<p>比如你可以这样,显示一些文字 </p>\n<div class=\"note flat\"><p>当某个客人要来你家时候,你用手机提前设置好,也挺好玩的</p>\n<p>Hello  XXX !</p>\n</div>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930140531153.png\" alt=\"image-20200930140531153\"></p>\n<h2 id=\"最后-这玩意多数时间还是当个-表-和-日历-来用-…-过年了-开一开-平时吃灰\"><a href=\"#最后-这玩意多数时间还是当个-表-和-日历-来用-…-过年了-开一开-平时吃灰\" class=\"headerlink\" title=\"最后 这玩意多数时间还是当个 表 和 日历 来用 …  过年了 开一开 平时吃灰\"></a>最后 这玩意多数时间还是当个 <code>表</code> 和 <code>日历</code> 来用 …  过年了 开一开 平时吃灰</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"awtrix\"><a href=\"#awtrix\" class=\"headerlink\" title=\" awtrix\"></a><i class=\"fas fa-dog\"></i> awtrix</h1><div class=\"note success no-icon flat\"><p>最开始是在YouTube看到的这个项目,当时这个项目还是 version 1.0<br>现在都有<code>pro</code>了!  闲着没事更新一下</p>\n</div>\n\n\n\n\n\n<h2 id=\"硬件功能删减\"><a href=\"#硬件功能删减\" class=\"headerlink\" title=\"硬件功能删减\"></a>硬件功能删减</h2><p>我决定只保留基本的功能,</p>\n<p>因为其他的功能都不太好用(不是云玩家,当时测试了一个月)  </p>\n<ul>\n<li><p>自动调节亮度(添加光敏电阻)   不稳定</p>\n</li>\n<li><p>播放器功能 (DFplayer)  鸡肋</p>\n</li>\n<li><p>手势功能  用不上几次</p>\n</li>\n<li><p>温度   用小米挺香  </p>\n</li>\n</ul>\n<h2 id=\"材料\"><a href=\"#材料\" class=\"headerlink\" title=\"材料\"></a>材料</h2><p>这里只写了最精简的配件,如果需要其他功能请去 <a href=\"https://awtrixdocs.blueforcer.de/#/\">官方文档</a></p>\n<table>\n<thead>\n<tr>\n<th>No</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>32*8 的矩阵屏幕</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Wemos  D1mini</td>\n</tr>\n<tr>\n<td>3</td>\n<td>电源用usb 线代替(后面会说明)</td>\n</tr>\n<tr>\n<td>4</td>\n<td>导线</td>\n</tr>\n<tr>\n<td>5</td>\n<td>焊锡 ( 你有面包板也行)</td>\n</tr>\n<tr>\n<td>6</td>\n<td>白纸一张</td>\n</tr>\n<tr>\n<td>7</td>\n<td>半透明 黑色 亚克力板 (淘宝10元包邮 定制)</td>\n</tr>\n<tr>\n<td>8</td>\n<td>不透光 光栅 (咸鱼 20元收)</td>\n</tr>\n</tbody></table>\n<h2 id=\"改造\"><a href=\"#改造\" class=\"headerlink\" title=\"改造\"></a>改造</h2><p>当时<code>1.0版本</code> 使用了什么板子 我给忘了反正是没有办法直接供电 </p>\n<p>现在这个板 <code>d1 mini</code> 可以用usb 直接供电 (5v 1A)  虽然达不到额定功率(亮度高的时候 矩阵屏幕会不稳定),但是亮度调低点就好了</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200929003524665.png\" alt=\"image-20200929003524665\">   </p>\n<h2 id=\"祖传的焊接手艺\"><a href=\"#祖传的焊接手艺\" class=\"headerlink\" title=\"祖传的焊接手艺\"></a>祖传的焊接手艺</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/WeChata7c1ef3090104df97ddc594c9beaa126.png\" alt=\"WeChata7c1ef3090104df97ddc594c9beaa126\"></p>\n<p>看图连线时间.</p>\n<p>好像有焊接好板 能直接插 贵一点.  </p>\n<h2 id=\"客户端-Flash-Wifi\"><a href=\"#客户端-Flash-Wifi\" class=\"headerlink\" title=\"客户端 Flash  / Wifi\"></a>客户端 Flash  / Wifi</h2><div class=\"note default flat\"><p>之前是用 vscode <code>platformIO</code> 这个插件写入 ,而且需要自己修改配置文件,修改wifi什么的.</p>\n<p>现在有 打包好的 flash 包, wifi 连接也更方便了,</p>\n<p><a href=\"https://github.com/tzapu/WiFiManager\">新版用了这个开源的包 esp8266 wifi Manager</a></p>\n</div> \n\n\n\n<p><a href=\"https://awtrixdocs.blueforcer.de/#/en-en/controller\">写入/wifi 步骤点此链接</a></p>\n<p> 我用的macOS,window更方便 注意下 com 端口 即可</p>\n<h2 id=\"服务端\"><a href=\"#服务端\" class=\"headerlink\" title=\"服务端\"></a>服务端</h2><p>想用把服务端 放在 软路由的<code>docker</code>里 奈何 N1是 armv8架构 </p>\n<p>现有的docker镜像 只支持 arm,arm64</p>\n<p>所以放到了 <code>阿里云</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name AwTriX2 -p 7000:7000 -p 7001:7001 -p 5568:5568/udp --restart always -e TZ=Asia/Shanghai whyet/awtrix2:latest</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## TZ time zone 时区 </span></span><br><span class=\"line\">Asia/Shanghai</span><br><span class=\"line\"></span><br><span class=\"line\">7000 端口是 服务端面板</span><br><span class=\"line\">7001 才是你连wifi 时需要设置的端口</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"成品\"><a href=\"#成品\" class=\"headerlink\" title=\"成品\"></a>成品</h2><p>咸鱼买了个 <code>半透明茶色 亚克力板 </code> 瞬间变得 ,清晰, 有质感.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930135226606.png\" alt=\"image-20200930135226606\"></p>\n<h2 id=\"显示内容\"><a href=\"#显示内容\" class=\"headerlink\" title=\"显示内容\"></a>显示内容</h2><p>服务端 里面有个 <code>App Store</code></p>\n<p>提供了很多功能: <code>天气</code> ,<code>温度</code>,<code>bilibili/youtube粉丝数</code>,<code>日出日落</code>等等…….</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930140137536.png\" alt=\"image-20200930140137536\"></p>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p><a href=\"https://awtrixdocs.blueforcer.de/#/en-en/api\">https://awtrixdocs.blueforcer.de/#/en-en/api</a></p>\n<p>作者提供了很多API ,</p>\n<p>之前用vue 写过一个类似遥控器的单屏网页 , 现在好像弄丢了….</p>\n<p>比如你可以这样,显示一些文字 </p>\n<div class=\"note flat\"><p>当某个客人要来你家时候,你用手机提前设置好,也挺好玩的</p>\n<p>Hello  XXX !</p>\n</div>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930140531153.png\" alt=\"image-20200930140531153\"></p>\n<h2 id=\"最后-这玩意多数时间还是当个-表-和-日历-来用-…-过年了-开一开-平时吃灰\"><a href=\"#最后-这玩意多数时间还是当个-表-和-日历-来用-…-过年了-开一开-平时吃灰\" class=\"headerlink\" title=\"最后 这玩意多数时间还是当个 表 和 日历 来用 …  过年了 开一开 平时吃灰\"></a>最后 这玩意多数时间还是当个 <code>表</code> 和 <code>日历</code> 来用 …  过年了 开一开 平时吃灰</h2>"},{"title":"ddns","date":"2020-01-05T16:00:00.000Z","top_img":"https://picgo.genji.xyz/blog/posts/images.jpeg","description":"有了公网ip,试试ddns,不用内网穿透了就","keywords":"ddns","cover":"https://picgo.genji.xyz/blog/posts/images.jpeg","_content":"\n\n\n\n\n#  <i class=\"fas fa-dog\"></i>  ddns\n\n\n\nDns ( domain name server )  \n\nddns  ( Dynamic domain name server )   就是前面加个  Dynamic  动态的 .\n\n为什么要用ddns ? 而不是直接在 服务商dns解析  添加个a 记录 指向 你的ip 呢  ?\n\n因为 你向电信爸爸申请的公网ip 是每天都变化的,甚至重启光猫有时候也会变.(没有公网ip的可以用内网穿透,这里不说了)\n\n比如可以用下面 两个 ,等等.\n\n\n\n{% btn 'https://blog.genji.xyz/2020/01/05/frp/', Frp,fas fa-dog,block blue larger %}\n\n{% btn 'https://hsk.oray.com/', 花生壳,fas fa-paw,block green larger %}\n\n-----\n\n\n\n\n\n\n\n## 方案一\n\n### 利用路由器自带的ddns\n\n#### 优点:不折腾  缺点:服务商少  有的路由器不支持多个域名\n\n以我家的 `小米ax3600`为例,自带的ddns服务商就那么几个:\n\n![image-20200917014105405](https://picgo.genji.xyz/blog/posts/image-20200917014105405.png)\n\n这里注意下 图片里的 `账号密码` 就是你在服务商注册的账号和密码\n\n![image-20200917014310786](https://picgo.genji.xyz/blog/posts/image-20200917014310786.png)\n\n{% blockquote %}\n\n主机名称  就是你在服务商(这里是花生壳)注册的域名.\n\n一开始没懂什么是`主机名称`  哈哈 域名你就说域名呗..\n\n{% endblockquote %}\n\n\n\n有的服务商第一次使用的话,可能需要你填写当前的公网ip.都没问题的话会显示:\n\n![image-20200917015141777](https://picgo.genji.xyz/blog/posts/image-20200917015141777.png)\n\n\n\n{% blockquote %}\n\n这里注意下 小米路由器好像只能启用 一个,不能多个同时启用.\n\n{% endblockquote %}\n\n这时候就可以用域名访问你的ip . ip变化的话,域名解析 自动改成你现在ip . \n\n当然会有一定延迟,毕竟有个检查的时间.\n\n如果你有二级域名也想解析到你的动态公网ip  ,就可以设置cname了\n\n比如你的公网ip  是 8.8.8.8  ,然后通过ddns 记录到了  baidu.com 了,\n\n这时候你把 nihao.baidu.com 通过cname 指向 baidu.com \n\n访问 baidu.com nihao.baidu.com都会解析到你的公网ip\n\n然后电信爸爸给你改成 8.8.8.9了  ,这时候路由器检查到了,然后就会向服务商请求,把ip改成了8.8.8.9\n\n这里面有一个  检查间隔的时间 和服务商 ttl 的时间 .\n\n同理 nihao.baidu.com 的服务商也有个ttl时间 \n\n![image-20200917025246755](https://picgo.genji.xyz/blog/posts/image-20200917025246755.png)\n\n反正就是套娃 很慢.\n\n所以就有了方案二\n\n-----\n\n\n\n## 方案二\n\n通过旁路由的ddns直接解析到你域名的服务商\n\n因为小米路由器的服务商有限 没有腾讯云 或者阿里 \n\n所以要用下旁路由的 ddns ,一般来说旁路有支持的服务商很多的:\n\n<img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021109249.png\" alt=\"image-20200917021109249\" style=\"zoom: 50%;\" />\n\n\n\n\n\n这样就少了个中间商 赚差价\n\n但是问题来了![image-20200917021236263](https://picgo.genji.xyz/blog/posts/image-20200917021236263.png)\n\n\n\n这里还是用 用户名 和 密码 的方式,但是服务商都要用 token 秘钥啥的了\n\n如果 你的服务商 支持 用户名 和 密码 的方式.就可以直接用了.\n\n\n\n![image-20200917021829641](https://picgo.genji.xyz/blog/posts/image-20200917021829641.png)\n\n{% blockquote %}\n\n注意如果你是旁路由这里就不能是默认的`网络`了,因为这里ip是你主路由dhcp给旁路由的ip 比如:192.168.3.200,不是真正公网ip,要改成url的方式.\n\n{% endblockquote %}\n\n![image-20200917022152035](https://picgo.genji.xyz/blog/posts/image-20200917022152035.png)\n\n可以用自带的,也可用 [http://ip.3322.net/](http://ip.3322.net/) ,访问这个链接可以返回你的公网ip\n\n\n\n我是腾讯的dnspod,不支持账号和密码了,所以要换个新的ddns  ipk\n\n\n\n\n\n## 方案三\n\n在github 没找到旁路由好用的ddns ipk  ,找到了个py脚本.\n\n而且是最近更新的 ,也支持腾讯的dnspod.\n\n[https://github.com/NewFuture/DDNS](https://github.com/NewFuture/DDNS)\n\n![image-20200917022425545](https://picgo.genji.xyz/blog/posts/image-20200917022425545.png)\n\n\n\n说明很详细.不多赘述\n\n申请个 秘钥 记住id  和token,吧文件传到 软路由 重启不会重置的文件夹里 我这里传到了/mnt/..........\n\n配置下`config.json`\n\n```json\n{\n  \"$schema\": \"https://ddns.newfuture.cc/schema/v2.8.json\", \n  \"debug\": false, \n  \"dns\": \"dnspod\", \n  \"id\": \"你的秘钥id\", \n  \"index4\": \"default\",///获取ipv4方式 \n  \"index6\": \"default\", //获取ipv6方式 \n  \"ipv4\": [\n    \"baidu.com\", \n    \"nihao.baidu.com\"\n  ], \n  \"ipv6\": [\n    \"newfuture.cc\", \n    \"ipv6.ddns.newfuture.cc\"\n  ], \n  \"proxy\": null, \n  \"token\": \"YOUR TOKEN or KEY for DNS Provider\", \n  \"ttl\": null,\n  \"cache\":true\n}\n```\n\n填好了就设置个计划任务 让他每5分钟 执行一次 ,因为  我设置了 `\"cache\":true` 所以没有变就不提交,改变了再提交.\n\n![image-20200917022541974](https://picgo.genji.xyz/blog/posts/image-20200917022541974.png)\n\n\n\n###  如何设置计划任务\n\n好多* 好乱\n\n这里引用下这篇文章 [https://www.mivm.cn/openwrt-crontab/](https://www.mivm.cn/openwrt-crontab/)\n\n例子：`0 6 * * * reboot`\n\n每天6点0分执行`reboot`命令。因为只设置了“分”和“时”，“日月周”都是通配符，所以只要当前时间是 6点0分，不管当前是几月几日周几都会被执行。\n\n还是例子：`0 6 * * 1,3 reboot`\n\n每周一和周三的6点0分执行`reboot`命令。因为“周”被设置为了`1,3`，逗号是将多个值分开，当条件达到其中一个值时便会执行。所以只有在周一或者是周三的6点0分才会被执行，当然，也不管当前是几月几日。\n\n再来个例子：`0 6 * 3-6 1,3 reboot`\n\n这个例子的月改为了`3-6`，连字符的作用是指定范围，它就是在三月至六月的每周一和每周三的6点0分执行`reboot`命令。其实也可以这样写`0 6 * 3,4,5,6 1,3 reboot`，不过这样不够简洁，推荐还是使用连字符。\n\n斜杠例子：`0 */3 * * * reboot`\n\n斜杠的作用是跳过某些特定值。你可以把它看作一个除法，当结果等于整数时才会执行。上面个例子，把时写成了`*/3`，星号表示任何值、/表示除法、3表示除数。那么，如果现在是1点，1/3 不是整数，就不会被执行，如果是9点，9/3 是整数，它就可以被执行。不知道我这样说大家有没有理解。（[小山](https://github.com/Hill-98)数学是体育老师教的）\n\n最后一个例子：`*/10 */3 * * * reboot`\n\n这个例子有两个斜杠，分别是分和时，那么不但要满足当前“分”除于10是整数，还需要满足“时”除于3是整数，比如1点10分，虽然“分”满足了条件，不过“时”并没有，只有当前时间为3点40分，这样的情况下，才会触发执行。\n\n\n\n### 计划任务注意事项\n\n我们先来说一下上面那个重启设备，那种写法其实是错误的，正确的写法应该是：`0 6 * * * sleep 60 && reboot`。\n\n为什么呢？因为当设备重启后，计划任务的守护进程被启动，便会立即检查一遍是否有任务需要被执行，设备重启时间一般是小于1分钟的，所以当设备重启后，就又会触发这个重启任务，直到时间不匹配为止，而延迟60秒再重启设备可以避免这种错误。\n\n当日或周同时被设定为固定值时，那么其中的一个条件被满足时，任务就会被执行，不会等到两个条件均满足。（这么苛刻的条件，能满足的估计不多。）\n\n命令中双引号使用 % 时，需要加反斜杠转义，错误的例子：`0 6 * * * touch /tmp/$(date \"%Y\")`，正确的例子：`0 6 * * * touch /tmp/$(date \"\\%Y\")`。\n\n\n\n\n\n## 完结撒花","source":"_posts/Diy/ddns.md","raw":"---\ntitle: ddns\ndate: 2020-01-06 00:00:00\ntop_img: https://picgo.genji.xyz/blog/posts/images.jpeg\ndescription: \"有了公网ip,试试ddns,不用内网穿透了就\"\nkeywords: \"ddns\"\ncover: https://picgo.genji.xyz/blog/posts/images.jpeg\ntags: [ddns, 旁路由]\ncategories: diy\n---\n\n\n\n\n\n#  <i class=\"fas fa-dog\"></i>  ddns\n\n\n\nDns ( domain name server )  \n\nddns  ( Dynamic domain name server )   就是前面加个  Dynamic  动态的 .\n\n为什么要用ddns ? 而不是直接在 服务商dns解析  添加个a 记录 指向 你的ip 呢  ?\n\n因为 你向电信爸爸申请的公网ip 是每天都变化的,甚至重启光猫有时候也会变.(没有公网ip的可以用内网穿透,这里不说了)\n\n比如可以用下面 两个 ,等等.\n\n\n\n{% btn 'https://blog.genji.xyz/2020/01/05/frp/', Frp,fas fa-dog,block blue larger %}\n\n{% btn 'https://hsk.oray.com/', 花生壳,fas fa-paw,block green larger %}\n\n-----\n\n\n\n\n\n\n\n## 方案一\n\n### 利用路由器自带的ddns\n\n#### 优点:不折腾  缺点:服务商少  有的路由器不支持多个域名\n\n以我家的 `小米ax3600`为例,自带的ddns服务商就那么几个:\n\n![image-20200917014105405](https://picgo.genji.xyz/blog/posts/image-20200917014105405.png)\n\n这里注意下 图片里的 `账号密码` 就是你在服务商注册的账号和密码\n\n![image-20200917014310786](https://picgo.genji.xyz/blog/posts/image-20200917014310786.png)\n\n{% blockquote %}\n\n主机名称  就是你在服务商(这里是花生壳)注册的域名.\n\n一开始没懂什么是`主机名称`  哈哈 域名你就说域名呗..\n\n{% endblockquote %}\n\n\n\n有的服务商第一次使用的话,可能需要你填写当前的公网ip.都没问题的话会显示:\n\n![image-20200917015141777](https://picgo.genji.xyz/blog/posts/image-20200917015141777.png)\n\n\n\n{% blockquote %}\n\n这里注意下 小米路由器好像只能启用 一个,不能多个同时启用.\n\n{% endblockquote %}\n\n这时候就可以用域名访问你的ip . ip变化的话,域名解析 自动改成你现在ip . \n\n当然会有一定延迟,毕竟有个检查的时间.\n\n如果你有二级域名也想解析到你的动态公网ip  ,就可以设置cname了\n\n比如你的公网ip  是 8.8.8.8  ,然后通过ddns 记录到了  baidu.com 了,\n\n这时候你把 nihao.baidu.com 通过cname 指向 baidu.com \n\n访问 baidu.com nihao.baidu.com都会解析到你的公网ip\n\n然后电信爸爸给你改成 8.8.8.9了  ,这时候路由器检查到了,然后就会向服务商请求,把ip改成了8.8.8.9\n\n这里面有一个  检查间隔的时间 和服务商 ttl 的时间 .\n\n同理 nihao.baidu.com 的服务商也有个ttl时间 \n\n![image-20200917025246755](https://picgo.genji.xyz/blog/posts/image-20200917025246755.png)\n\n反正就是套娃 很慢.\n\n所以就有了方案二\n\n-----\n\n\n\n## 方案二\n\n通过旁路由的ddns直接解析到你域名的服务商\n\n因为小米路由器的服务商有限 没有腾讯云 或者阿里 \n\n所以要用下旁路由的 ddns ,一般来说旁路有支持的服务商很多的:\n\n<img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021109249.png\" alt=\"image-20200917021109249\" style=\"zoom: 50%;\" />\n\n\n\n\n\n这样就少了个中间商 赚差价\n\n但是问题来了![image-20200917021236263](https://picgo.genji.xyz/blog/posts/image-20200917021236263.png)\n\n\n\n这里还是用 用户名 和 密码 的方式,但是服务商都要用 token 秘钥啥的了\n\n如果 你的服务商 支持 用户名 和 密码 的方式.就可以直接用了.\n\n\n\n![image-20200917021829641](https://picgo.genji.xyz/blog/posts/image-20200917021829641.png)\n\n{% blockquote %}\n\n注意如果你是旁路由这里就不能是默认的`网络`了,因为这里ip是你主路由dhcp给旁路由的ip 比如:192.168.3.200,不是真正公网ip,要改成url的方式.\n\n{% endblockquote %}\n\n![image-20200917022152035](https://picgo.genji.xyz/blog/posts/image-20200917022152035.png)\n\n可以用自带的,也可用 [http://ip.3322.net/](http://ip.3322.net/) ,访问这个链接可以返回你的公网ip\n\n\n\n我是腾讯的dnspod,不支持账号和密码了,所以要换个新的ddns  ipk\n\n\n\n\n\n## 方案三\n\n在github 没找到旁路由好用的ddns ipk  ,找到了个py脚本.\n\n而且是最近更新的 ,也支持腾讯的dnspod.\n\n[https://github.com/NewFuture/DDNS](https://github.com/NewFuture/DDNS)\n\n![image-20200917022425545](https://picgo.genji.xyz/blog/posts/image-20200917022425545.png)\n\n\n\n说明很详细.不多赘述\n\n申请个 秘钥 记住id  和token,吧文件传到 软路由 重启不会重置的文件夹里 我这里传到了/mnt/..........\n\n配置下`config.json`\n\n```json\n{\n  \"$schema\": \"https://ddns.newfuture.cc/schema/v2.8.json\", \n  \"debug\": false, \n  \"dns\": \"dnspod\", \n  \"id\": \"你的秘钥id\", \n  \"index4\": \"default\",///获取ipv4方式 \n  \"index6\": \"default\", //获取ipv6方式 \n  \"ipv4\": [\n    \"baidu.com\", \n    \"nihao.baidu.com\"\n  ], \n  \"ipv6\": [\n    \"newfuture.cc\", \n    \"ipv6.ddns.newfuture.cc\"\n  ], \n  \"proxy\": null, \n  \"token\": \"YOUR TOKEN or KEY for DNS Provider\", \n  \"ttl\": null,\n  \"cache\":true\n}\n```\n\n填好了就设置个计划任务 让他每5分钟 执行一次 ,因为  我设置了 `\"cache\":true` 所以没有变就不提交,改变了再提交.\n\n![image-20200917022541974](https://picgo.genji.xyz/blog/posts/image-20200917022541974.png)\n\n\n\n###  如何设置计划任务\n\n好多* 好乱\n\n这里引用下这篇文章 [https://www.mivm.cn/openwrt-crontab/](https://www.mivm.cn/openwrt-crontab/)\n\n例子：`0 6 * * * reboot`\n\n每天6点0分执行`reboot`命令。因为只设置了“分”和“时”，“日月周”都是通配符，所以只要当前时间是 6点0分，不管当前是几月几日周几都会被执行。\n\n还是例子：`0 6 * * 1,3 reboot`\n\n每周一和周三的6点0分执行`reboot`命令。因为“周”被设置为了`1,3`，逗号是将多个值分开，当条件达到其中一个值时便会执行。所以只有在周一或者是周三的6点0分才会被执行，当然，也不管当前是几月几日。\n\n再来个例子：`0 6 * 3-6 1,3 reboot`\n\n这个例子的月改为了`3-6`，连字符的作用是指定范围，它就是在三月至六月的每周一和每周三的6点0分执行`reboot`命令。其实也可以这样写`0 6 * 3,4,5,6 1,3 reboot`，不过这样不够简洁，推荐还是使用连字符。\n\n斜杠例子：`0 */3 * * * reboot`\n\n斜杠的作用是跳过某些特定值。你可以把它看作一个除法，当结果等于整数时才会执行。上面个例子，把时写成了`*/3`，星号表示任何值、/表示除法、3表示除数。那么，如果现在是1点，1/3 不是整数，就不会被执行，如果是9点，9/3 是整数，它就可以被执行。不知道我这样说大家有没有理解。（[小山](https://github.com/Hill-98)数学是体育老师教的）\n\n最后一个例子：`*/10 */3 * * * reboot`\n\n这个例子有两个斜杠，分别是分和时，那么不但要满足当前“分”除于10是整数，还需要满足“时”除于3是整数，比如1点10分，虽然“分”满足了条件，不过“时”并没有，只有当前时间为3点40分，这样的情况下，才会触发执行。\n\n\n\n### 计划任务注意事项\n\n我们先来说一下上面那个重启设备，那种写法其实是错误的，正确的写法应该是：`0 6 * * * sleep 60 && reboot`。\n\n为什么呢？因为当设备重启后，计划任务的守护进程被启动，便会立即检查一遍是否有任务需要被执行，设备重启时间一般是小于1分钟的，所以当设备重启后，就又会触发这个重启任务，直到时间不匹配为止，而延迟60秒再重启设备可以避免这种错误。\n\n当日或周同时被设定为固定值时，那么其中的一个条件被满足时，任务就会被执行，不会等到两个条件均满足。（这么苛刻的条件，能满足的估计不多。）\n\n命令中双引号使用 % 时，需要加反斜杠转义，错误的例子：`0 6 * * * touch /tmp/$(date \"%Y\")`，正确的例子：`0 6 * * * touch /tmp/$(date \"\\%Y\")`。\n\n\n\n\n\n## 完结撒花","slug":"Diy/ddns","published":1,"updated":"2021-03-11T06:26:20.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tw20002dmle2nzlgjuz","content":"<h1 id=\"ddns\"><a href=\"#ddns\" class=\"headerlink\" title=\"  ddns\"></a><i class=\"fas fa-dog\"></i>  ddns</h1><p>Dns ( domain name server )  </p>\n<p>ddns  ( Dynamic domain name server )   就是前面加个  Dynamic  动态的 .</p>\n<p>为什么要用ddns ? 而不是直接在 服务商dns解析  添加个a 记录 指向 你的ip 呢  ?</p>\n<p>因为 你向电信爸爸申请的公网ip 是每天都变化的,甚至重启光猫有时候也会变.(没有公网ip的可以用内网穿透,这里不说了)</p>\n<p>比如可以用下面 两个 ,等等.</p>\n<a class=\"btn-beautify button--animated block blue larger\" href=\"https://blog.genji.xyz/2020/01/05/frp/\" \n  title=\"Frp\"><i class=\"fas fa-dog fa-fw\"></i><span>Frp</span></a>\n\n<a class=\"btn-beautify button--animated block green larger\" href=\"https://hsk.oray.com/\" \n  title=\"花生壳\"><i class=\"fas fa-paw fa-fw\"></i><span>花生壳</span></a>\n\n<hr>\n<h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><h3 id=\"利用路由器自带的ddns\"><a href=\"#利用路由器自带的ddns\" class=\"headerlink\" title=\"利用路由器自带的ddns\"></a>利用路由器自带的ddns</h3><h4 id=\"优点-不折腾-缺点-服务商少-有的路由器不支持多个域名\"><a href=\"#优点-不折腾-缺点-服务商少-有的路由器不支持多个域名\" class=\"headerlink\" title=\"优点:不折腾  缺点:服务商少  有的路由器不支持多个域名\"></a>优点:不折腾  缺点:服务商少  有的路由器不支持多个域名</h4><p>以我家的 <code>小米ax3600</code>为例,自带的ddns服务商就那么几个:</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917014105405.png\" alt=\"image-20200917014105405\"></p>\n<p>这里注意下 图片里的 <code>账号密码</code> 就是你在服务商注册的账号和密码</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917014310786.png\" alt=\"image-20200917014310786\"></p>\n<blockquote><p>主机名称  就是你在服务商(这里是花生壳)注册的域名.</p>\n<p>一开始没懂什么是<code>主机名称</code>  哈哈 域名你就说域名呗..</p>\n</blockquote>\n\n\n\n<p>有的服务商第一次使用的话,可能需要你填写当前的公网ip.都没问题的话会显示:</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917015141777.png\" alt=\"image-20200917015141777\"></p>\n<blockquote><p>这里注意下 小米路由器好像只能启用 一个,不能多个同时启用.</p>\n</blockquote>\n\n<p>这时候就可以用域名访问你的ip . ip变化的话,域名解析 自动改成你现在ip . </p>\n<p>当然会有一定延迟,毕竟有个检查的时间.</p>\n<p>如果你有二级域名也想解析到你的动态公网ip  ,就可以设置cname了</p>\n<p>比如你的公网ip  是 8.8.8.8  ,然后通过ddns 记录到了  baidu.com 了,</p>\n<p>这时候你把 nihao.baidu.com 通过cname 指向 baidu.com </p>\n<p>访问 baidu.com nihao.baidu.com都会解析到你的公网ip</p>\n<p>然后电信爸爸给你改成 8.8.8.9了  ,这时候路由器检查到了,然后就会向服务商请求,把ip改成了8.8.8.9</p>\n<p>这里面有一个  检查间隔的时间 和服务商 ttl 的时间 .</p>\n<p>同理 nihao.baidu.com 的服务商也有个ttl时间 </p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917025246755.png\" alt=\"image-20200917025246755\"></p>\n<p>反正就是套娃 很慢.</p>\n<p>所以就有了方案二</p>\n<hr>\n<h2 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a>方案二</h2><p>通过旁路由的ddns直接解析到你域名的服务商</p>\n<p>因为小米路由器的服务商有限 没有腾讯云 或者阿里 </p>\n<p>所以要用下旁路由的 ddns ,一般来说旁路有支持的服务商很多的:</p>\n<img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021109249.png\" alt=\"image-20200917021109249\" style=\"zoom: 50%;\" />\n\n\n\n\n\n<p>这样就少了个中间商 赚差价</p>\n<p>但是问题来了<img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021236263.png\" alt=\"image-20200917021236263\"></p>\n<p>这里还是用 用户名 和 密码 的方式,但是服务商都要用 token 秘钥啥的了</p>\n<p>如果 你的服务商 支持 用户名 和 密码 的方式.就可以直接用了.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021829641.png\" alt=\"image-20200917021829641\"></p>\n<blockquote><p>注意如果你是旁路由这里就不能是默认的<code>网络</code>了,因为这里ip是你主路由dhcp给旁路由的ip 比如:192.168.3.200,不是真正公网ip,要改成url的方式.</p>\n</blockquote>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917022152035.png\" alt=\"image-20200917022152035\"></p>\n<p>可以用自带的,也可用 <a href=\"http://ip.3322.net/\">http://ip.3322.net/</a> ,访问这个链接可以返回你的公网ip</p>\n<p>我是腾讯的dnspod,不支持账号和密码了,所以要换个新的ddns  ipk</p>\n<h2 id=\"方案三\"><a href=\"#方案三\" class=\"headerlink\" title=\"方案三\"></a>方案三</h2><p>在github 没找到旁路由好用的ddns ipk  ,找到了个py脚本.</p>\n<p>而且是最近更新的 ,也支持腾讯的dnspod.</p>\n<p><a href=\"https://github.com/NewFuture/DDNS\">https://github.com/NewFuture/DDNS</a></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917022425545.png\" alt=\"image-20200917022425545\"></p>\n<p>说明很详细.不多赘述</p>\n<p>申请个 秘钥 记住id  和token,吧文件传到 软路由 重启不会重置的文件夹里 我这里传到了/mnt/……….</p>\n<p>配置下<code>config.json</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;$schema&quot;</span>: <span class=\"string\">&quot;https://ddns.newfuture.cc/schema/v2.8.json&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;debug&quot;</span>: <span class=\"literal\">false</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;dns&quot;</span>: <span class=\"string\">&quot;dnspod&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;你的秘钥id&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;index4&quot;</span>: <span class=\"string\">&quot;default&quot;</span>,<span class=\"comment\">///获取ipv4方式 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;index6&quot;</span>: <span class=\"string\">&quot;default&quot;</span>, <span class=\"comment\">//获取ipv6方式 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;ipv4&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;baidu.com&quot;</span>, </span><br><span class=\"line\">    <span class=\"string\">&quot;nihao.baidu.com&quot;</span></span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"attr\">&quot;ipv6&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;newfuture.cc&quot;</span>, </span><br><span class=\"line\">    <span class=\"string\">&quot;ipv6.ddns.newfuture.cc&quot;</span></span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"attr\">&quot;proxy&quot;</span>: <span class=\"literal\">null</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;token&quot;</span>: <span class=\"string\">&quot;YOUR TOKEN or KEY for DNS Provider&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;ttl&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;cache&quot;</span>:<span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>填好了就设置个计划任务 让他每5分钟 执行一次 ,因为  我设置了 <code>&quot;cache&quot;:true</code> 所以没有变就不提交,改变了再提交.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917022541974.png\" alt=\"image-20200917022541974\"></p>\n<h3 id=\"如何设置计划任务\"><a href=\"#如何设置计划任务\" class=\"headerlink\" title=\"如何设置计划任务\"></a>如何设置计划任务</h3><p>好多* 好乱</p>\n<p>这里引用下这篇文章 <a href=\"https://www.mivm.cn/openwrt-crontab/\">https://www.mivm.cn/openwrt-crontab/</a></p>\n<p>例子：<code>0 6 * * * reboot</code></p>\n<p>每天6点0分执行<code>reboot</code>命令。因为只设置了“分”和“时”，“日月周”都是通配符，所以只要当前时间是 6点0分，不管当前是几月几日周几都会被执行。</p>\n<p>还是例子：<code>0 6 * * 1,3 reboot</code></p>\n<p>每周一和周三的6点0分执行<code>reboot</code>命令。因为“周”被设置为了<code>1,3</code>，逗号是将多个值分开，当条件达到其中一个值时便会执行。所以只有在周一或者是周三的6点0分才会被执行，当然，也不管当前是几月几日。</p>\n<p>再来个例子：<code>0 6 * 3-6 1,3 reboot</code></p>\n<p>这个例子的月改为了<code>3-6</code>，连字符的作用是指定范围，它就是在三月至六月的每周一和每周三的6点0分执行<code>reboot</code>命令。其实也可以这样写<code>0 6 * 3,4,5,6 1,3 reboot</code>，不过这样不够简洁，推荐还是使用连字符。</p>\n<p>斜杠例子：<code>0 */3 * * * reboot</code></p>\n<p>斜杠的作用是跳过某些特定值。你可以把它看作一个除法，当结果等于整数时才会执行。上面个例子，把时写成了<code>*/3</code>，星号表示任何值、/表示除法、3表示除数。那么，如果现在是1点，1/3 不是整数，就不会被执行，如果是9点，9/3 是整数，它就可以被执行。不知道我这样说大家有没有理解。（<a href=\"https://github.com/Hill-98\">小山</a>数学是体育老师教的）</p>\n<p>最后一个例子：<code>*/10 */3 * * * reboot</code></p>\n<p>这个例子有两个斜杠，分别是分和时，那么不但要满足当前“分”除于10是整数，还需要满足“时”除于3是整数，比如1点10分，虽然“分”满足了条件，不过“时”并没有，只有当前时间为3点40分，这样的情况下，才会触发执行。</p>\n<h3 id=\"计划任务注意事项\"><a href=\"#计划任务注意事项\" class=\"headerlink\" title=\"计划任务注意事项\"></a>计划任务注意事项</h3><p>我们先来说一下上面那个重启设备，那种写法其实是错误的，正确的写法应该是：<code>0 6 * * * sleep 60 &amp;&amp; reboot</code>。</p>\n<p>为什么呢？因为当设备重启后，计划任务的守护进程被启动，便会立即检查一遍是否有任务需要被执行，设备重启时间一般是小于1分钟的，所以当设备重启后，就又会触发这个重启任务，直到时间不匹配为止，而延迟60秒再重启设备可以避免这种错误。</p>\n<p>当日或周同时被设定为固定值时，那么其中的一个条件被满足时，任务就会被执行，不会等到两个条件均满足。（这么苛刻的条件，能满足的估计不多。）</p>\n<p>命令中双引号使用 % 时，需要加反斜杠转义，错误的例子：<code>0 6 * * * touch /tmp/$(date &quot;%Y&quot;)</code>，正确的例子：<code>0 6 * * * touch /tmp/$(date &quot;\\%Y&quot;)</code>。</p>\n<h2 id=\"完结撒花\"><a href=\"#完结撒花\" class=\"headerlink\" title=\"完结撒花\"></a>完结撒花</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ddns\"><a href=\"#ddns\" class=\"headerlink\" title=\"  ddns\"></a><i class=\"fas fa-dog\"></i>  ddns</h1><p>Dns ( domain name server )  </p>\n<p>ddns  ( Dynamic domain name server )   就是前面加个  Dynamic  动态的 .</p>\n<p>为什么要用ddns ? 而不是直接在 服务商dns解析  添加个a 记录 指向 你的ip 呢  ?</p>\n<p>因为 你向电信爸爸申请的公网ip 是每天都变化的,甚至重启光猫有时候也会变.(没有公网ip的可以用内网穿透,这里不说了)</p>\n<p>比如可以用下面 两个 ,等等.</p>\n<a class=\"btn-beautify button--animated block blue larger\" href=\"https://blog.genji.xyz/2020/01/05/frp/\" \n  title=\"Frp\"><i class=\"fas fa-dog fa-fw\"></i><span>Frp</span></a>\n\n<a class=\"btn-beautify button--animated block green larger\" href=\"https://hsk.oray.com/\" \n  title=\"花生壳\"><i class=\"fas fa-paw fa-fw\"></i><span>花生壳</span></a>\n\n<hr>\n<h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><h3 id=\"利用路由器自带的ddns\"><a href=\"#利用路由器自带的ddns\" class=\"headerlink\" title=\"利用路由器自带的ddns\"></a>利用路由器自带的ddns</h3><h4 id=\"优点-不折腾-缺点-服务商少-有的路由器不支持多个域名\"><a href=\"#优点-不折腾-缺点-服务商少-有的路由器不支持多个域名\" class=\"headerlink\" title=\"优点:不折腾  缺点:服务商少  有的路由器不支持多个域名\"></a>优点:不折腾  缺点:服务商少  有的路由器不支持多个域名</h4><p>以我家的 <code>小米ax3600</code>为例,自带的ddns服务商就那么几个:</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917014105405.png\" alt=\"image-20200917014105405\"></p>\n<p>这里注意下 图片里的 <code>账号密码</code> 就是你在服务商注册的账号和密码</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917014310786.png\" alt=\"image-20200917014310786\"></p>\n<blockquote><p>主机名称  就是你在服务商(这里是花生壳)注册的域名.</p>\n<p>一开始没懂什么是<code>主机名称</code>  哈哈 域名你就说域名呗..</p>\n</blockquote>\n\n\n\n<p>有的服务商第一次使用的话,可能需要你填写当前的公网ip.都没问题的话会显示:</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917015141777.png\" alt=\"image-20200917015141777\"></p>\n<blockquote><p>这里注意下 小米路由器好像只能启用 一个,不能多个同时启用.</p>\n</blockquote>\n\n<p>这时候就可以用域名访问你的ip . ip变化的话,域名解析 自动改成你现在ip . </p>\n<p>当然会有一定延迟,毕竟有个检查的时间.</p>\n<p>如果你有二级域名也想解析到你的动态公网ip  ,就可以设置cname了</p>\n<p>比如你的公网ip  是 8.8.8.8  ,然后通过ddns 记录到了  baidu.com 了,</p>\n<p>这时候你把 nihao.baidu.com 通过cname 指向 baidu.com </p>\n<p>访问 baidu.com nihao.baidu.com都会解析到你的公网ip</p>\n<p>然后电信爸爸给你改成 8.8.8.9了  ,这时候路由器检查到了,然后就会向服务商请求,把ip改成了8.8.8.9</p>\n<p>这里面有一个  检查间隔的时间 和服务商 ttl 的时间 .</p>\n<p>同理 nihao.baidu.com 的服务商也有个ttl时间 </p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917025246755.png\" alt=\"image-20200917025246755\"></p>\n<p>反正就是套娃 很慢.</p>\n<p>所以就有了方案二</p>\n<hr>\n<h2 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a>方案二</h2><p>通过旁路由的ddns直接解析到你域名的服务商</p>\n<p>因为小米路由器的服务商有限 没有腾讯云 或者阿里 </p>\n<p>所以要用下旁路由的 ddns ,一般来说旁路有支持的服务商很多的:</p>\n<img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021109249.png\" alt=\"image-20200917021109249\" style=\"zoom: 50%;\" />\n\n\n\n\n\n<p>这样就少了个中间商 赚差价</p>\n<p>但是问题来了<img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021236263.png\" alt=\"image-20200917021236263\"></p>\n<p>这里还是用 用户名 和 密码 的方式,但是服务商都要用 token 秘钥啥的了</p>\n<p>如果 你的服务商 支持 用户名 和 密码 的方式.就可以直接用了.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917021829641.png\" alt=\"image-20200917021829641\"></p>\n<blockquote><p>注意如果你是旁路由这里就不能是默认的<code>网络</code>了,因为这里ip是你主路由dhcp给旁路由的ip 比如:192.168.3.200,不是真正公网ip,要改成url的方式.</p>\n</blockquote>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917022152035.png\" alt=\"image-20200917022152035\"></p>\n<p>可以用自带的,也可用 <a href=\"http://ip.3322.net/\">http://ip.3322.net/</a> ,访问这个链接可以返回你的公网ip</p>\n<p>我是腾讯的dnspod,不支持账号和密码了,所以要换个新的ddns  ipk</p>\n<h2 id=\"方案三\"><a href=\"#方案三\" class=\"headerlink\" title=\"方案三\"></a>方案三</h2><p>在github 没找到旁路由好用的ddns ipk  ,找到了个py脚本.</p>\n<p>而且是最近更新的 ,也支持腾讯的dnspod.</p>\n<p><a href=\"https://github.com/NewFuture/DDNS\">https://github.com/NewFuture/DDNS</a></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917022425545.png\" alt=\"image-20200917022425545\"></p>\n<p>说明很详细.不多赘述</p>\n<p>申请个 秘钥 记住id  和token,吧文件传到 软路由 重启不会重置的文件夹里 我这里传到了/mnt/……….</p>\n<p>配置下<code>config.json</code></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;$schema&quot;</span>: <span class=\"string\">&quot;https://ddns.newfuture.cc/schema/v2.8.json&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;debug&quot;</span>: <span class=\"literal\">false</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;dns&quot;</span>: <span class=\"string\">&quot;dnspod&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span>: <span class=\"string\">&quot;你的秘钥id&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;index4&quot;</span>: <span class=\"string\">&quot;default&quot;</span>,<span class=\"comment\">///获取ipv4方式 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;index6&quot;</span>: <span class=\"string\">&quot;default&quot;</span>, <span class=\"comment\">//获取ipv6方式 </span></span><br><span class=\"line\">  <span class=\"attr\">&quot;ipv4&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;baidu.com&quot;</span>, </span><br><span class=\"line\">    <span class=\"string\">&quot;nihao.baidu.com&quot;</span></span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"attr\">&quot;ipv6&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;newfuture.cc&quot;</span>, </span><br><span class=\"line\">    <span class=\"string\">&quot;ipv6.ddns.newfuture.cc&quot;</span></span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"attr\">&quot;proxy&quot;</span>: <span class=\"literal\">null</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;token&quot;</span>: <span class=\"string\">&quot;YOUR TOKEN or KEY for DNS Provider&quot;</span>, </span><br><span class=\"line\">  <span class=\"attr\">&quot;ttl&quot;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;cache&quot;</span>:<span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>填好了就设置个计划任务 让他每5分钟 执行一次 ,因为  我设置了 <code>&quot;cache&quot;:true</code> 所以没有变就不提交,改变了再提交.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200917022541974.png\" alt=\"image-20200917022541974\"></p>\n<h3 id=\"如何设置计划任务\"><a href=\"#如何设置计划任务\" class=\"headerlink\" title=\"如何设置计划任务\"></a>如何设置计划任务</h3><p>好多* 好乱</p>\n<p>这里引用下这篇文章 <a href=\"https://www.mivm.cn/openwrt-crontab/\">https://www.mivm.cn/openwrt-crontab/</a></p>\n<p>例子：<code>0 6 * * * reboot</code></p>\n<p>每天6点0分执行<code>reboot</code>命令。因为只设置了“分”和“时”，“日月周”都是通配符，所以只要当前时间是 6点0分，不管当前是几月几日周几都会被执行。</p>\n<p>还是例子：<code>0 6 * * 1,3 reboot</code></p>\n<p>每周一和周三的6点0分执行<code>reboot</code>命令。因为“周”被设置为了<code>1,3</code>，逗号是将多个值分开，当条件达到其中一个值时便会执行。所以只有在周一或者是周三的6点0分才会被执行，当然，也不管当前是几月几日。</p>\n<p>再来个例子：<code>0 6 * 3-6 1,3 reboot</code></p>\n<p>这个例子的月改为了<code>3-6</code>，连字符的作用是指定范围，它就是在三月至六月的每周一和每周三的6点0分执行<code>reboot</code>命令。其实也可以这样写<code>0 6 * 3,4,5,6 1,3 reboot</code>，不过这样不够简洁，推荐还是使用连字符。</p>\n<p>斜杠例子：<code>0 */3 * * * reboot</code></p>\n<p>斜杠的作用是跳过某些特定值。你可以把它看作一个除法，当结果等于整数时才会执行。上面个例子，把时写成了<code>*/3</code>，星号表示任何值、/表示除法、3表示除数。那么，如果现在是1点，1/3 不是整数，就不会被执行，如果是9点，9/3 是整数，它就可以被执行。不知道我这样说大家有没有理解。（<a href=\"https://github.com/Hill-98\">小山</a>数学是体育老师教的）</p>\n<p>最后一个例子：<code>*/10 */3 * * * reboot</code></p>\n<p>这个例子有两个斜杠，分别是分和时，那么不但要满足当前“分”除于10是整数，还需要满足“时”除于3是整数，比如1点10分，虽然“分”满足了条件，不过“时”并没有，只有当前时间为3点40分，这样的情况下，才会触发执行。</p>\n<h3 id=\"计划任务注意事项\"><a href=\"#计划任务注意事项\" class=\"headerlink\" title=\"计划任务注意事项\"></a>计划任务注意事项</h3><p>我们先来说一下上面那个重启设备，那种写法其实是错误的，正确的写法应该是：<code>0 6 * * * sleep 60 &amp;&amp; reboot</code>。</p>\n<p>为什么呢？因为当设备重启后，计划任务的守护进程被启动，便会立即检查一遍是否有任务需要被执行，设备重启时间一般是小于1分钟的，所以当设备重启后，就又会触发这个重启任务，直到时间不匹配为止，而延迟60秒再重启设备可以避免这种错误。</p>\n<p>当日或周同时被设定为固定值时，那么其中的一个条件被满足时，任务就会被执行，不会等到两个条件均满足。（这么苛刻的条件，能满足的估计不多。）</p>\n<p>命令中双引号使用 % 时，需要加反斜杠转义，错误的例子：<code>0 6 * * * touch /tmp/$(date &quot;%Y&quot;)</code>，正确的例子：<code>0 6 * * * touch /tmp/$(date &quot;\\%Y&quot;)</code>。</p>\n<h2 id=\"完结撒花\"><a href=\"#完结撒花\" class=\"headerlink\" title=\"完结撒花\"></a>完结撒花</h2>"},{"title":"在 树莓派/openwrt 中搭建gitea","date":"2020-02-29T16:00:00.000Z","updated":"2021-03-11T06:41:45.767Z","top_img":null,"cover":"https://picgo.genji.xyz/blog/posts/gitea.png","description":"朋友的 树莓派 , 落灰了.拿来试试.","keywords":"树莓派,docker,端口映射","_content":"\n# <i class=\"fas fa-dog\"></i> gitea\n\n\n\n{% note primay %}\ngitea 就是 gogs 的小弟兄,一个自助的git服务\n\n[中文文档](https://docs.gitea.io/zh-cn/)   [英文文档](https://gitea.io/en-us/)\n\n{% endnote %}\n\n## docker 运行\n\n有很多方式,`docker`最省事,其他的看 [中文文档](https://docs.gitea.io/zh-cn/) .\n\n```docker\n## 拉取镜像\ndocker pull gitea/gitea:latest\n\n## 在宿主机创建挂在到镜像的文件夹. 文件夹目录随意, 但是要和下一条命令对应  \nsudo mkdir -p /var/lib/gitea\n\n## docker run \ndocker run -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest\n\n## -d 后台运行\n## --name= 给容器命名\n## -p 外部端口:内部端口\n## -v 外部要挂载的文件目录:容器内目录\n```\n\n\n## 可能出现的问题\n\n在挂载文件目录时候,会报错.\n\n可能是没有权限的问题\n\n在`docker`>`preferences`>`resources`>`file sharing`中添加你创建的文件目录\n\n## 访问 gitea\n\n 我是软路由的docker,运行的所以要访问软路由的ip.\n\n`192.168.3.123:10080`\n\n## 安装gitea\n\n![image-20201005025016837](https://picgo.genji.xyz/blog/posts/image-20201005025016837.png)\n\n\n\n先按照默认的来,熟练的话或者想用别的数据库,就直接改 \n\n设置好`管理员账号`后 ,立刻安装.\n\n重新打开网站 \n\n`192.168.3.123:10080`\n\n\n\n## 配置 app.ini文件\n\n\n\n```bash\n你的路径/gitea/conf/app.ini\n```\n\n[官方配置 example](https://github.com/go-gitea/gitea/blob/master/custom/conf/app.example.ini)\n\n[中文配置文档](https://docs.gitea.io/zh-cn/config-cheat-sheet/#server)\n\n\n\n我的配置\n\n```app.ini\n## app.ini\n\n主要配置这些 其他的默认即可\n\n\n[server]\nAPP_DATA_PATH    = /data/gitea\nDOMAIN           = git.genji.xyz\nSSH_DOMAIN       = genji.xyz(这里要注意,不要写二级域名)\n\n#内部监听端口\nHTTP_PORT        = 3000\n\n# 这里是你的访问网站的url(可以是你反向代理后的域名,可以使ip,看你具体的配置)\nROOT_URL         = https://git.genji.xyz\n\n## 是否允许ssh \nDISABLE_SSH      = true\n\n# 这里千万别填 22 否则和你`软路由` 或者`树莓派`的ssh 冲突\nSSH_PORT         = 2222\nSSH_LISTEN_PORT  = 2222\n\n\n# 这里是设置主题的 后面会说\n# gitea,arc-green 是自带的\n[ui]           \nDEFAULT_THEME = genji                                                                               \nTHEMES =  gitea,arc-green,space,genji                                                               \n```\n\n\n\n这里几个 ssh  和 url  要仔细点,\n\n## 提交公钥\n\n`用户设置`>ssh/gpg key 添加  \n\n\n\n\n\n\n\n## 美化\n\n\n\n[click here网站里的最下面有主题](https://gitea.com/gitea/awesome-gitea)\n\n将主题 `theme-name.css` css(有的也有js) 文件放入  `\\path\\to\\custom\\public\\css `.\n\n然后修改`\\path\\to\\custom\\conf\\app.ini`\n\n在` DEFAULT_THEME =  name`.\n\n重新docker run ,登录你的个人设置中 更改.\n\n\n\n你也可以看看文档 ,改改tmpl,css\n\n\n\n## 端口映射\n\n我的是192.168.123:10080\n\n我得把这个端口映射到公网ip上,路由器的功能.别用光猫的端口映射(有点小bug )\n\n然后你可以ddns ,就能一直域名访问了 .\n\n你也可以直接放到 服务器 docker 里 , 反向代理到80.\n\n\n\n 写得很粗!有问题请留言.\n\n![image-20201005032748440](https://picgo.genji.xyz/blog/posts/image-20201005032748440.png)\n\n![image-20201005032836078](https://picgo.genji.xyz/blog/posts/image-20201005032836078.png)","source":"_posts/Diy/gitea.md","raw":"---\ntitle: 在 树莓派/openwrt 中搭建gitea\ndate: 2020-03-01 00:00:00\nupdated: \ntop_img:\ncover:  https://picgo.genji.xyz/blog/posts/gitea.png\n\ndescription: 朋友的 树莓派 , 落灰了.拿来试试.\nkeywords: \"树莓派,docker,端口映射\"\ntags:  \t[gitea,docker,端口映射]\ncategories: diy\n---\n\n# <i class=\"fas fa-dog\"></i> gitea\n\n\n\n{% note primay %}\ngitea 就是 gogs 的小弟兄,一个自助的git服务\n\n[中文文档](https://docs.gitea.io/zh-cn/)   [英文文档](https://gitea.io/en-us/)\n\n{% endnote %}\n\n## docker 运行\n\n有很多方式,`docker`最省事,其他的看 [中文文档](https://docs.gitea.io/zh-cn/) .\n\n```docker\n## 拉取镜像\ndocker pull gitea/gitea:latest\n\n## 在宿主机创建挂在到镜像的文件夹. 文件夹目录随意, 但是要和下一条命令对应  \nsudo mkdir -p /var/lib/gitea\n\n## docker run \ndocker run -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest\n\n## -d 后台运行\n## --name= 给容器命名\n## -p 外部端口:内部端口\n## -v 外部要挂载的文件目录:容器内目录\n```\n\n\n## 可能出现的问题\n\n在挂载文件目录时候,会报错.\n\n可能是没有权限的问题\n\n在`docker`>`preferences`>`resources`>`file sharing`中添加你创建的文件目录\n\n## 访问 gitea\n\n 我是软路由的docker,运行的所以要访问软路由的ip.\n\n`192.168.3.123:10080`\n\n## 安装gitea\n\n![image-20201005025016837](https://picgo.genji.xyz/blog/posts/image-20201005025016837.png)\n\n\n\n先按照默认的来,熟练的话或者想用别的数据库,就直接改 \n\n设置好`管理员账号`后 ,立刻安装.\n\n重新打开网站 \n\n`192.168.3.123:10080`\n\n\n\n## 配置 app.ini文件\n\n\n\n```bash\n你的路径/gitea/conf/app.ini\n```\n\n[官方配置 example](https://github.com/go-gitea/gitea/blob/master/custom/conf/app.example.ini)\n\n[中文配置文档](https://docs.gitea.io/zh-cn/config-cheat-sheet/#server)\n\n\n\n我的配置\n\n```app.ini\n## app.ini\n\n主要配置这些 其他的默认即可\n\n\n[server]\nAPP_DATA_PATH    = /data/gitea\nDOMAIN           = git.genji.xyz\nSSH_DOMAIN       = genji.xyz(这里要注意,不要写二级域名)\n\n#内部监听端口\nHTTP_PORT        = 3000\n\n# 这里是你的访问网站的url(可以是你反向代理后的域名,可以使ip,看你具体的配置)\nROOT_URL         = https://git.genji.xyz\n\n## 是否允许ssh \nDISABLE_SSH      = true\n\n# 这里千万别填 22 否则和你`软路由` 或者`树莓派`的ssh 冲突\nSSH_PORT         = 2222\nSSH_LISTEN_PORT  = 2222\n\n\n# 这里是设置主题的 后面会说\n# gitea,arc-green 是自带的\n[ui]           \nDEFAULT_THEME = genji                                                                               \nTHEMES =  gitea,arc-green,space,genji                                                               \n```\n\n\n\n这里几个 ssh  和 url  要仔细点,\n\n## 提交公钥\n\n`用户设置`>ssh/gpg key 添加  \n\n\n\n\n\n\n\n## 美化\n\n\n\n[click here网站里的最下面有主题](https://gitea.com/gitea/awesome-gitea)\n\n将主题 `theme-name.css` css(有的也有js) 文件放入  `\\path\\to\\custom\\public\\css `.\n\n然后修改`\\path\\to\\custom\\conf\\app.ini`\n\n在` DEFAULT_THEME =  name`.\n\n重新docker run ,登录你的个人设置中 更改.\n\n\n\n你也可以看看文档 ,改改tmpl,css\n\n\n\n## 端口映射\n\n我的是192.168.123:10080\n\n我得把这个端口映射到公网ip上,路由器的功能.别用光猫的端口映射(有点小bug )\n\n然后你可以ddns ,就能一直域名访问了 .\n\n你也可以直接放到 服务器 docker 里 , 反向代理到80.\n\n\n\n 写得很粗!有问题请留言.\n\n![image-20201005032748440](https://picgo.genji.xyz/blog/posts/image-20201005032748440.png)\n\n![image-20201005032836078](https://picgo.genji.xyz/blog/posts/image-20201005032836078.png)","slug":"Diy/gitea","published":1,"_id":"ckm4i2twi0005dmle34360hzu","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"gitea\"><a href=\"#gitea\" class=\"headerlink\" title=\" gitea\"></a><i class=\"fas fa-dog\"></i> gitea</h1><div class=\"note primay flat\"><p>gitea 就是 gogs 的小弟兄,一个自助的git服务</p>\n<p><a href=\"https://docs.gitea.io/zh-cn/\">中文文档</a>   <a href=\"https://gitea.io/en-us/\">英文文档</a></p>\n</div>\n\n<h2 id=\"docker-运行\"><a href=\"#docker-运行\" class=\"headerlink\" title=\"docker 运行\"></a>docker 运行</h2><p>有很多方式,<code>docker</code>最省事,其他的看 <a href=\"https://docs.gitea.io/zh-cn/\">中文文档</a> .</p>\n<figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 拉取镜像</span></span><br><span class=\"line\">docker pull gitea/gitea:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 在宿主机创建挂在到镜像的文件夹. 文件夹目录随意, 但是要和下一条命令对应  </span></span><br><span class=\"line\">sudo mkdir -p /var/lib/gitea</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## docker run </span></span><br><span class=\"line\">docker <span class=\"keyword\">run</span><span class=\"bash\"> -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## -d 后台运行</span></span><br><span class=\"line\"><span class=\"comment\">## --name= 给容器命名</span></span><br><span class=\"line\"><span class=\"comment\">## -p 外部端口:内部端口</span></span><br><span class=\"line\"><span class=\"comment\">## -v 外部要挂载的文件目录:容器内目录</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"可能出现的问题\"><a href=\"#可能出现的问题\" class=\"headerlink\" title=\"可能出现的问题\"></a>可能出现的问题</h2><p>在挂载文件目录时候,会报错.</p>\n<p>可能是没有权限的问题</p>\n<p>在<code>docker</code>&gt;<code>preferences</code>&gt;<code>resources</code>&gt;<code>file sharing</code>中添加你创建的文件目录</p>\n<h2 id=\"访问-gitea\"><a href=\"#访问-gitea\" class=\"headerlink\" title=\"访问 gitea\"></a>访问 gitea</h2><p> 我是软路由的docker,运行的所以要访问软路由的ip.</p>\n<p><code>192.168.3.123:10080</code></p>\n<h2 id=\"安装gitea\"><a href=\"#安装gitea\" class=\"headerlink\" title=\"安装gitea\"></a>安装gitea</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201005025016837.png\" alt=\"image-20201005025016837\"></p>\n<p>先按照默认的来,熟练的话或者想用别的数据库,就直接改 </p>\n<p>设置好<code>管理员账号</code>后 ,立刻安装.</p>\n<p>重新打开网站 </p>\n<p><code>192.168.3.123:10080</code></p>\n<h2 id=\"配置-app-ini文件\"><a href=\"#配置-app-ini文件\" class=\"headerlink\" title=\"配置 app.ini文件\"></a>配置 app.ini文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你的路径/gitea/conf/app.ini</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/go-gitea/gitea/blob/master/custom/conf/app.example.ini\">官方配置 example</a></p>\n<p><a href=\"https://docs.gitea.io/zh-cn/config-cheat-sheet/#server\">中文配置文档</a></p>\n<p>我的配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## app.ini</span><br><span class=\"line\"></span><br><span class=\"line\">主要配置这些 其他的默认即可</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[server]</span><br><span class=\"line\">APP_DATA_PATH    &#x3D; &#x2F;data&#x2F;gitea</span><br><span class=\"line\">DOMAIN           &#x3D; git.genji.xyz</span><br><span class=\"line\">SSH_DOMAIN       &#x3D; genji.xyz(这里要注意,不要写二级域名)</span><br><span class=\"line\"></span><br><span class=\"line\">#内部监听端口</span><br><span class=\"line\">HTTP_PORT        &#x3D; 3000</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里是你的访问网站的url(可以是你反向代理后的域名,可以使ip,看你具体的配置)</span><br><span class=\"line\">ROOT_URL         &#x3D; https:&#x2F;&#x2F;git.genji.xyz</span><br><span class=\"line\"></span><br><span class=\"line\">## 是否允许ssh </span><br><span class=\"line\">DISABLE_SSH      &#x3D; true</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里千万别填 22 否则和你&#96;软路由&#96; 或者&#96;树莓派&#96;的ssh 冲突</span><br><span class=\"line\">SSH_PORT         &#x3D; 2222</span><br><span class=\"line\">SSH_LISTEN_PORT  &#x3D; 2222</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 这里是设置主题的 后面会说</span><br><span class=\"line\"># gitea,arc-green 是自带的</span><br><span class=\"line\">[ui]           </span><br><span class=\"line\">DEFAULT_THEME &#x3D; genji                                                                               </span><br><span class=\"line\">THEMES &#x3D;  gitea,arc-green,space,genji                                                               </span><br></pre></td></tr></table></figure>\n\n\n\n<p>这里几个 ssh  和 url  要仔细点,</p>\n<h2 id=\"提交公钥\"><a href=\"#提交公钥\" class=\"headerlink\" title=\"提交公钥\"></a>提交公钥</h2><p><code>用户设置</code>&gt;ssh/gpg key 添加  </p>\n<h2 id=\"美化\"><a href=\"#美化\" class=\"headerlink\" title=\"美化\"></a>美化</h2><p><a href=\"https://gitea.com/gitea/awesome-gitea\">click here网站里的最下面有主题</a></p>\n<p>将主题 <code>theme-name.css</code> css(有的也有js) 文件放入  <code>\\path\\to\\custom\\public\\css </code>.</p>\n<p>然后修改<code>\\path\\to\\custom\\conf\\app.ini</code></p>\n<p>在<code> DEFAULT_THEME =  name</code>.</p>\n<p>重新docker run ,登录你的个人设置中 更改.</p>\n<p>你也可以看看文档 ,改改tmpl,css</p>\n<h2 id=\"端口映射\"><a href=\"#端口映射\" class=\"headerlink\" title=\"端口映射\"></a>端口映射</h2><p>我的是192.168.123:10080</p>\n<p>我得把这个端口映射到公网ip上,路由器的功能.别用光猫的端口映射(有点小bug )</p>\n<p>然后你可以ddns ,就能一直域名访问了 .</p>\n<p>你也可以直接放到 服务器 docker 里 , 反向代理到80.</p>\n<p> 写得很粗!有问题请留言.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201005032748440.png\" alt=\"image-20201005032748440\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201005032836078.png\" alt=\"image-20201005032836078\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"gitea\"><a href=\"#gitea\" class=\"headerlink\" title=\" gitea\"></a><i class=\"fas fa-dog\"></i> gitea</h1><div class=\"note primay flat\"><p>gitea 就是 gogs 的小弟兄,一个自助的git服务</p>\n<p><a href=\"https://docs.gitea.io/zh-cn/\">中文文档</a>   <a href=\"https://gitea.io/en-us/\">英文文档</a></p>\n</div>\n\n<h2 id=\"docker-运行\"><a href=\"#docker-运行\" class=\"headerlink\" title=\"docker 运行\"></a>docker 运行</h2><p>有很多方式,<code>docker</code>最省事,其他的看 <a href=\"https://docs.gitea.io/zh-cn/\">中文文档</a> .</p>\n<figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 拉取镜像</span></span><br><span class=\"line\">docker pull gitea/gitea:latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 在宿主机创建挂在到镜像的文件夹. 文件夹目录随意, 但是要和下一条命令对应  </span></span><br><span class=\"line\">sudo mkdir -p /var/lib/gitea</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## docker run </span></span><br><span class=\"line\">docker <span class=\"keyword\">run</span><span class=\"bash\"> -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## -d 后台运行</span></span><br><span class=\"line\"><span class=\"comment\">## --name= 给容器命名</span></span><br><span class=\"line\"><span class=\"comment\">## -p 外部端口:内部端口</span></span><br><span class=\"line\"><span class=\"comment\">## -v 外部要挂载的文件目录:容器内目录</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"可能出现的问题\"><a href=\"#可能出现的问题\" class=\"headerlink\" title=\"可能出现的问题\"></a>可能出现的问题</h2><p>在挂载文件目录时候,会报错.</p>\n<p>可能是没有权限的问题</p>\n<p>在<code>docker</code>&gt;<code>preferences</code>&gt;<code>resources</code>&gt;<code>file sharing</code>中添加你创建的文件目录</p>\n<h2 id=\"访问-gitea\"><a href=\"#访问-gitea\" class=\"headerlink\" title=\"访问 gitea\"></a>访问 gitea</h2><p> 我是软路由的docker,运行的所以要访问软路由的ip.</p>\n<p><code>192.168.3.123:10080</code></p>\n<h2 id=\"安装gitea\"><a href=\"#安装gitea\" class=\"headerlink\" title=\"安装gitea\"></a>安装gitea</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201005025016837.png\" alt=\"image-20201005025016837\"></p>\n<p>先按照默认的来,熟练的话或者想用别的数据库,就直接改 </p>\n<p>设置好<code>管理员账号</code>后 ,立刻安装.</p>\n<p>重新打开网站 </p>\n<p><code>192.168.3.123:10080</code></p>\n<h2 id=\"配置-app-ini文件\"><a href=\"#配置-app-ini文件\" class=\"headerlink\" title=\"配置 app.ini文件\"></a>配置 app.ini文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你的路径/gitea/conf/app.ini</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/go-gitea/gitea/blob/master/custom/conf/app.example.ini\">官方配置 example</a></p>\n<p><a href=\"https://docs.gitea.io/zh-cn/config-cheat-sheet/#server\">中文配置文档</a></p>\n<p>我的配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## app.ini</span><br><span class=\"line\"></span><br><span class=\"line\">主要配置这些 其他的默认即可</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[server]</span><br><span class=\"line\">APP_DATA_PATH    &#x3D; &#x2F;data&#x2F;gitea</span><br><span class=\"line\">DOMAIN           &#x3D; git.genji.xyz</span><br><span class=\"line\">SSH_DOMAIN       &#x3D; genji.xyz(这里要注意,不要写二级域名)</span><br><span class=\"line\"></span><br><span class=\"line\">#内部监听端口</span><br><span class=\"line\">HTTP_PORT        &#x3D; 3000</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里是你的访问网站的url(可以是你反向代理后的域名,可以使ip,看你具体的配置)</span><br><span class=\"line\">ROOT_URL         &#x3D; https:&#x2F;&#x2F;git.genji.xyz</span><br><span class=\"line\"></span><br><span class=\"line\">## 是否允许ssh </span><br><span class=\"line\">DISABLE_SSH      &#x3D; true</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里千万别填 22 否则和你&#96;软路由&#96; 或者&#96;树莓派&#96;的ssh 冲突</span><br><span class=\"line\">SSH_PORT         &#x3D; 2222</span><br><span class=\"line\">SSH_LISTEN_PORT  &#x3D; 2222</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 这里是设置主题的 后面会说</span><br><span class=\"line\"># gitea,arc-green 是自带的</span><br><span class=\"line\">[ui]           </span><br><span class=\"line\">DEFAULT_THEME &#x3D; genji                                                                               </span><br><span class=\"line\">THEMES &#x3D;  gitea,arc-green,space,genji                                                               </span><br></pre></td></tr></table></figure>\n\n\n\n<p>这里几个 ssh  和 url  要仔细点,</p>\n<h2 id=\"提交公钥\"><a href=\"#提交公钥\" class=\"headerlink\" title=\"提交公钥\"></a>提交公钥</h2><p><code>用户设置</code>&gt;ssh/gpg key 添加  </p>\n<h2 id=\"美化\"><a href=\"#美化\" class=\"headerlink\" title=\"美化\"></a>美化</h2><p><a href=\"https://gitea.com/gitea/awesome-gitea\">click here网站里的最下面有主题</a></p>\n<p>将主题 <code>theme-name.css</code> css(有的也有js) 文件放入  <code>\\path\\to\\custom\\public\\css </code>.</p>\n<p>然后修改<code>\\path\\to\\custom\\conf\\app.ini</code></p>\n<p>在<code> DEFAULT_THEME =  name</code>.</p>\n<p>重新docker run ,登录你的个人设置中 更改.</p>\n<p>你也可以看看文档 ,改改tmpl,css</p>\n<h2 id=\"端口映射\"><a href=\"#端口映射\" class=\"headerlink\" title=\"端口映射\"></a>端口映射</h2><p>我的是192.168.123:10080</p>\n<p>我得把这个端口映射到公网ip上,路由器的功能.别用光猫的端口映射(有点小bug )</p>\n<p>然后你可以ddns ,就能一直域名访问了 .</p>\n<p>你也可以直接放到 服务器 docker 里 , 反向代理到80.</p>\n<p> 写得很粗!有问题请留言.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201005032748440.png\" alt=\"image-20201005032748440\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201005032836078.png\" alt=\"image-20201005032836078\"></p>\n"},{"title":"frp 内网穿透","description":"frp内网穿透 仅仅为了访问家里的设备还好.","keywords":"frp","date":"2020-01-04T16:00:00.000Z","cover":"https://picgo.genji.xyz/blog/posts/frp0.png","_content":"# frp 内网穿透/映射\n\n#### 办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的.\n\n-----\n\n\n\n## 工具 github  frp\n\n[https://github.com/fatedier/frp](https://github.com/fatedier/frp)\n\n\n\n不同系统下载不同  工具包\n\n![frp2](https://picgo.genji.xyz/blog/posts/frp2.png)\n\n\n\n![frp](https://picgo.genji.xyz/blog/posts/frp.png)\n\n\n\n\n\n\n\n## 配置服务器端\n\n1. ssh 服务器 \n2. 下载工具包 \n3. 解压 里面有个frps.ini\n4. 设置端口\n\n```ini\n# frps.ini\n#require\n[common]\nbind_addr = 0.0.0.0\nbind_port = 7000\n\n\n\n\n\n\n#option\n\n\n#udp\nbind_udp_port = 7001   \n#tcp\nkcp_bind_pot = 7000\n\n#密码\ntoken = qaz123\n\n#其他\nlog_level = info\nlog_max_days = 3\nmax_pool_count = 5\nmax_ports_per_client = 0\ntcp_mux = true\ndisable_log_color = false\nlog_file = /www/server/panel/plugin/btp_frps/temp/frps.log\n\n\n```\n\n​    \n\n5. 运行\n\n```sh\nsh\n./frps -c ./frps.ini\n```\n\n   \n\n6. 开放端口  服务器本地的 和 服务商的 安全组   \n\n\n\n## 客户端\n\n1.  也下载个工具包 我这里是mac  下载的是 drawin 版本的\n\n2. 解压 有个frpc.ini 文件\n\n   \n\n```ini\n[common]\nserver_addr = 公网ip地址\nserver_port = 7000\n\ntoken = qaz123\n\n[web]\ntype = http\n#要映射的端口\nlocal_port = 8080  \nlocal_ip=127.0.0.1\ncustom_domains = 域名或者公网ip\nremotr_port= 8080\n\n```\n\n3. 运行(路径要对) \n\n```shel\n./frpc -c ./frpc.ini\n```\n\n## 结论\n\n没啥难度\n\n可选充值代替品(也挺贵): \n\n花生壳 每月免费1G 速度可以 \n\nnat123  老古董\n\nngrok  \n\n\n\n\n服务器带宽1m ,吃了屎一样难受 . 管电信要个公网ip 不香么 ,如果动态公网ip,可以用ddns.\n\n","source":"_posts/Diy/frp.md","raw":"---\ntitle: frp 内网穿透\ndescription: \"frp内网穿透 仅仅为了访问家里的设备还好.\"\nkeywords: \"frp\"\ndate: 2020-01-05 00:00:00\ncover: https://picgo.genji.xyz/blog/posts/frp0.png\ntags: [frp,内网穿透]\ncategories: diy\n---\n# frp 内网穿透/映射\n\n#### 办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的.\n\n-----\n\n\n\n## 工具 github  frp\n\n[https://github.com/fatedier/frp](https://github.com/fatedier/frp)\n\n\n\n不同系统下载不同  工具包\n\n![frp2](https://picgo.genji.xyz/blog/posts/frp2.png)\n\n\n\n![frp](https://picgo.genji.xyz/blog/posts/frp.png)\n\n\n\n\n\n\n\n## 配置服务器端\n\n1. ssh 服务器 \n2. 下载工具包 \n3. 解压 里面有个frps.ini\n4. 设置端口\n\n```ini\n# frps.ini\n#require\n[common]\nbind_addr = 0.0.0.0\nbind_port = 7000\n\n\n\n\n\n\n#option\n\n\n#udp\nbind_udp_port = 7001   \n#tcp\nkcp_bind_pot = 7000\n\n#密码\ntoken = qaz123\n\n#其他\nlog_level = info\nlog_max_days = 3\nmax_pool_count = 5\nmax_ports_per_client = 0\ntcp_mux = true\ndisable_log_color = false\nlog_file = /www/server/panel/plugin/btp_frps/temp/frps.log\n\n\n```\n\n​    \n\n5. 运行\n\n```sh\nsh\n./frps -c ./frps.ini\n```\n\n   \n\n6. 开放端口  服务器本地的 和 服务商的 安全组   \n\n\n\n## 客户端\n\n1.  也下载个工具包 我这里是mac  下载的是 drawin 版本的\n\n2. 解压 有个frpc.ini 文件\n\n   \n\n```ini\n[common]\nserver_addr = 公网ip地址\nserver_port = 7000\n\ntoken = qaz123\n\n[web]\ntype = http\n#要映射的端口\nlocal_port = 8080  \nlocal_ip=127.0.0.1\ncustom_domains = 域名或者公网ip\nremotr_port= 8080\n\n```\n\n3. 运行(路径要对) \n\n```shel\n./frpc -c ./frpc.ini\n```\n\n## 结论\n\n没啥难度\n\n可选充值代替品(也挺贵): \n\n花生壳 每月免费1G 速度可以 \n\nnat123  老古董\n\nngrok  \n\n\n\n\n服务器带宽1m ,吃了屎一样难受 . 管电信要个公网ip 不香么 ,如果动态公网ip,可以用ddns.\n\n","slug":"Diy/frp","published":1,"updated":"2021-03-11T06:26:16.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2twm0007dmle9ffa2wne","content":"<h1 id=\"frp-内网穿透-映射\"><a href=\"#frp-内网穿透-映射\" class=\"headerlink\" title=\"frp 内网穿透/映射\"></a>frp 内网穿透/映射</h1><h4 id=\"办网时候-尽量要公网ip-阿里或者腾讯的-学生服务器-1m带宽-都不够吃屎的\"><a href=\"#办网时候-尽量要公网ip-阿里或者腾讯的-学生服务器-1m带宽-都不够吃屎的\" class=\"headerlink\" title=\"办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的.\"></a>办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的.</h4><hr>\n<h2 id=\"工具-github-frp\"><a href=\"#工具-github-frp\" class=\"headerlink\" title=\"工具 github  frp\"></a>工具 github  frp</h2><p><a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n<p>不同系统下载不同  工具包</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/frp2.png\" alt=\"frp2\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/frp.png\" alt=\"frp\"></p>\n<h2 id=\"配置服务器端\"><a href=\"#配置服务器端\" class=\"headerlink\" title=\"配置服务器端\"></a>配置服务器端</h2><ol>\n<li>ssh 服务器 </li>\n<li>下载工具包 </li>\n<li>解压 里面有个frps.ini</li>\n<li>设置端口</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># frps.ini</span></span><br><span class=\"line\"><span class=\"comment\">#require</span></span><br><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">bind_addr</span> = <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"attr\">bind_port</span> = <span class=\"number\">7000</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#option</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#udp</span></span><br><span class=\"line\"><span class=\"attr\">bind_udp_port</span> = <span class=\"number\">7001</span>   </span><br><span class=\"line\"><span class=\"comment\">#tcp</span></span><br><span class=\"line\"><span class=\"attr\">kcp_bind_pot</span> = <span class=\"number\">7000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#密码</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = qaz123</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#其他</span></span><br><span class=\"line\"><span class=\"attr\">log_level</span> = info</span><br><span class=\"line\"><span class=\"attr\">log_max_days</span> = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">max_pool_count</span> = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">max_ports_per_client</span> = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">tcp_mux</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">disable_log_color</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">log_file</span> = /www/server/panel/plugin/btp_frps/temp/frps.log</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>​    </p>\n<ol start=\"5\">\n<li>运行</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh</span><br><span class=\"line\">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"6\">\n<li>开放端口  服务器本地的 和 服务商的 安全组   </li>\n</ol>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><ol>\n<li><p>也下载个工具包 我这里是mac  下载的是 drawin 版本的</p>\n</li>\n<li><p>解压 有个frpc.ini 文件</p>\n</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">server_addr</span> = 公网ip地址</span><br><span class=\"line\"><span class=\"attr\">server_port</span> = <span class=\"number\">7000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">token</span> = qaz123</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[web]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"comment\">#要映射的端口</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">8080</span>  </span><br><span class=\"line\"><span class=\"attr\">local_ip</span>=<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = 域名或者公网ip</span><br><span class=\"line\"><span class=\"attr\">remotr_port</span>= <span class=\"number\">8080</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>运行(路径要对) </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;frpc -c .&#x2F;frpc.ini</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>没啥难度</p>\n<p>可选充值代替品(也挺贵): </p>\n<p>花生壳 每月免费1G 速度可以 </p>\n<p>nat123  老古董</p>\n<p>ngrok  </p>\n<p>服务器带宽1m ,吃了屎一样难受 . 管电信要个公网ip 不香么 ,如果动态公网ip,可以用ddns.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"frp-内网穿透-映射\"><a href=\"#frp-内网穿透-映射\" class=\"headerlink\" title=\"frp 内网穿透/映射\"></a>frp 内网穿透/映射</h1><h4 id=\"办网时候-尽量要公网ip-阿里或者腾讯的-学生服务器-1m带宽-都不够吃屎的\"><a href=\"#办网时候-尽量要公网ip-阿里或者腾讯的-学生服务器-1m带宽-都不够吃屎的\" class=\"headerlink\" title=\"办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的.\"></a>办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的.</h4><hr>\n<h2 id=\"工具-github-frp\"><a href=\"#工具-github-frp\" class=\"headerlink\" title=\"工具 github  frp\"></a>工具 github  frp</h2><p><a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n<p>不同系统下载不同  工具包</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/frp2.png\" alt=\"frp2\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/frp.png\" alt=\"frp\"></p>\n<h2 id=\"配置服务器端\"><a href=\"#配置服务器端\" class=\"headerlink\" title=\"配置服务器端\"></a>配置服务器端</h2><ol>\n<li>ssh 服务器 </li>\n<li>下载工具包 </li>\n<li>解压 里面有个frps.ini</li>\n<li>设置端口</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># frps.ini</span></span><br><span class=\"line\"><span class=\"comment\">#require</span></span><br><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">bind_addr</span> = <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"attr\">bind_port</span> = <span class=\"number\">7000</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#option</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#udp</span></span><br><span class=\"line\"><span class=\"attr\">bind_udp_port</span> = <span class=\"number\">7001</span>   </span><br><span class=\"line\"><span class=\"comment\">#tcp</span></span><br><span class=\"line\"><span class=\"attr\">kcp_bind_pot</span> = <span class=\"number\">7000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#密码</span></span><br><span class=\"line\"><span class=\"attr\">token</span> = qaz123</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#其他</span></span><br><span class=\"line\"><span class=\"attr\">log_level</span> = info</span><br><span class=\"line\"><span class=\"attr\">log_max_days</span> = <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"attr\">max_pool_count</span> = <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">max_ports_per_client</span> = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">tcp_mux</span> = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">disable_log_color</span> = <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">log_file</span> = /www/server/panel/plugin/btp_frps/temp/frps.log</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>​    </p>\n<ol start=\"5\">\n<li>运行</li>\n</ol>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh</span><br><span class=\"line\">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"6\">\n<li>开放端口  服务器本地的 和 服务商的 安全组   </li>\n</ol>\n<h2 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h2><ol>\n<li><p>也下载个工具包 我这里是mac  下载的是 drawin 版本的</p>\n</li>\n<li><p>解压 有个frpc.ini 文件</p>\n</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[common]</span></span><br><span class=\"line\"><span class=\"attr\">server_addr</span> = 公网ip地址</span><br><span class=\"line\"><span class=\"attr\">server_port</span> = <span class=\"number\">7000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">token</span> = qaz123</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[web]</span></span><br><span class=\"line\"><span class=\"attr\">type</span> = http</span><br><span class=\"line\"><span class=\"comment\">#要映射的端口</span></span><br><span class=\"line\"><span class=\"attr\">local_port</span> = <span class=\"number\">8080</span>  </span><br><span class=\"line\"><span class=\"attr\">local_ip</span>=<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\"><span class=\"attr\">custom_domains</span> = 域名或者公网ip</span><br><span class=\"line\"><span class=\"attr\">remotr_port</span>= <span class=\"number\">8080</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>运行(路径要对) </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.&#x2F;frpc -c .&#x2F;frpc.ini</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>没啥难度</p>\n<p>可选充值代替品(也挺贵): </p>\n<p>花生壳 每月免费1G 速度可以 </p>\n<p>nat123  老古董</p>\n<p>ngrok  </p>\n<p>服务器带宽1m ,吃了屎一样难受 . 管电信要个公网ip 不香么 ,如果动态公网ip,可以用ddns.</p>\n"},{"title":"N1 刷 openWrt","date":"2020-09-01T16:00:00.000Z","updated":"2021-03-11T06:25:41.278Z","cover":"https://picgo.genji.xyz/blog/posts/image-20201010162139035.png","description":"家里 500m/100m 速度不能浪费了啊!","keywords":"openwrt,smartDns","_content":"\n![image-20201010162139035](https://picgo.genji.xyz/blog/posts/image-20201010162139035.png)\n\n## 只mark帖子 没有教程  \n\n固件: [恩山  flippy 更新很快](https://www.right.com.cn/forum/thread-981406-1-1.html)    \n\nDockerUI: \n- [luci-app-dockerman github](https://github.com/lisaac/luci-app-dockerman)  当然你也可以用 \n- [portainer github](https://github.com/portainer/portainer)      \n  \n  \n\nDDNS: 自带的 ddns 不支持 token 所以换了一个\n- [ddns github ](https://github.com/NewFuture/DDNS)\n- 如何配置   [我的文章-ddns](https://blog.genji.xyz/2020/01/05/2020-01-06_Net_ddns/)\n- */5 * * * * cd /mnt/mmcblk1p3/ddns && python ./run.py\n  \n  \n\n作为旁路由如何组网:\n\n- [ youtube ](https://www.youtube.com/watch?v=jTs3VEaKFCw&t=1022s)\n- 我选择的方案如下图\n\n![image-20201010163852516](https://picgo.genji.xyz/blog/posts/image-20201010163852516.png)\n\n连旁路由的wifi 出国\n\n连主路由 国内\n\n\n\n在电脑端我直接clash \n\n在手机端我直接设置代理加端口\n\n但是在电视上,操作累死个人,所以选择连接 出国\n\n\n\n\n救砖:\n\n- [救砖视频 bilibili](https://www.bilibili.com/video/BV19J411c7Zf?from=search&seid=11516956421474620448)\n\n\n\n","source":"_posts/Diy/openwrt_n1.md","raw":"---\ntitle: N1 刷 openWrt\ndate: 2020-09-02 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/image-20201010162139035.png\ndescription: 家里 500m/100m 速度不能浪费了啊!\ntags:  \t[openwrt,旁路由]\ncategories: diy\nkeywords: \"openwrt,smartDns\"\n---\n\n![image-20201010162139035](https://picgo.genji.xyz/blog/posts/image-20201010162139035.png)\n\n## 只mark帖子 没有教程  \n\n固件: [恩山  flippy 更新很快](https://www.right.com.cn/forum/thread-981406-1-1.html)    \n\nDockerUI: \n- [luci-app-dockerman github](https://github.com/lisaac/luci-app-dockerman)  当然你也可以用 \n- [portainer github](https://github.com/portainer/portainer)      \n  \n  \n\nDDNS: 自带的 ddns 不支持 token 所以换了一个\n- [ddns github ](https://github.com/NewFuture/DDNS)\n- 如何配置   [我的文章-ddns](https://blog.genji.xyz/2020/01/05/2020-01-06_Net_ddns/)\n- */5 * * * * cd /mnt/mmcblk1p3/ddns && python ./run.py\n  \n  \n\n作为旁路由如何组网:\n\n- [ youtube ](https://www.youtube.com/watch?v=jTs3VEaKFCw&t=1022s)\n- 我选择的方案如下图\n\n![image-20201010163852516](https://picgo.genji.xyz/blog/posts/image-20201010163852516.png)\n\n连旁路由的wifi 出国\n\n连主路由 国内\n\n\n\n在电脑端我直接clash \n\n在手机端我直接设置代理加端口\n\n但是在电视上,操作累死个人,所以选择连接 出国\n\n\n\n\n救砖:\n\n- [救砖视频 bilibili](https://www.bilibili.com/video/BV19J411c7Zf?from=search&seid=11516956421474620448)\n\n\n\n","slug":"Diy/openwrt_n1","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2two000admle4qsx6owj","content":"<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010162139035.png\" alt=\"image-20201010162139035\"></p>\n<h2 id=\"只mark帖子-没有教程\"><a href=\"#只mark帖子-没有教程\" class=\"headerlink\" title=\"只mark帖子 没有教程\"></a>只mark帖子 没有教程</h2><p>固件: <a href=\"https://www.right.com.cn/forum/thread-981406-1-1.html\">恩山  flippy 更新很快</a>    </p>\n<p>DockerUI: </p>\n<ul>\n<li><a href=\"https://github.com/lisaac/luci-app-dockerman\">luci-app-dockerman github</a>  当然你也可以用 </li>\n<li><a href=\"https://github.com/portainer/portainer\">portainer github</a>      </li>\n</ul>\n<p>DDNS: 自带的 ddns 不支持 token 所以换了一个</p>\n<ul>\n<li><a href=\"https://github.com/NewFuture/DDNS\">ddns github </a></li>\n<li>如何配置   <a href=\"https://blog.genji.xyz/2020/01/05/2020-01-06_Net_ddns/\">我的文章-ddns</a></li>\n<li>*/5 * * * * cd /mnt/mmcblk1p3/ddns &amp;&amp; python ./run.py</li>\n</ul>\n<p>作为旁路由如何组网:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=jTs3VEaKFCw&t=1022s\"> youtube </a></li>\n<li>我选择的方案如下图</li>\n</ul>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010163852516.png\" alt=\"image-20201010163852516\"></p>\n<p>连旁路由的wifi 出国</p>\n<p>连主路由 国内</p>\n<p>在电脑端我直接clash </p>\n<p>在手机端我直接设置代理加端口</p>\n<p>但是在电视上,操作累死个人,所以选择连接 出国</p>\n<p>救砖:</p>\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV19J411c7Zf?from=search&seid=11516956421474620448\">救砖视频 bilibili</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010162139035.png\" alt=\"image-20201010162139035\"></p>\n<h2 id=\"只mark帖子-没有教程\"><a href=\"#只mark帖子-没有教程\" class=\"headerlink\" title=\"只mark帖子 没有教程\"></a>只mark帖子 没有教程</h2><p>固件: <a href=\"https://www.right.com.cn/forum/thread-981406-1-1.html\">恩山  flippy 更新很快</a>    </p>\n<p>DockerUI: </p>\n<ul>\n<li><a href=\"https://github.com/lisaac/luci-app-dockerman\">luci-app-dockerman github</a>  当然你也可以用 </li>\n<li><a href=\"https://github.com/portainer/portainer\">portainer github</a>      </li>\n</ul>\n<p>DDNS: 自带的 ddns 不支持 token 所以换了一个</p>\n<ul>\n<li><a href=\"https://github.com/NewFuture/DDNS\">ddns github </a></li>\n<li>如何配置   <a href=\"https://blog.genji.xyz/2020/01/05/2020-01-06_Net_ddns/\">我的文章-ddns</a></li>\n<li>*/5 * * * * cd /mnt/mmcblk1p3/ddns &amp;&amp; python ./run.py</li>\n</ul>\n<p>作为旁路由如何组网:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=jTs3VEaKFCw&t=1022s\"> youtube </a></li>\n<li>我选择的方案如下图</li>\n</ul>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010163852516.png\" alt=\"image-20201010163852516\"></p>\n<p>连旁路由的wifi 出国</p>\n<p>连主路由 国内</p>\n<p>在电脑端我直接clash </p>\n<p>在手机端我直接设置代理加端口</p>\n<p>但是在电视上,操作累死个人,所以选择连接 出国</p>\n<p>救砖:</p>\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV19J411c7Zf?from=search&seid=11516956421474620448\">救砖视频 bilibili</a></li>\n</ul>\n"},{"title":"md 外挂标签","description":null,"date":"2019-12-31T16:00:00.000Z","cover":"https://picgo.genji.xyz/blog/bg/hardcoding5.png","_content":"## 提示块\n\n```Markdown\n{% note [class] [no-icon] %}\nAny content (support inline tags too.io).\n{% endnote %}\n\n[class]   : default | primary | success | info | warning | danger.\n[no-icon] : Disable icon in note.\n\nAll parameters are optional.\n\n```\n\n\n{% note default %}\ndefault 提示塊標籤\n{% endnote %}\n\n{% note primary no-icon %}\nprimary 提示塊標籤\n{% endnote %}\n\n{% note success %}\nsuccess 提示塊標籤\n{% endnote %}\n\n{% note info %}\ninfo 提示塊標籤\n{% endnote %}\n\n{% note warning %}\nwarning 提示塊標籤\n{% endnote %}\n\n{% note danger %}\ndanger 提示塊標籤\n{% endnote %}\n\n## 图形\n\n\n\n```Markdown\n{% mermaid %}\npie\n    title Key elements in Product X\n    \"Calcium\" : 42.96\n    \"Potassium\" : 50.05\n    \"Magnesium\" : 10.01\n    \"Iron\" :  5\n{% endmermaid %}\n\n\n\n```\n{% mermaid %}\npie\n    title Key elements in Product X\n    \"Calcium\" : 42.96\n    \"Potassium\" : 50.05\n    \"Magnesium\" : 10.01\n    \"Iron\" :  5\n{% endmermaid %}\n\n\n\n## tab \n```markdown\n\n{% tabs test1 %}\n<!-- tab -->\n**This is Tab 1.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n\n\n\n```\n{% tabs test1 %}\n<!-- tab -->\n**This is Tab 1.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n\n\n\n## btn\n\n{% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %}\n\n{% btn 'http://blog.genji.xyz',hello,far fa-hand-point-right,green larger %}\n\n\n\n\n\n\n\n## front-matter\n\n```\n---\ntitle: 【必需】頁面標題 \ndate: 【必需】頁面創建日期 \nupdated: 【可選】文章更新日期 \ntags:  \t【可選】文章標籤 \ncategories: 【可選】文章分類 数组 [1,2,3]表示1>2>3 子分类\nkeywords: 【可選】文章關鍵字 \ndescription: 【可選】文章描述\ntop_img 【可選】文章頂部圖片\ncomments: \t【可選】顯示文章評論模塊 (默認 true)\ncover:  【可選】文章縮略圖 (如果沒有設置 top_img, 文章頁頂部將顯示縮略圖，可設為 false / 圖片地址 / 留空)\n\n\n\ntoc:\ntoc_number:\nauto_open:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\nmathjax:\nkatex:\naplayer:\nhighlight_shrink:\n\n---\n\n\n\nhttps://demo.jerryc.me/posts/dc584b87/#Front-matter\n```\n\n\n\n\n","source":"_posts/Diy/外挂标签.md","raw":"---\ntitle: md 外挂标签\ndescription: \ndate: 2020-01-01 00:00:00\ncover:  \ncategories: diy\ntags: [md]\n---\n## 提示块\n\n```Markdown\n{% note [class] [no-icon] %}\nAny content (support inline tags too.io).\n{% endnote %}\n\n[class]   : default | primary | success | info | warning | danger.\n[no-icon] : Disable icon in note.\n\nAll parameters are optional.\n\n```\n\n\n{% note default %}\ndefault 提示塊標籤\n{% endnote %}\n\n{% note primary no-icon %}\nprimary 提示塊標籤\n{% endnote %}\n\n{% note success %}\nsuccess 提示塊標籤\n{% endnote %}\n\n{% note info %}\ninfo 提示塊標籤\n{% endnote %}\n\n{% note warning %}\nwarning 提示塊標籤\n{% endnote %}\n\n{% note danger %}\ndanger 提示塊標籤\n{% endnote %}\n\n## 图形\n\n\n\n```Markdown\n{% mermaid %}\npie\n    title Key elements in Product X\n    \"Calcium\" : 42.96\n    \"Potassium\" : 50.05\n    \"Magnesium\" : 10.01\n    \"Iron\" :  5\n{% endmermaid %}\n\n\n\n```\n{% mermaid %}\npie\n    title Key elements in Product X\n    \"Calcium\" : 42.96\n    \"Potassium\" : 50.05\n    \"Magnesium\" : 10.01\n    \"Iron\" :  5\n{% endmermaid %}\n\n\n\n## tab \n```markdown\n\n{% tabs test1 %}\n<!-- tab -->\n**This is Tab 1.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n\n\n\n```\n{% tabs test1 %}\n<!-- tab -->\n**This is Tab 1.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 2.**\n<!-- endtab -->\n\n<!-- tab -->\n**This is Tab 3.**\n<!-- endtab -->\n{% endtabs %}\n\n\n\n## btn\n\n{% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %}\n\n{% btn 'http://blog.genji.xyz',hello,far fa-hand-point-right,green larger %}\n\n\n\n\n\n\n\n## front-matter\n\n```\n---\ntitle: 【必需】頁面標題 \ndate: 【必需】頁面創建日期 \nupdated: 【可選】文章更新日期 \ntags:  \t【可選】文章標籤 \ncategories: 【可選】文章分類 数组 [1,2,3]表示1>2>3 子分类\nkeywords: 【可選】文章關鍵字 \ndescription: 【可選】文章描述\ntop_img 【可選】文章頂部圖片\ncomments: \t【可選】顯示文章評論模塊 (默認 true)\ncover:  【可選】文章縮略圖 (如果沒有設置 top_img, 文章頁頂部將顯示縮略圖，可設為 false / 圖片地址 / 留空)\n\n\n\ntoc:\ntoc_number:\nauto_open:\ncopyright:\ncopyright_author:\ncopyright_author_href:\ncopyright_url:\ncopyright_info:\nmathjax:\nkatex:\naplayer:\nhighlight_shrink:\n\n---\n\n\n\nhttps://demo.jerryc.me/posts/dc584b87/#Front-matter\n```\n\n\n\n\n","slug":"Diy/外挂标签","published":1,"updated":"2021-03-11T06:26:26.839Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2twp000ddmle1vhobha9","content":"<h2 id=\"提示块\"><a href=\"#提示块\" class=\"headerlink\" title=\"提示块\"></a>提示块</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note [class] [no-icon] %&#125;</span><br><span class=\"line\">Any content (support inline tags too.io).</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[class]   : default | primary | success | info | warning | danger.</span><br><span class=\"line\">[no-icon] : Disable icon in note.</span><br><span class=\"line\"></span><br><span class=\"line\">All parameters are optional.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<div class=\"note default flat\"><p>default 提示塊標籤</p>\n</div>\n\n<div class=\"note primary no-icon flat\"><p>primary 提示塊標籤</p>\n</div>\n\n<div class=\"note success flat\"><p>success 提示塊標籤</p>\n</div>\n\n<div class=\"note info flat\"><p>info 提示塊標籤</p>\n</div>\n\n<div class=\"note warning flat\"><p>warning 提示塊標籤</p>\n</div>\n\n<div class=\"note danger flat\"><p>danger 提示塊標籤</p>\n</div>\n\n<h2 id=\"图形\"><a href=\"#图形\" class=\"headerlink\" title=\"图形\"></a>图形</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid %&#125;</span><br><span class=\"line\">pie</span><br><span class=\"line\"><span class=\"code\">    title Key elements in Product X</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Calcium&quot; : 42.96</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Potassium&quot; : 50.05</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Magnesium&quot; : 10.01</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Iron&quot; :  5</span></span><br><span class=\"line\"><span class=\"code\">&#123;% endmermaid %&#125;</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br></pre></td></tr></table></figure>\n<div class=\"mermaid\">pie\n    title Key elements in Product X\n    &quot;Calcium&quot; : 42.96\n    &quot;Potassium&quot; : 50.05\n    &quot;Magnesium&quot; : 10.01\n    &quot;Iron&quot; :  5</div>\n\n\n\n<h2 id=\"tab\"><a href=\"#tab\" class=\"headerlink\" title=\"tab\"></a>tab</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;% tabs test1 %&#125;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"strong\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"strong\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"strong\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<div class=\"tabs\" id=\"test1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#test1-1\">test1 1</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test1-2\">test1 2</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test1-3\">test1 3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test1-1\"><p><strong>This is Tab 1.</strong></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test1-2\"><p><strong>This is Tab 2.</strong></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test1-3\"><p><strong>This is Tab 3.</strong></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n\n\n\n<h2 id=\"btn\"><a href=\"#btn\" class=\"headerlink\" title=\"btn\"></a>btn</h2><a class=\"btn-beautify button--animated [color] [style] [layout] [position] [size]\" href=\"/%5Burl%5D\" \n  title=\"[text]\"><i class=\"[icon] fa-fw\"></i><span>[text]</span></a>\n\n<a class=\"btn-beautify button--animated green larger\" href=\"http://blog.genji.xyz\" \n  title=\"hello\"><i class=\"far fa-hand-point-right fa-fw\"></i><span>hello</span></a>\n\n\n\n\n\n\n\n<h2 id=\"front-matter\"><a href=\"#front-matter\" class=\"headerlink\" title=\"front-matter\"></a>front-matter</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 【必需】頁面標題 </span><br><span class=\"line\">date: 【必需】頁面創建日期 </span><br><span class=\"line\">updated: 【可選】文章更新日期 </span><br><span class=\"line\">tags:  \t【可選】文章標籤 </span><br><span class=\"line\">categories: 【可選】文章分類 数组 [1,2,3]表示1&gt;2&gt;3 子分类</span><br><span class=\"line\">keywords: 【可選】文章關鍵字 </span><br><span class=\"line\">description: 【可選】文章描述</span><br><span class=\"line\">top_img 【可選】文章頂部圖片</span><br><span class=\"line\">comments: \t【可選】顯示文章評論模塊 (默認 true)</span><br><span class=\"line\">cover:  【可選】文章縮略圖 (如果沒有設置 top_img, 文章頁頂部將顯示縮略圖，可設為 false &#x2F; 圖片地址 &#x2F; 留空)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">toc:</span><br><span class=\"line\">toc_number:</span><br><span class=\"line\">auto_open:</span><br><span class=\"line\">copyright:</span><br><span class=\"line\">copyright_author:</span><br><span class=\"line\">copyright_author_href:</span><br><span class=\"line\">copyright_url:</span><br><span class=\"line\">copyright_info:</span><br><span class=\"line\">mathjax:</span><br><span class=\"line\">katex:</span><br><span class=\"line\">aplayer:</span><br><span class=\"line\">highlight_shrink:</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">https:&#x2F;&#x2F;demo.jerryc.me&#x2F;posts&#x2F;dc584b87&#x2F;#Front-matter</span><br></pre></td></tr></table></figure>\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"提示块\"><a href=\"#提示块\" class=\"headerlink\" title=\"提示块\"></a>提示块</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% note [class] [no-icon] %&#125;</span><br><span class=\"line\">Any content (support inline tags too.io).</span><br><span class=\"line\">&#123;% endnote %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[class]   : default | primary | success | info | warning | danger.</span><br><span class=\"line\">[no-icon] : Disable icon in note.</span><br><span class=\"line\"></span><br><span class=\"line\">All parameters are optional.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<div class=\"note default flat\"><p>default 提示塊標籤</p>\n</div>\n\n<div class=\"note primary no-icon flat\"><p>primary 提示塊標籤</p>\n</div>\n\n<div class=\"note success flat\"><p>success 提示塊標籤</p>\n</div>\n\n<div class=\"note info flat\"><p>info 提示塊標籤</p>\n</div>\n\n<div class=\"note warning flat\"><p>warning 提示塊標籤</p>\n</div>\n\n<div class=\"note danger flat\"><p>danger 提示塊標籤</p>\n</div>\n\n<h2 id=\"图形\"><a href=\"#图形\" class=\"headerlink\" title=\"图形\"></a>图形</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid %&#125;</span><br><span class=\"line\">pie</span><br><span class=\"line\"><span class=\"code\">    title Key elements in Product X</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Calcium&quot; : 42.96</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Potassium&quot; : 50.05</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Magnesium&quot; : 10.01</span></span><br><span class=\"line\"><span class=\"code\">    &quot;Iron&quot; :  5</span></span><br><span class=\"line\"><span class=\"code\">&#123;% endmermaid %&#125;</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br></pre></td></tr></table></figure>\n<div class=\"mermaid\">pie\n    title Key elements in Product X\n    &quot;Calcium&quot; : 42.96\n    &quot;Potassium&quot; : 50.05\n    &quot;Magnesium&quot; : 10.01\n    &quot;Iron&quot; :  5</div>\n\n\n\n<h2 id=\"tab\"><a href=\"#tab\" class=\"headerlink\" title=\"tab\"></a>tab</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;% tabs test1 %&#125;</span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"strong\">**This is Tab 1.**</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"strong\">**This is Tab 2.**</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- tab --&gt;</span></span></span><br><span class=\"line\"><span class=\"strong\">**This is Tab 3.**</span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"comment\">&lt;!-- endtab --&gt;</span></span></span><br><span class=\"line\">&#123;% endtabs %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<div class=\"tabs\" id=\"test1\"><ul class=\"nav-tabs\"><li class=\"tab active\"><button type=\"button\" data-href=\"#test1-1\">test1 1</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test1-2\">test1 2</button></li><li class=\"tab\"><button type=\"button\" data-href=\"#test1-3\">test1 3</button></li></ul><div class=\"tab-contents\"><div class=\"tab-item-content active\" id=\"test1-1\"><p><strong>This is Tab 1.</strong></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test1-2\"><p><strong>This is Tab 2.</strong></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div><div class=\"tab-item-content\" id=\"test1-3\"><p><strong>This is Tab 3.</strong></p><button type=\"button\" class=\"tab-to-top\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div></div>\n\n\n\n<h2 id=\"btn\"><a href=\"#btn\" class=\"headerlink\" title=\"btn\"></a>btn</h2><a class=\"btn-beautify button--animated [color] [style] [layout] [position] [size]\" href=\"/%5Burl%5D\" \n  title=\"[text]\"><i class=\"[icon] fa-fw\"></i><span>[text]</span></a>\n\n<a class=\"btn-beautify button--animated green larger\" href=\"http://blog.genji.xyz\" \n  title=\"hello\"><i class=\"far fa-hand-point-right fa-fw\"></i><span>hello</span></a>\n\n\n\n\n\n\n\n<h2 id=\"front-matter\"><a href=\"#front-matter\" class=\"headerlink\" title=\"front-matter\"></a>front-matter</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 【必需】頁面標題 </span><br><span class=\"line\">date: 【必需】頁面創建日期 </span><br><span class=\"line\">updated: 【可選】文章更新日期 </span><br><span class=\"line\">tags:  \t【可選】文章標籤 </span><br><span class=\"line\">categories: 【可選】文章分類 数组 [1,2,3]表示1&gt;2&gt;3 子分类</span><br><span class=\"line\">keywords: 【可選】文章關鍵字 </span><br><span class=\"line\">description: 【可選】文章描述</span><br><span class=\"line\">top_img 【可選】文章頂部圖片</span><br><span class=\"line\">comments: \t【可選】顯示文章評論模塊 (默認 true)</span><br><span class=\"line\">cover:  【可選】文章縮略圖 (如果沒有設置 top_img, 文章頁頂部將顯示縮略圖，可設為 false &#x2F; 圖片地址 &#x2F; 留空)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">toc:</span><br><span class=\"line\">toc_number:</span><br><span class=\"line\">auto_open:</span><br><span class=\"line\">copyright:</span><br><span class=\"line\">copyright_author:</span><br><span class=\"line\">copyright_author_href:</span><br><span class=\"line\">copyright_url:</span><br><span class=\"line\">copyright_info:</span><br><span class=\"line\">mathjax:</span><br><span class=\"line\">katex:</span><br><span class=\"line\">aplayer:</span><br><span class=\"line\">highlight_shrink:</span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">https:&#x2F;&#x2F;demo.jerryc.me&#x2F;posts&#x2F;dc584b87&#x2F;#Front-matter</span><br></pre></td></tr></table></figure>\n\n\n\n\n"},{"title":"openWrt SmartDns","date":"2020-09-01T16:00:00.000Z","updated":"2021-03-11T06:25:33.278Z","cover":"https://picgo.genji.xyz/blog/posts/smartdns-banner.png","description":"家里网速没问题500m电信,就是dns有点问题.用这个优选一下","keywords":"openwrt,smartDns","_content":"\n\n\n# SmartDns\n\n{% note info %}\n[SmartDNS github 仓库](https://github.com/pymumu/smartdns)\n\n我用的小米ax3600,好像只支持两个dns服务商,而且返回的ip,有的又是随机选择.  \n\n\n\nSmartDns能从多个上游服务商获取dns结果,并且放回访问速度最快的给客服端.\n\n{% endnote %}\n\n# 配置\n\n## 安装(略过)\n\ngithub仓库说的特别清晰 ,中文!\n\n## 配置\n\n![image-20201010153519938](https://picgo.genji.xyz/blog/posts/image-20201010153519938.png)\n\n \n\n这里需要说的是\n\n![image-20201010153544699](https://picgo.genji.xyz/blog/posts/image-20201010153544699.png)\n\n\n\n首先需要了解下\n\nopenwrt > 网络 > DHCP/DNS  (Dnsmasq)\n\n![image-20201010153727280](/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20201010153727280.png)\n\n\n\n`作为上游 `, 就是自动帮你设置的dns 转发.\n\n`重定向53端口`就是代替Dnsmasq 接管 53 端口\n\n53端口:就是提供dns解析的端口\n\n\n\n建议:使用上游\n\n\n\n--------\n\n## 冲突\n\n如果你 `openwrt` 安装了`openclash`\n\n![image-20201010154125803](https://picgo.genji.xyz/blog/posts/image-20201010154125803.png)\n\n这里有个本地dns劫持 ,如果你开启的话\n\nsmartdns中的设置就会不生效,保存后Dnsmasq仍恢复设置\n\n我自己是直接 `停用`然后 重启设备.\n\n## 添加dns服务器商\n\n[https://dns.ip.cn/   这是一个列出了常用dns 服务商的网站](https://dns.ip.cn/)\n\n我个人的配置\n\n![image-20201010154715193](https://picgo.genji.xyz/blog/posts/image-20201010154715193.png)\n\n注意udp tcp tls.\n\n在右侧的`修改`,你还可以添加分组,区分国内过外.\n\n我自己是没有设置. \n\n## 路由器设置\n\n由于我是旁路由 ,所以需要在主路由(小米ax3600)中设置dns ,指向我的旁路由(openwrt)的IP.\n\n![image-20201010155057835](https://picgo.genji.xyz/blog/posts/image-20201010155057835.png)\n\n## 验证配置正确\n\n正常连接主路由的网络,终端输入: \n\n```bash\n\n❯ nslookup -querytype=ptr smartdns\n\n\nServer:\t\t192.168.3.1\nAddress:\t192.168.3.1#53\n\nNon-authoritative answer:\nsmartdns\tname = OpenWrt.\n\nAuthoritative answers can be found from:\n\n```\n\n有如下显示为正确配置.\n\n若没有`smartdns\tname = OpenWrt.`就是没有配置上\n\n## 测试\n\n```bash\n## 用119.29.29.29 dnsPod服务商 解析www.iqiyi.com\n## 返回来5个ip\n## 电脑会随机选一个来用\n> nslookup www.iqiyi.com 119.29.29.29\n\n\nServer:\t\t119.29.29.29\nAddress:\t119.29.29.29#53\n\nNon-authoritative answer:\nwww.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.82\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.83\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.84\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.100\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.81\n```\n\n用smartdns\n\n```bash\n## 后面走的是我路由器\n❯ nslookup www.iqiyi.com 192.168.3.1\nServer:\t\t192.168.3.1\nAddress:\t192.168.3.1#53\n\nNon-authoritative answer:\nwww.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.100\n\n```\n\n只返回个你最快的..\n\n\n\n这里没有用 我旁路由的ip( 192.168.3.100 )\n\n是因为我在主路由( 192.168.3.100 )设置了dns 指向192.168.3.1 \n\n用谁都一样. \n\n## 尾巴\n\n作用是有的,但是程度有限.\n\n我用他主要是解决有的网站图片打不开,换个dns 就好了的问题.\n\n用它帮我选个好用的ip,省的我重新设置dns.\n\n","source":"_posts/Diy/smartDns.md","raw":"---\ntitle: openWrt SmartDns\ndate: 2020-09-02 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/smartdns-banner.png\ndescription: 家里网速没问题500m电信,就是dns有点问题.用这个优选一下\ntags:  \t[openwrt]\ncategories: diy\nkeywords: \"openwrt,smartDns\"\n---\n\n\n\n# SmartDns\n\n{% note info %}\n[SmartDNS github 仓库](https://github.com/pymumu/smartdns)\n\n我用的小米ax3600,好像只支持两个dns服务商,而且返回的ip,有的又是随机选择.  \n\n\n\nSmartDns能从多个上游服务商获取dns结果,并且放回访问速度最快的给客服端.\n\n{% endnote %}\n\n# 配置\n\n## 安装(略过)\n\ngithub仓库说的特别清晰 ,中文!\n\n## 配置\n\n![image-20201010153519938](https://picgo.genji.xyz/blog/posts/image-20201010153519938.png)\n\n \n\n这里需要说的是\n\n![image-20201010153544699](https://picgo.genji.xyz/blog/posts/image-20201010153544699.png)\n\n\n\n首先需要了解下\n\nopenwrt > 网络 > DHCP/DNS  (Dnsmasq)\n\n![image-20201010153727280](/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20201010153727280.png)\n\n\n\n`作为上游 `, 就是自动帮你设置的dns 转发.\n\n`重定向53端口`就是代替Dnsmasq 接管 53 端口\n\n53端口:就是提供dns解析的端口\n\n\n\n建议:使用上游\n\n\n\n--------\n\n## 冲突\n\n如果你 `openwrt` 安装了`openclash`\n\n![image-20201010154125803](https://picgo.genji.xyz/blog/posts/image-20201010154125803.png)\n\n这里有个本地dns劫持 ,如果你开启的话\n\nsmartdns中的设置就会不生效,保存后Dnsmasq仍恢复设置\n\n我自己是直接 `停用`然后 重启设备.\n\n## 添加dns服务器商\n\n[https://dns.ip.cn/   这是一个列出了常用dns 服务商的网站](https://dns.ip.cn/)\n\n我个人的配置\n\n![image-20201010154715193](https://picgo.genji.xyz/blog/posts/image-20201010154715193.png)\n\n注意udp tcp tls.\n\n在右侧的`修改`,你还可以添加分组,区分国内过外.\n\n我自己是没有设置. \n\n## 路由器设置\n\n由于我是旁路由 ,所以需要在主路由(小米ax3600)中设置dns ,指向我的旁路由(openwrt)的IP.\n\n![image-20201010155057835](https://picgo.genji.xyz/blog/posts/image-20201010155057835.png)\n\n## 验证配置正确\n\n正常连接主路由的网络,终端输入: \n\n```bash\n\n❯ nslookup -querytype=ptr smartdns\n\n\nServer:\t\t192.168.3.1\nAddress:\t192.168.3.1#53\n\nNon-authoritative answer:\nsmartdns\tname = OpenWrt.\n\nAuthoritative answers can be found from:\n\n```\n\n有如下显示为正确配置.\n\n若没有`smartdns\tname = OpenWrt.`就是没有配置上\n\n## 测试\n\n```bash\n## 用119.29.29.29 dnsPod服务商 解析www.iqiyi.com\n## 返回来5个ip\n## 电脑会随机选一个来用\n> nslookup www.iqiyi.com 119.29.29.29\n\n\nServer:\t\t119.29.29.29\nAddress:\t119.29.29.29#53\n\nNon-authoritative answer:\nwww.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.82\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.83\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.84\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.100\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.81\n```\n\n用smartdns\n\n```bash\n## 后面走的是我路由器\n❯ nslookup www.iqiyi.com 192.168.3.1\nServer:\t\t192.168.3.1\nAddress:\t192.168.3.1#53\n\nNon-authoritative answer:\nwww.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.\nName:\tipv6-static.dns.iqiyi.com\nAddress: 121.9.221.100\n\n```\n\n只返回个你最快的..\n\n\n\n这里没有用 我旁路由的ip( 192.168.3.100 )\n\n是因为我在主路由( 192.168.3.100 )设置了dns 指向192.168.3.1 \n\n用谁都一样. \n\n## 尾巴\n\n作用是有的,但是程度有限.\n\n我用他主要是解决有的网站图片打不开,换个dns 就好了的问题.\n\n用它帮我选个好用的ip,省的我重新设置dns.\n\n","slug":"Diy/smartDns","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2twq000gdmled0qi29mx","content":"<h1 id=\"SmartDns\"><a href=\"#SmartDns\" class=\"headerlink\" title=\"SmartDns\"></a>SmartDns</h1><div class=\"note info flat\"><p><a href=\"https://github.com/pymumu/smartdns\">SmartDNS github 仓库</a></p>\n<p>我用的小米ax3600,好像只支持两个dns服务商,而且返回的ip,有的又是随机选择.  </p>\n<p>SmartDns能从多个上游服务商获取dns结果,并且放回访问速度最快的给客服端.</p>\n</div>\n\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"安装-略过\"><a href=\"#安装-略过\" class=\"headerlink\" title=\"安装(略过)\"></a>安装(略过)</h2><p>github仓库说的特别清晰 ,中文!</p>\n<h2 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010153519938.png\" alt=\"image-20201010153519938\"></p>\n<p>这里需要说的是</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010153544699.png\" alt=\"image-20201010153544699\"></p>\n<p>首先需要了解下</p>\n<p>openwrt &gt; 网络 &gt; DHCP/DNS  (Dnsmasq)</p>\n<p><img src=\"/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20201010153727280.png\" alt=\"image-20201010153727280\"></p>\n<p><code>作为上游 </code>, 就是自动帮你设置的dns 转发.</p>\n<p><code>重定向53端口</code>就是代替Dnsmasq 接管 53 端口</p>\n<p>53端口:就是提供dns解析的端口</p>\n<p>建议:使用上游</p>\n<hr>\n<h2 id=\"冲突\"><a href=\"#冲突\" class=\"headerlink\" title=\"冲突\"></a>冲突</h2><p>如果你 <code>openwrt</code> 安装了<code>openclash</code></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010154125803.png\" alt=\"image-20201010154125803\"></p>\n<p>这里有个本地dns劫持 ,如果你开启的话</p>\n<p>smartdns中的设置就会不生效,保存后Dnsmasq仍恢复设置</p>\n<p>我自己是直接 <code>停用</code>然后 重启设备.</p>\n<h2 id=\"添加dns服务器商\"><a href=\"#添加dns服务器商\" class=\"headerlink\" title=\"添加dns服务器商\"></a>添加dns服务器商</h2><p><a href=\"https://dns.ip.cn/\">https://dns.ip.cn/   这是一个列出了常用dns 服务商的网站</a></p>\n<p>我个人的配置</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010154715193.png\" alt=\"image-20201010154715193\"></p>\n<p>注意udp tcp tls.</p>\n<p>在右侧的<code>修改</code>,你还可以添加分组,区分国内过外.</p>\n<p>我自己是没有设置. </p>\n<h2 id=\"路由器设置\"><a href=\"#路由器设置\" class=\"headerlink\" title=\"路由器设置\"></a>路由器设置</h2><p>由于我是旁路由 ,所以需要在主路由(小米ax3600)中设置dns ,指向我的旁路由(openwrt)的IP.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010155057835.png\" alt=\"image-20201010155057835\"></p>\n<h2 id=\"验证配置正确\"><a href=\"#验证配置正确\" class=\"headerlink\" title=\"验证配置正确\"></a>验证配置正确</h2><p>正常连接主路由的网络,终端输入: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">❯ nslookup -querytype=ptr smartdns</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server:\t\t192.168.3.1</span><br><span class=\"line\">Address:\t192.168.3.1<span class=\"comment\">#53</span></span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">smartdns\tname = OpenWrt.</span><br><span class=\"line\"></span><br><span class=\"line\">Authoritative answers can be found from:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>有如下显示为正确配置.</p>\n<p>若没有<code>smartdns    name = OpenWrt.</code>就是没有配置上</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 用119.29.29.29 dnsPod服务商 解析www.iqiyi.com</span></span><br><span class=\"line\"><span class=\"comment\">## 返回来5个ip</span></span><br><span class=\"line\"><span class=\"comment\">## 电脑会随机选一个来用</span></span><br><span class=\"line\">&gt; nslookup www.iqiyi.com 119.29.29.29</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server:\t\t119.29.29.29</span><br><span class=\"line\">Address:\t119.29.29.29<span class=\"comment\">#53</span></span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">www.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.82</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.83</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.84</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.100</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.81</span><br></pre></td></tr></table></figure>\n\n<p>用smartdns</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 后面走的是我路由器</span></span><br><span class=\"line\">❯ nslookup www.iqiyi.com 192.168.3.1</span><br><span class=\"line\">Server:\t\t192.168.3.1</span><br><span class=\"line\">Address:\t192.168.3.1<span class=\"comment\">#53</span></span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">www.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.100</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>只返回个你最快的..</p>\n<p>这里没有用 我旁路由的ip( 192.168.3.100 )</p>\n<p>是因为我在主路由( 192.168.3.100 )设置了dns 指向192.168.3.1 </p>\n<p>用谁都一样. </p>\n<h2 id=\"尾巴\"><a href=\"#尾巴\" class=\"headerlink\" title=\"尾巴\"></a>尾巴</h2><p>作用是有的,但是程度有限.</p>\n<p>我用他主要是解决有的网站图片打不开,换个dns 就好了的问题.</p>\n<p>用它帮我选个好用的ip,省的我重新设置dns.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SmartDns\"><a href=\"#SmartDns\" class=\"headerlink\" title=\"SmartDns\"></a>SmartDns</h1><div class=\"note info flat\"><p><a href=\"https://github.com/pymumu/smartdns\">SmartDNS github 仓库</a></p>\n<p>我用的小米ax3600,好像只支持两个dns服务商,而且返回的ip,有的又是随机选择.  </p>\n<p>SmartDns能从多个上游服务商获取dns结果,并且放回访问速度最快的给客服端.</p>\n</div>\n\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"安装-略过\"><a href=\"#安装-略过\" class=\"headerlink\" title=\"安装(略过)\"></a>安装(略过)</h2><p>github仓库说的特别清晰 ,中文!</p>\n<h2 id=\"配置-1\"><a href=\"#配置-1\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010153519938.png\" alt=\"image-20201010153519938\"></p>\n<p>这里需要说的是</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010153544699.png\" alt=\"image-20201010153544699\"></p>\n<p>首先需要了解下</p>\n<p>openwrt &gt; 网络 &gt; DHCP/DNS  (Dnsmasq)</p>\n<p><img src=\"/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20201010153727280.png\" alt=\"image-20201010153727280\"></p>\n<p><code>作为上游 </code>, 就是自动帮你设置的dns 转发.</p>\n<p><code>重定向53端口</code>就是代替Dnsmasq 接管 53 端口</p>\n<p>53端口:就是提供dns解析的端口</p>\n<p>建议:使用上游</p>\n<hr>\n<h2 id=\"冲突\"><a href=\"#冲突\" class=\"headerlink\" title=\"冲突\"></a>冲突</h2><p>如果你 <code>openwrt</code> 安装了<code>openclash</code></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010154125803.png\" alt=\"image-20201010154125803\"></p>\n<p>这里有个本地dns劫持 ,如果你开启的话</p>\n<p>smartdns中的设置就会不生效,保存后Dnsmasq仍恢复设置</p>\n<p>我自己是直接 <code>停用</code>然后 重启设备.</p>\n<h2 id=\"添加dns服务器商\"><a href=\"#添加dns服务器商\" class=\"headerlink\" title=\"添加dns服务器商\"></a>添加dns服务器商</h2><p><a href=\"https://dns.ip.cn/\">https://dns.ip.cn/   这是一个列出了常用dns 服务商的网站</a></p>\n<p>我个人的配置</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010154715193.png\" alt=\"image-20201010154715193\"></p>\n<p>注意udp tcp tls.</p>\n<p>在右侧的<code>修改</code>,你还可以添加分组,区分国内过外.</p>\n<p>我自己是没有设置. </p>\n<h2 id=\"路由器设置\"><a href=\"#路由器设置\" class=\"headerlink\" title=\"路由器设置\"></a>路由器设置</h2><p>由于我是旁路由 ,所以需要在主路由(小米ax3600)中设置dns ,指向我的旁路由(openwrt)的IP.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20201010155057835.png\" alt=\"image-20201010155057835\"></p>\n<h2 id=\"验证配置正确\"><a href=\"#验证配置正确\" class=\"headerlink\" title=\"验证配置正确\"></a>验证配置正确</h2><p>正常连接主路由的网络,终端输入: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">❯ nslookup -querytype=ptr smartdns</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server:\t\t192.168.3.1</span><br><span class=\"line\">Address:\t192.168.3.1<span class=\"comment\">#53</span></span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">smartdns\tname = OpenWrt.</span><br><span class=\"line\"></span><br><span class=\"line\">Authoritative answers can be found from:</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>有如下显示为正确配置.</p>\n<p>若没有<code>smartdns    name = OpenWrt.</code>就是没有配置上</p>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 用119.29.29.29 dnsPod服务商 解析www.iqiyi.com</span></span><br><span class=\"line\"><span class=\"comment\">## 返回来5个ip</span></span><br><span class=\"line\"><span class=\"comment\">## 电脑会随机选一个来用</span></span><br><span class=\"line\">&gt; nslookup www.iqiyi.com 119.29.29.29</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Server:\t\t119.29.29.29</span><br><span class=\"line\">Address:\t119.29.29.29<span class=\"comment\">#53</span></span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">www.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.82</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.83</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.84</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.100</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.81</span><br></pre></td></tr></table></figure>\n\n<p>用smartdns</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 后面走的是我路由器</span></span><br><span class=\"line\">❯ nslookup www.iqiyi.com 192.168.3.1</span><br><span class=\"line\">Server:\t\t192.168.3.1</span><br><span class=\"line\">Address:\t192.168.3.1<span class=\"comment\">#53</span></span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">www.iqiyi.com\tcanonical name = ipv6-static.dns.iqiyi.com.</span><br><span class=\"line\">Name:\tipv6-static.dns.iqiyi.com</span><br><span class=\"line\">Address: 121.9.221.100</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>只返回个你最快的..</p>\n<p>这里没有用 我旁路由的ip( 192.168.3.100 )</p>\n<p>是因为我在主路由( 192.168.3.100 )设置了dns 指向192.168.3.1 </p>\n<p>用谁都一样. </p>\n<h2 id=\"尾巴\"><a href=\"#尾巴\" class=\"headerlink\" title=\"尾巴\"></a>尾巴</h2><p>作用是有的,但是程度有限.</p>\n<p>我用他主要是解决有的网站图片打不开,换个dns 就好了的问题.</p>\n<p>用它帮我选个好用的ip,省的我重新设置dns.</p>\n"},{"title":"光猫桥接","description":"路由器的和光猫的设置","keywords":"光猫,路由器","date":"2020-01-06T16:00:00.000Z","cover":"https://picgo.genji.xyz/blog/posts/luyouqi.jpeg","_content":"\n## 光猫修改为桥接模式\n\n{% blockquote %}\n `光猫` 别让他干 `路由器` `交换机`的活. \n 各种智能家居设备加起来一共有 15 个.再加上4-5个朋友来!`断连`,`卡顿`不可避免\n{% endblockquote %}\n\n### 1. 找电信小哥给你改!\n\n他在远端 用手机就直接改了!\n虽然很方便,之前用了半年多也没有啥问题,但是就觉得不可控.\n\n### 2.登录光猫管理员账号密码\n\n普通的账号在光猫后面写着.\n只能修改部分功能: 一些wifi设置(不同光猫功能不一样) DHCP 啥的比较鸡肋\n\n\n```\n#管理员账号 \ntelecomadmin\n#密码\nnE7jA%5m\n\n至少深圳电信 好像都是这个\n```\n\n\n{% blockquote %}\n**注意备份或者截图**\n**也要注意光猫的连线**\n{% endblockquote %}\n\n改桥接\n![image-20200918013701149](https://picgo.genji.xyz/blog/posts/image-20200918013701149.png)\n\n\n\n## 路由器设置 PPPoE 上网\n\n大多数路由器一开始都是 DHCP 该成PPPoE然后填好 宽带的`账号密码`就行了\n\n![image-20200918014414681](https://picgo.genji.xyz/blog/posts/image-20200918014414681.png)\n\n自动配置和手动配置  都行看你用到什么功能\n\n## 端口转发\n\n{% blockquote %}\n `端口转发`我觉得有点像 nginx 的反向代理,\n\n`端口转发`可以把内网ip的某个端口映射到 公网ip上的某个端口\n\n{% endblockquote %}\n\n![image-20200918014747129](https://picgo.genji.xyz/blog/posts/image-20200918014747129.png)\n\n\n\n这样我就能通过公网ip的80端口直接访问 内网192.168.3.100:10080\n\n## ddns\n\n公网ip有`动态`和`静态`的 ,一般家里申请的 都是`动态`的\n\n`ddns`适用于有公网ip 的\n\n更多详情在我的另一篇记录里有(主页搜索ddns)\n\n\n## DHCP静态绑定IP\n\n`DHCP` 没啥说的就是 自动分发IP子网掩码 设备连接时候不用手动填写ip了就\n\n`DHCP静态绑定IP`就是通过mac码绑定你的ip 使你的设备有固定的内网ip.\n\n找到你的要绑定的设备, 然后自己填个ip 即可\n\n\n{% blockquote %}\n举个例子 我的cdn设置了白名单 192.168.3.xxx genji.xyz\n这样你在本地预览时候也能访问图片!\n{% endblockquote %}\n\n\n\n## vpn\n\n{% blockquote %}\n路由器自带的vpn都是垃圾 \n{% endblockquote %}\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Diy/路由器.md","raw":"---\ntitle: 光猫桥接\ndescription: 路由器的和光猫的设置\nkeywords: \"光猫,路由器\"\ndate: 2020-01-07 00:00:00\ncover: https://picgo.genji.xyz/blog/posts/luyouqi.jpeg\ntags: [光猫,路由器]\ncategories: diy\n---\n\n## 光猫修改为桥接模式\n\n{% blockquote %}\n `光猫` 别让他干 `路由器` `交换机`的活. \n 各种智能家居设备加起来一共有 15 个.再加上4-5个朋友来!`断连`,`卡顿`不可避免\n{% endblockquote %}\n\n### 1. 找电信小哥给你改!\n\n他在远端 用手机就直接改了!\n虽然很方便,之前用了半年多也没有啥问题,但是就觉得不可控.\n\n### 2.登录光猫管理员账号密码\n\n普通的账号在光猫后面写着.\n只能修改部分功能: 一些wifi设置(不同光猫功能不一样) DHCP 啥的比较鸡肋\n\n\n```\n#管理员账号 \ntelecomadmin\n#密码\nnE7jA%5m\n\n至少深圳电信 好像都是这个\n```\n\n\n{% blockquote %}\n**注意备份或者截图**\n**也要注意光猫的连线**\n{% endblockquote %}\n\n改桥接\n![image-20200918013701149](https://picgo.genji.xyz/blog/posts/image-20200918013701149.png)\n\n\n\n## 路由器设置 PPPoE 上网\n\n大多数路由器一开始都是 DHCP 该成PPPoE然后填好 宽带的`账号密码`就行了\n\n![image-20200918014414681](https://picgo.genji.xyz/blog/posts/image-20200918014414681.png)\n\n自动配置和手动配置  都行看你用到什么功能\n\n## 端口转发\n\n{% blockquote %}\n `端口转发`我觉得有点像 nginx 的反向代理,\n\n`端口转发`可以把内网ip的某个端口映射到 公网ip上的某个端口\n\n{% endblockquote %}\n\n![image-20200918014747129](https://picgo.genji.xyz/blog/posts/image-20200918014747129.png)\n\n\n\n这样我就能通过公网ip的80端口直接访问 内网192.168.3.100:10080\n\n## ddns\n\n公网ip有`动态`和`静态`的 ,一般家里申请的 都是`动态`的\n\n`ddns`适用于有公网ip 的\n\n更多详情在我的另一篇记录里有(主页搜索ddns)\n\n\n## DHCP静态绑定IP\n\n`DHCP` 没啥说的就是 自动分发IP子网掩码 设备连接时候不用手动填写ip了就\n\n`DHCP静态绑定IP`就是通过mac码绑定你的ip 使你的设备有固定的内网ip.\n\n找到你的要绑定的设备, 然后自己填个ip 即可\n\n\n{% blockquote %}\n举个例子 我的cdn设置了白名单 192.168.3.xxx genji.xyz\n这样你在本地预览时候也能访问图片!\n{% endblockquote %}\n\n\n\n## vpn\n\n{% blockquote %}\n路由器自带的vpn都是垃圾 \n{% endblockquote %}\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Diy/路由器","published":1,"updated":"2021-03-11T06:26:10.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tws000kdmleh8exb3os","content":"<h2 id=\"光猫修改为桥接模式\"><a href=\"#光猫修改为桥接模式\" class=\"headerlink\" title=\"光猫修改为桥接模式\"></a>光猫修改为桥接模式</h2><blockquote><p><code>光猫</code> 别让他干 <code>路由器</code> <code>交换机</code>的活.<br>各种智能家居设备加起来一共有 15 个.再加上4-5个朋友来!<code>断连</code>,<code>卡顿</code>不可避免</p>\n</blockquote>\n\n<h3 id=\"1-找电信小哥给你改\"><a href=\"#1-找电信小哥给你改\" class=\"headerlink\" title=\"1. 找电信小哥给你改!\"></a>1. 找电信小哥给你改!</h3><p>他在远端 用手机就直接改了!<br>虽然很方便,之前用了半年多也没有啥问题,但是就觉得不可控.</p>\n<h3 id=\"2-登录光猫管理员账号密码\"><a href=\"#2-登录光猫管理员账号密码\" class=\"headerlink\" title=\"2.登录光猫管理员账号密码\"></a>2.登录光猫管理员账号密码</h3><p>普通的账号在光猫后面写着.<br>只能修改部分功能: 一些wifi设置(不同光猫功能不一样) DHCP 啥的比较鸡肋</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#管理员账号 </span><br><span class=\"line\">telecomadmin</span><br><span class=\"line\">#密码</span><br><span class=\"line\">nE7jA%5m</span><br><span class=\"line\"></span><br><span class=\"line\">至少深圳电信 好像都是这个</span><br></pre></td></tr></table></figure>\n\n\n<blockquote><p><strong>注意备份或者截图</strong><br><strong>也要注意光猫的连线</strong></p>\n</blockquote>\n\n<p>改桥接<br><img src=\"https://picgo.genji.xyz/blog/posts/image-20200918013701149.png\" alt=\"image-20200918013701149\"></p>\n<h2 id=\"路由器设置-PPPoE-上网\"><a href=\"#路由器设置-PPPoE-上网\" class=\"headerlink\" title=\"路由器设置 PPPoE 上网\"></a>路由器设置 PPPoE 上网</h2><p>大多数路由器一开始都是 DHCP 该成PPPoE然后填好 宽带的<code>账号密码</code>就行了</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200918014414681.png\" alt=\"image-20200918014414681\"></p>\n<p>自动配置和手动配置  都行看你用到什么功能</p>\n<h2 id=\"端口转发\"><a href=\"#端口转发\" class=\"headerlink\" title=\"端口转发\"></a>端口转发</h2><blockquote><p> <code>端口转发</code>我觉得有点像 nginx 的反向代理,</p>\n<p><code>端口转发</code>可以把内网ip的某个端口映射到 公网ip上的某个端口</p>\n</blockquote>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200918014747129.png\" alt=\"image-20200918014747129\"></p>\n<p>这样我就能通过公网ip的80端口直接访问 内网192.168.3.100:10080</p>\n<h2 id=\"ddns\"><a href=\"#ddns\" class=\"headerlink\" title=\"ddns\"></a>ddns</h2><p>公网ip有<code>动态</code>和<code>静态</code>的 ,一般家里申请的 都是<code>动态</code>的</p>\n<p><code>ddns</code>适用于有公网ip 的</p>\n<p>更多详情在我的另一篇记录里有(主页搜索ddns)</p>\n<h2 id=\"DHCP静态绑定IP\"><a href=\"#DHCP静态绑定IP\" class=\"headerlink\" title=\"DHCP静态绑定IP\"></a>DHCP静态绑定IP</h2><p><code>DHCP</code> 没啥说的就是 自动分发IP子网掩码 设备连接时候不用手动填写ip了就</p>\n<p><code>DHCP静态绑定IP</code>就是通过mac码绑定你的ip 使你的设备有固定的内网ip.</p>\n<p>找到你的要绑定的设备, 然后自己填个ip 即可</p>\n<blockquote><p>举个例子 我的cdn设置了白名单 192.168.3.xxx genji.xyz<br>这样你在本地预览时候也能访问图片!</p>\n</blockquote>\n\n\n\n<h2 id=\"vpn\"><a href=\"#vpn\" class=\"headerlink\" title=\"vpn\"></a>vpn</h2><blockquote><p>路由器自带的vpn都是垃圾 </p>\n</blockquote>\n\n\n\n\n\n\n\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"光猫修改为桥接模式\"><a href=\"#光猫修改为桥接模式\" class=\"headerlink\" title=\"光猫修改为桥接模式\"></a>光猫修改为桥接模式</h2><blockquote><p><code>光猫</code> 别让他干 <code>路由器</code> <code>交换机</code>的活.<br>各种智能家居设备加起来一共有 15 个.再加上4-5个朋友来!<code>断连</code>,<code>卡顿</code>不可避免</p>\n</blockquote>\n\n<h3 id=\"1-找电信小哥给你改\"><a href=\"#1-找电信小哥给你改\" class=\"headerlink\" title=\"1. 找电信小哥给你改!\"></a>1. 找电信小哥给你改!</h3><p>他在远端 用手机就直接改了!<br>虽然很方便,之前用了半年多也没有啥问题,但是就觉得不可控.</p>\n<h3 id=\"2-登录光猫管理员账号密码\"><a href=\"#2-登录光猫管理员账号密码\" class=\"headerlink\" title=\"2.登录光猫管理员账号密码\"></a>2.登录光猫管理员账号密码</h3><p>普通的账号在光猫后面写着.<br>只能修改部分功能: 一些wifi设置(不同光猫功能不一样) DHCP 啥的比较鸡肋</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#管理员账号 </span><br><span class=\"line\">telecomadmin</span><br><span class=\"line\">#密码</span><br><span class=\"line\">nE7jA%5m</span><br><span class=\"line\"></span><br><span class=\"line\">至少深圳电信 好像都是这个</span><br></pre></td></tr></table></figure>\n\n\n<blockquote><p><strong>注意备份或者截图</strong><br><strong>也要注意光猫的连线</strong></p>\n</blockquote>\n\n<p>改桥接<br><img src=\"https://picgo.genji.xyz/blog/posts/image-20200918013701149.png\" alt=\"image-20200918013701149\"></p>\n<h2 id=\"路由器设置-PPPoE-上网\"><a href=\"#路由器设置-PPPoE-上网\" class=\"headerlink\" title=\"路由器设置 PPPoE 上网\"></a>路由器设置 PPPoE 上网</h2><p>大多数路由器一开始都是 DHCP 该成PPPoE然后填好 宽带的<code>账号密码</code>就行了</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200918014414681.png\" alt=\"image-20200918014414681\"></p>\n<p>自动配置和手动配置  都行看你用到什么功能</p>\n<h2 id=\"端口转发\"><a href=\"#端口转发\" class=\"headerlink\" title=\"端口转发\"></a>端口转发</h2><blockquote><p> <code>端口转发</code>我觉得有点像 nginx 的反向代理,</p>\n<p><code>端口转发</code>可以把内网ip的某个端口映射到 公网ip上的某个端口</p>\n</blockquote>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200918014747129.png\" alt=\"image-20200918014747129\"></p>\n<p>这样我就能通过公网ip的80端口直接访问 内网192.168.3.100:10080</p>\n<h2 id=\"ddns\"><a href=\"#ddns\" class=\"headerlink\" title=\"ddns\"></a>ddns</h2><p>公网ip有<code>动态</code>和<code>静态</code>的 ,一般家里申请的 都是<code>动态</code>的</p>\n<p><code>ddns</code>适用于有公网ip 的</p>\n<p>更多详情在我的另一篇记录里有(主页搜索ddns)</p>\n<h2 id=\"DHCP静态绑定IP\"><a href=\"#DHCP静态绑定IP\" class=\"headerlink\" title=\"DHCP静态绑定IP\"></a>DHCP静态绑定IP</h2><p><code>DHCP</code> 没啥说的就是 自动分发IP子网掩码 设备连接时候不用手动填写ip了就</p>\n<p><code>DHCP静态绑定IP</code>就是通过mac码绑定你的ip 使你的设备有固定的内网ip.</p>\n<p>找到你的要绑定的设备, 然后自己填个ip 即可</p>\n<blockquote><p>举个例子 我的cdn设置了白名单 192.168.3.xxx genji.xyz<br>这样你在本地预览时候也能访问图片!</p>\n</blockquote>\n\n\n\n<h2 id=\"vpn\"><a href=\"#vpn\" class=\"headerlink\" title=\"vpn\"></a>vpn</h2><blockquote><p>路由器自带的vpn都是垃圾 </p>\n</blockquote>\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"title":"git 终端 设置代理","date":"2020-01-02T16:00:00.000Z","updated":"2021-03-11T06:29:09.997Z","cover":"https://picgo.genji.xyz/blog/posts/Xnip2020-09-19_14-13-43.png","keywords":["git","proxy","shell"],"description":"git/终端/设置代理, npm,homebrew,git不在龟速","_content":"\n\n\n\n更新: 发现了个更便捷的的,更灵活方便\n\n\nclash 复制终端代理命令\n\n![](https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-35-58%401x.png)\n\n然后终端复制 => 回车 => git / brew 等 超级快\n\n-----\n\n\n{% note info %}\n\n所有的前提你能 文明富强上网  \n\n端口看你们代理怎么设置的 常见的1080 1086 7890\n\n我用的`clash` 所以默认的是7890,  而且是混合的(http socks5都为7890)\n\n{% endnote %}\n\n# git 设置代理\n\n\n\n## http / https\n\n```git\n//全局 \n\ngit config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy https://127.0.0.1:7890\n\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n\n//只为 github \ngit config --global http.https://github.com.proxy https://127.0.0.1:7890\ngit config --global https.https://github.com.proxy https://127.0.0.1:7890\n\n\n\n```\n\n\n\n## socks5\n\n```bash\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:7890\ngit config --global https.https://github.com.proxy socks5://127.0.0.1:7890\n\n```\n\n\n\n## ssh\n\n`~/.ssh/config`\n\n```\n# 必须是 github.com\nHost github.com\n   HostName github.com\n   User git\n   # 走 HTTP 代理\n   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=8080\n   # 走 socks5 代理（如 Shadowsocks）\n   # ProxyCommand nc -v -x 127.0.0.1:1080 %h %p\n\n```\n\n\n\n\n\n-----\n\n\n\n\n\n# 终端设置代理\n\ngit clone  确实很快了\n\n但是npm,homebrew呢\n\nNpm   你可以用 nrm 切换taobao源,但是有的时候并不是最新的会报错或者未知bug\n\nhomebrew 就更慢了 切换中科/清华源  要改好多设置,而且有的软件还没有,不太好用.\n\n所以这时候要用 这个方法了\n\n##bash\n\n`~/.bash_profile`文件添加\n\n```bash\nfunction proxy_on(){\n\texport http_proxy=socks5://127.0.0.1:7890\n\texport https_proxy=socks5://127.0.0.1:7890\n\texport all_proxy=socks5://127.0.0.1:7890\n\tcurl cip.cc \n\techo -e '****** 当前终端 已开启代理 ******'\n}\n\nfunction proxy_off(){\n        unset http_proxy\n        unset https_proxy\n        unset all_proxy\n\t\tcurl cip.cc\n        echo -e '****** 当前终端 已关闭代理 ******'\n}\n\n```\n\n\n\n在终端输出\n\n```bash\nsource ~/.bash_profile\n\nproxy_on    //打开\n\nproxy_off //关闭\n\n\n```\n\n## zsh\n\n修改`~/.zshrc` \n\n```zsh\nalias proxyON=\"\n\texport http_proxy=socks5://127.0.0.1:7890\n\texport https_proxy=socks5://127.0.0.1:7890\n\texport all_proxy=socks5://127.0.0.1:7890\n\tcurl cip.cc \n\techo -e '****** 当前终端 已开启代理 ******'\n\"\n\nalias proxyOFF=\"\n\t    unset http_proxy\n        unset https_proxy\n        unset all_proxy\n\t\tcurl cip.cc\n        echo -e '****** 当前终端 已关闭代理 ******'\n\"\n```\n\n我一般是用zsh 而且是默认的 所有后面就省掉了`source ~/.bash_profile` \n\n直接终端 `proxyON` /`proxyOFF`搞起\n\n\n\n效果\n\n```zsh\n❯ proxyON\nIP      : 58.153.107.xxx\n地址    : 中国  香港  pccw.com\n\n数据二  : 香港 | 电讯盈科有限公司\n\n数据三  : 中国香港 | 电讯盈科\n\nURL     : http://www.cip.cc/58.153.107.120\n\n****** 当前终端 已开启代理 ******\n❯ proxyOFF\nIP      : xxx.xxx.87.203\n地址    : 中国  广东  深圳\n运营商  : 电信\n\n数据二  : 广东省深圳市 | 电信\n\n数据三  : 中国广东深圳 | 电信\n\nURL     : http://www.cip.cc/14.155.87.203\n****** 当前终端 已关闭代理 ******\n```\n\n\n\n\n\n##  Alfred 执行\n\n\n\n![image-20200919154645223](https://picgo.genji.xyz/blog/posts/image-20200919154645223.png)\n\n在alfre workflow中添加即可\n\n\n\n![image-20200930144414936](https://picgo.genji.xyz/blog/posts/image-20200930144414936.png)","source":"_posts/Mark/终端代理.md","raw":"---\ntitle: git 终端 设置代理 \ndate: 2020-01-03 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/Xnip2020-09-19_14-13-43.png\ntags:  \t[git,proxy,终端]\ncategories: [mark,proxy]\nkeywords: [git,proxy,shell]\ndescription: git/终端/设置代理, npm,homebrew,git不在龟速\n---\n\n\n\n\n更新: 发现了个更便捷的的,更灵活方便\n\n\nclash 复制终端代理命令\n\n![](https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-35-58%401x.png)\n\n然后终端复制 => 回车 => git / brew 等 超级快\n\n-----\n\n\n{% note info %}\n\n所有的前提你能 文明富强上网  \n\n端口看你们代理怎么设置的 常见的1080 1086 7890\n\n我用的`clash` 所以默认的是7890,  而且是混合的(http socks5都为7890)\n\n{% endnote %}\n\n# git 设置代理\n\n\n\n## http / https\n\n```git\n//全局 \n\ngit config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy https://127.0.0.1:7890\n\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n\n//只为 github \ngit config --global http.https://github.com.proxy https://127.0.0.1:7890\ngit config --global https.https://github.com.proxy https://127.0.0.1:7890\n\n\n\n```\n\n\n\n## socks5\n\n```bash\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:7890\ngit config --global https.https://github.com.proxy socks5://127.0.0.1:7890\n\n```\n\n\n\n## ssh\n\n`~/.ssh/config`\n\n```\n# 必须是 github.com\nHost github.com\n   HostName github.com\n   User git\n   # 走 HTTP 代理\n   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=8080\n   # 走 socks5 代理（如 Shadowsocks）\n   # ProxyCommand nc -v -x 127.0.0.1:1080 %h %p\n\n```\n\n\n\n\n\n-----\n\n\n\n\n\n# 终端设置代理\n\ngit clone  确实很快了\n\n但是npm,homebrew呢\n\nNpm   你可以用 nrm 切换taobao源,但是有的时候并不是最新的会报错或者未知bug\n\nhomebrew 就更慢了 切换中科/清华源  要改好多设置,而且有的软件还没有,不太好用.\n\n所以这时候要用 这个方法了\n\n##bash\n\n`~/.bash_profile`文件添加\n\n```bash\nfunction proxy_on(){\n\texport http_proxy=socks5://127.0.0.1:7890\n\texport https_proxy=socks5://127.0.0.1:7890\n\texport all_proxy=socks5://127.0.0.1:7890\n\tcurl cip.cc \n\techo -e '****** 当前终端 已开启代理 ******'\n}\n\nfunction proxy_off(){\n        unset http_proxy\n        unset https_proxy\n        unset all_proxy\n\t\tcurl cip.cc\n        echo -e '****** 当前终端 已关闭代理 ******'\n}\n\n```\n\n\n\n在终端输出\n\n```bash\nsource ~/.bash_profile\n\nproxy_on    //打开\n\nproxy_off //关闭\n\n\n```\n\n## zsh\n\n修改`~/.zshrc` \n\n```zsh\nalias proxyON=\"\n\texport http_proxy=socks5://127.0.0.1:7890\n\texport https_proxy=socks5://127.0.0.1:7890\n\texport all_proxy=socks5://127.0.0.1:7890\n\tcurl cip.cc \n\techo -e '****** 当前终端 已开启代理 ******'\n\"\n\nalias proxyOFF=\"\n\t    unset http_proxy\n        unset https_proxy\n        unset all_proxy\n\t\tcurl cip.cc\n        echo -e '****** 当前终端 已关闭代理 ******'\n\"\n```\n\n我一般是用zsh 而且是默认的 所有后面就省掉了`source ~/.bash_profile` \n\n直接终端 `proxyON` /`proxyOFF`搞起\n\n\n\n效果\n\n```zsh\n❯ proxyON\nIP      : 58.153.107.xxx\n地址    : 中国  香港  pccw.com\n\n数据二  : 香港 | 电讯盈科有限公司\n\n数据三  : 中国香港 | 电讯盈科\n\nURL     : http://www.cip.cc/58.153.107.120\n\n****** 当前终端 已开启代理 ******\n❯ proxyOFF\nIP      : xxx.xxx.87.203\n地址    : 中国  广东  深圳\n运营商  : 电信\n\n数据二  : 广东省深圳市 | 电信\n\n数据三  : 中国广东深圳 | 电信\n\nURL     : http://www.cip.cc/14.155.87.203\n****** 当前终端 已关闭代理 ******\n```\n\n\n\n\n\n##  Alfred 执行\n\n\n\n![image-20200919154645223](https://picgo.genji.xyz/blog/posts/image-20200919154645223.png)\n\n在alfre workflow中添加即可\n\n\n\n![image-20200930144414936](https://picgo.genji.xyz/blog/posts/image-20200930144414936.png)","slug":"Mark/终端代理","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2twu000pdmleama727d2","content":"<p>更新: 发现了个更便捷的的,更灵活方便</p>\n<p>clash 复制终端代理命令</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-35-58%401x.png\"></p>\n<p>然后终端复制 =&gt; 回车 =&gt; git / brew 等 超级快</p>\n<hr>\n<div class=\"note info flat\"><p>所有的前提你能 文明富强上网  </p>\n<p>端口看你们代理怎么设置的 常见的1080 1086 7890</p>\n<p>我用的<code>clash</code> 所以默认的是7890,  而且是混合的(http socks5都为7890)</p>\n</div>\n\n<h1 id=\"git-设置代理\"><a href=\"#git-设置代理\" class=\"headerlink\" title=\"git 设置代理\"></a>git 设置代理</h1><h2 id=\"http-https\"><a href=\"#http-https\" class=\"headerlink\" title=\"http / https\"></a>http / https</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;全局 </span><br><span class=\"line\"></span><br><span class=\"line\">git config --global http.proxy http:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;只为 github </span><br><span class=\"line\">git config --global http.https:&#x2F;&#x2F;github.com.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\">git config --global https.https:&#x2F;&#x2F;github.com.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"socks5\"><a href=\"#socks5\" class=\"headerlink\" title=\"socks5\"></a>socks5</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.https://github.com.proxy socks5://127.0.0.1:7890</span><br><span class=\"line\">git config --global https.https://github.com.proxy socks5://127.0.0.1:7890</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><p><code>~/.ssh/config</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 必须是 github.com</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">   HostName github.com</span><br><span class=\"line\">   User git</span><br><span class=\"line\">   # 走 HTTP 代理</span><br><span class=\"line\">   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport&#x3D;8080</span><br><span class=\"line\">   # 走 socks5 代理（如 Shadowsocks）</span><br><span class=\"line\">   # ProxyCommand nc -v -x 127.0.0.1:1080 %h %p</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<hr>\n<h1 id=\"终端设置代理\"><a href=\"#终端设置代理\" class=\"headerlink\" title=\"终端设置代理\"></a>终端设置代理</h1><p>git clone  确实很快了</p>\n<p>但是npm,homebrew呢</p>\n<p>Npm   你可以用 nrm 切换taobao源,但是有的时候并不是最新的会报错或者未知bug</p>\n<p>homebrew 就更慢了 切换中科/清华源  要改好多设置,而且有的软件还没有,不太好用.</p>\n<p>所以这时候要用 这个方法了</p>\n<p>##bash</p>\n<p><code>~/.bash_profile</code>文件添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">proxy_on</span></span>()&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">export</span> http_proxy=socks5://127.0.0.1:7890</span><br><span class=\"line\">\t<span class=\"built_in\">export</span> https_proxy=socks5://127.0.0.1:7890</span><br><span class=\"line\">\t<span class=\"built_in\">export</span> all_proxy=socks5://127.0.0.1:7890</span><br><span class=\"line\">\tcurl cip.cc </span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -e <span class=\"string\">&#x27;****** 当前终端 已开启代理 ******&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">proxy_off</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">unset</span> http_proxy</span><br><span class=\"line\">        <span class=\"built_in\">unset</span> https_proxy</span><br><span class=\"line\">        <span class=\"built_in\">unset</span> all_proxy</span><br><span class=\"line\">\t\tcurl cip.cc</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">&#x27;****** 当前终端 已关闭代理 ******&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>在终端输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_on    //打开</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_off //关闭</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"zsh\"><a href=\"#zsh\" class=\"headerlink\" title=\"zsh\"></a>zsh</h2><p>修改<code>~/.zshrc</code> </p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> proxyON=<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">\texport http_proxy=socks5://127.0.0.1:7890</span></span><br><span class=\"line\"><span class=\"string\">\texport https_proxy=socks5://127.0.0.1:7890</span></span><br><span class=\"line\"><span class=\"string\">\texport all_proxy=socks5://127.0.0.1:7890</span></span><br><span class=\"line\"><span class=\"string\">\tcurl cip.cc </span></span><br><span class=\"line\"><span class=\"string\">\techo -e &#x27;****** 当前终端 已开启代理 ******&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> proxyOFF=<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">\t    unset http_proxy</span></span><br><span class=\"line\"><span class=\"string\">        unset https_proxy</span></span><br><span class=\"line\"><span class=\"string\">        unset all_proxy</span></span><br><span class=\"line\"><span class=\"string\">\t\tcurl cip.cc</span></span><br><span class=\"line\"><span class=\"string\">        echo -e &#x27;****** 当前终端 已关闭代理 ******&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>我一般是用zsh 而且是默认的 所有后面就省掉了<code>source ~/.bash_profile</code> </p>\n<p>直接终端 <code>proxyON</code> /<code>proxyOFF</code>搞起</p>\n<p>效果</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ proxyON</span><br><span class=\"line\">IP      : 58.153.107.xxx</span><br><span class=\"line\">地址    : 中国  香港  pccw.com</span><br><span class=\"line\"></span><br><span class=\"line\">数据二  : 香港 | 电讯盈科有限公司</span><br><span class=\"line\"></span><br><span class=\"line\">数据三  : 中国香港 | 电讯盈科</span><br><span class=\"line\"></span><br><span class=\"line\">URL     : http://www.cip.cc/58.153.107.120</span><br><span class=\"line\"></span><br><span class=\"line\">****** 当前终端 已开启代理 ******</span><br><span class=\"line\">❯ proxyOFF</span><br><span class=\"line\">IP      : xxx.xxx.87.203</span><br><span class=\"line\">地址    : 中国  广东  深圳</span><br><span class=\"line\">运营商  : 电信</span><br><span class=\"line\"></span><br><span class=\"line\">数据二  : 广东省深圳市 | 电信</span><br><span class=\"line\"></span><br><span class=\"line\">数据三  : 中国广东深圳 | 电信</span><br><span class=\"line\"></span><br><span class=\"line\">URL     : http://www.cip.cc/14.155.87.203</span><br><span class=\"line\">****** 当前终端 已关闭代理 ******</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"Alfred-执行\"><a href=\"#Alfred-执行\" class=\"headerlink\" title=\"Alfred 执行\"></a>Alfred 执行</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200919154645223.png\" alt=\"image-20200919154645223\"></p>\n<p>在alfre workflow中添加即可</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930144414936.png\" alt=\"image-20200930144414936\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>更新: 发现了个更便捷的的,更灵活方便</p>\n<p>clash 复制终端代理命令</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-35-58%401x.png\"></p>\n<p>然后终端复制 =&gt; 回车 =&gt; git / brew 等 超级快</p>\n<hr>\n<div class=\"note info flat\"><p>所有的前提你能 文明富强上网  </p>\n<p>端口看你们代理怎么设置的 常见的1080 1086 7890</p>\n<p>我用的<code>clash</code> 所以默认的是7890,  而且是混合的(http socks5都为7890)</p>\n</div>\n\n<h1 id=\"git-设置代理\"><a href=\"#git-设置代理\" class=\"headerlink\" title=\"git 设置代理\"></a>git 设置代理</h1><h2 id=\"http-https\"><a href=\"#http-https\" class=\"headerlink\" title=\"http / https\"></a>http / https</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;全局 </span><br><span class=\"line\"></span><br><span class=\"line\">git config --global http.proxy http:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global --unset http.proxy</span><br><span class=\"line\">git config --global --unset https.proxy</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;只为 github </span><br><span class=\"line\">git config --global http.https:&#x2F;&#x2F;github.com.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\">git config --global https.https:&#x2F;&#x2F;github.com.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"socks5\"><a href=\"#socks5\" class=\"headerlink\" title=\"socks5\"></a>socks5</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.https://github.com.proxy socks5://127.0.0.1:7890</span><br><span class=\"line\">git config --global https.https://github.com.proxy socks5://127.0.0.1:7890</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><p><code>~/.ssh/config</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 必须是 github.com</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">   HostName github.com</span><br><span class=\"line\">   User git</span><br><span class=\"line\">   # 走 HTTP 代理</span><br><span class=\"line\">   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport&#x3D;8080</span><br><span class=\"line\">   # 走 socks5 代理（如 Shadowsocks）</span><br><span class=\"line\">   # ProxyCommand nc -v -x 127.0.0.1:1080 %h %p</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<hr>\n<h1 id=\"终端设置代理\"><a href=\"#终端设置代理\" class=\"headerlink\" title=\"终端设置代理\"></a>终端设置代理</h1><p>git clone  确实很快了</p>\n<p>但是npm,homebrew呢</p>\n<p>Npm   你可以用 nrm 切换taobao源,但是有的时候并不是最新的会报错或者未知bug</p>\n<p>homebrew 就更慢了 切换中科/清华源  要改好多设置,而且有的软件还没有,不太好用.</p>\n<p>所以这时候要用 这个方法了</p>\n<p>##bash</p>\n<p><code>~/.bash_profile</code>文件添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">proxy_on</span></span>()&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">export</span> http_proxy=socks5://127.0.0.1:7890</span><br><span class=\"line\">\t<span class=\"built_in\">export</span> https_proxy=socks5://127.0.0.1:7890</span><br><span class=\"line\">\t<span class=\"built_in\">export</span> all_proxy=socks5://127.0.0.1:7890</span><br><span class=\"line\">\tcurl cip.cc </span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> -e <span class=\"string\">&#x27;****** 当前终端 已开启代理 ******&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">proxy_off</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"built_in\">unset</span> http_proxy</span><br><span class=\"line\">        <span class=\"built_in\">unset</span> https_proxy</span><br><span class=\"line\">        <span class=\"built_in\">unset</span> all_proxy</span><br><span class=\"line\">\t\tcurl cip.cc</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -e <span class=\"string\">&#x27;****** 当前终端 已关闭代理 ******&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>在终端输出</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_on    //打开</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_off //关闭</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"zsh\"><a href=\"#zsh\" class=\"headerlink\" title=\"zsh\"></a>zsh</h2><p>修改<code>~/.zshrc</code> </p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> proxyON=<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">\texport http_proxy=socks5://127.0.0.1:7890</span></span><br><span class=\"line\"><span class=\"string\">\texport https_proxy=socks5://127.0.0.1:7890</span></span><br><span class=\"line\"><span class=\"string\">\texport all_proxy=socks5://127.0.0.1:7890</span></span><br><span class=\"line\"><span class=\"string\">\tcurl cip.cc </span></span><br><span class=\"line\"><span class=\"string\">\techo -e &#x27;****** 当前终端 已开启代理 ******&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">alias</span> proxyOFF=<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">\t    unset http_proxy</span></span><br><span class=\"line\"><span class=\"string\">        unset https_proxy</span></span><br><span class=\"line\"><span class=\"string\">        unset all_proxy</span></span><br><span class=\"line\"><span class=\"string\">\t\tcurl cip.cc</span></span><br><span class=\"line\"><span class=\"string\">        echo -e &#x27;****** 当前终端 已关闭代理 ******&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>我一般是用zsh 而且是默认的 所有后面就省掉了<code>source ~/.bash_profile</code> </p>\n<p>直接终端 <code>proxyON</code> /<code>proxyOFF</code>搞起</p>\n<p>效果</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ proxyON</span><br><span class=\"line\">IP      : 58.153.107.xxx</span><br><span class=\"line\">地址    : 中国  香港  pccw.com</span><br><span class=\"line\"></span><br><span class=\"line\">数据二  : 香港 | 电讯盈科有限公司</span><br><span class=\"line\"></span><br><span class=\"line\">数据三  : 中国香港 | 电讯盈科</span><br><span class=\"line\"></span><br><span class=\"line\">URL     : http://www.cip.cc/58.153.107.120</span><br><span class=\"line\"></span><br><span class=\"line\">****** 当前终端 已开启代理 ******</span><br><span class=\"line\">❯ proxyOFF</span><br><span class=\"line\">IP      : xxx.xxx.87.203</span><br><span class=\"line\">地址    : 中国  广东  深圳</span><br><span class=\"line\">运营商  : 电信</span><br><span class=\"line\"></span><br><span class=\"line\">数据二  : 广东省深圳市 | 电信</span><br><span class=\"line\"></span><br><span class=\"line\">数据三  : 中国广东深圳 | 电信</span><br><span class=\"line\"></span><br><span class=\"line\">URL     : http://www.cip.cc/14.155.87.203</span><br><span class=\"line\">****** 当前终端 已关闭代理 ******</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"Alfred-执行\"><a href=\"#Alfred-执行\" class=\"headerlink\" title=\"Alfred 执行\"></a>Alfred 执行</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200919154645223.png\" alt=\"image-20200919154645223\"></p>\n<p>在alfre workflow中添加即可</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930144414936.png\" alt=\"image-20200930144414936\"></p>\n"},{"title":"js 一些写法记录","date":"2020-09-01T16:00:00.000Z","updated":"2021-03-11T06:29:45.354Z","cover":"https://picgo.genji.xyz/blog/posts/image-20201010162139035.png","description":null,"keywords":"js,写法,优雅","_content":"\n## \n\n```js\nconst {id = 5 } ={id:88, name:'nihao',like:'sing'}\nconsole.log(id) //88\nconst {id = 5 } ={ name:'nihao',like:'sing'}\nconsole.log(id)  // 5\n\n//很类似那个默认传参\nfunction def(x =3) {\n\tconsole.log(x)\n}\ndef() //3\nlet x = 100\ndef(x) //100\n```\n\n\n\n# 取整\n\n```js\nvar a = ~~2.33   ----> 2\nvar b = 2.33 | 0   ----> 2\nvar c = 2.33 >> 0   ----> 2\nvar d = Math.floor(a) ----> 2\n```\n\n\n\n\n\n## 连续判断 includes\n\n\n\n```js\n//不清晰\nvar role = \"user\"\nif(role === \"admin\"||role === \"superuser\"||role === \"editor\"){\n  //do something\n}\n\nif( [\"admin\",\"editer\",\"superuser\"].includes(role)){\n  //do something\n}\n\n\n```\n\n\n## || &&\n\n```js\na = a || []\nstates || console.log('niubi')\nstates && console.log('niubi')\n```\n\n\n\n## 多个状态选择\n\n```js\nconst actions = new Map([\n  [1, ['processing','IndexPage']],\n  [2, ['fail','FailPage']],\n  [3, ['fail','FailPage']],\n  [4, ['success','SuccessPage']],\n  [5, ['cancel','CancelPage']],\n  ['default', ['other','Index']]\n])\nconst onButtonClick = (status)=>{\n  let action = actions.get(status) || actions.get('default')\n  sendLog(action[0])\n  jumpTo(action[1])\n}\n//Map 和 Object\n//Object 一般都有prototype\n//Object 键只能是字符串或者Symbols Map的键可以是任意值。\n//可以通过size属性很容易地得到一个Map的键值对个数\nactions.size// =>6\n```\n\n## 数据处理\n\n在用 chart.js ,获取的数据需要处理下\n\n对象数组 处理. --解构赋值 map\n\n```js\n//有一段get 到的数据 [{},{}]\n[\n  {\n    date: 20201021,\n    states: 56,\n    positive: 8289661,\n    negative: 110646725,\n  },\n  {\n    date: 20201020,\n    states: 56,\n    positive: 8232367,\n    negative: 109964576,\n  },\n  ...and so on\n];\n\n\n//js\nlet arrPositive = []\nlet arrStates = []\ndata.forEach(d=>{\n  \n  const{ date,states,positive,negative} = d\n  arrPositive.push({date , total : positive})\n  arrStates.push({date , total : states})\n})\n//注意map  =>  和 ()=>{return} 和 function(){}区别\narrStates.map(d=>d.date).reverse()\narrStates.map(d=>d.total).reverse()\n```\n\n```js\nvar foo = [{\n    name: 'Stark',\n    age: 21\n},{\n    name: 'Jarvis',\n    age: 20\n},{\n    name: 'Pepper',\n    age: 16\n}]\n\nvar result = foo.filter(person => person.age > 16)\n\t.map(person => ({person: person,friends: []\n    }))\n\n```\n\n类数组转数组\n\n```js\n\n```\n\n## reduce 求和 计算\n\n```js\nfoo.reduce((a, b) => a + b); // => 15\n```\n\n\n## 去重\n\n\n\n```js\nvar uniqueItems = [...new Set(items)]\narr.filter((item,index,ary)=> ary.indexOf(item) === index)\narr.reduce((pre,cur,index)=>pre.includes( cur )? pre:pre.concat(cur),[])\n```\n\n# 转换类型\n\n## 数字转字符串\n\n```js\nvar converted_number = 5 + \"\";\nconsole.log(converted_number);\n// 5\nconsole.log(typeof converted_number); \n// string\n```\n\n## 字符串转数字\n\n```js\nthe_string = \"123\";\nconsole.log(+the_string);\n// 123\n\nvar the_string = \"123\";\nvar the_num = +the_string \nconsole.log(typeof( the_string),typeof( the_num) )\n//string number\n```\n\n\n\n\n\n\n\n# dongtai对象\n\n```js\nconst dynamic = 'flavour';\nvar item = {\n    name: 'Coke',\n    [dynamic]: 'Cherry'\n}\nconsole.log(item); \n// { name: \"Coke\", flavour: \"Cherry\" }\n```\n\n","source":"_posts/前端/js/js好的写法.md","raw":"---\ntitle: js 一些写法记录\ndate: 2020-09-02 00:00:00\nupdated:\ncover: https://picgo.genji.xyz/blog/posts/image-20201010162139035.png\ndescription:\ntags: [js, Mark]\ncategories: [前端, js]\nkeywords: \"js,写法,优雅\"\n---\n\n## \n\n```js\nconst {id = 5 } ={id:88, name:'nihao',like:'sing'}\nconsole.log(id) //88\nconst {id = 5 } ={ name:'nihao',like:'sing'}\nconsole.log(id)  // 5\n\n//很类似那个默认传参\nfunction def(x =3) {\n\tconsole.log(x)\n}\ndef() //3\nlet x = 100\ndef(x) //100\n```\n\n\n\n# 取整\n\n```js\nvar a = ~~2.33   ----> 2\nvar b = 2.33 | 0   ----> 2\nvar c = 2.33 >> 0   ----> 2\nvar d = Math.floor(a) ----> 2\n```\n\n\n\n\n\n## 连续判断 includes\n\n\n\n```js\n//不清晰\nvar role = \"user\"\nif(role === \"admin\"||role === \"superuser\"||role === \"editor\"){\n  //do something\n}\n\nif( [\"admin\",\"editer\",\"superuser\"].includes(role)){\n  //do something\n}\n\n\n```\n\n\n## || &&\n\n```js\na = a || []\nstates || console.log('niubi')\nstates && console.log('niubi')\n```\n\n\n\n## 多个状态选择\n\n```js\nconst actions = new Map([\n  [1, ['processing','IndexPage']],\n  [2, ['fail','FailPage']],\n  [3, ['fail','FailPage']],\n  [4, ['success','SuccessPage']],\n  [5, ['cancel','CancelPage']],\n  ['default', ['other','Index']]\n])\nconst onButtonClick = (status)=>{\n  let action = actions.get(status) || actions.get('default')\n  sendLog(action[0])\n  jumpTo(action[1])\n}\n//Map 和 Object\n//Object 一般都有prototype\n//Object 键只能是字符串或者Symbols Map的键可以是任意值。\n//可以通过size属性很容易地得到一个Map的键值对个数\nactions.size// =>6\n```\n\n## 数据处理\n\n在用 chart.js ,获取的数据需要处理下\n\n对象数组 处理. --解构赋值 map\n\n```js\n//有一段get 到的数据 [{},{}]\n[\n  {\n    date: 20201021,\n    states: 56,\n    positive: 8289661,\n    negative: 110646725,\n  },\n  {\n    date: 20201020,\n    states: 56,\n    positive: 8232367,\n    negative: 109964576,\n  },\n  ...and so on\n];\n\n\n//js\nlet arrPositive = []\nlet arrStates = []\ndata.forEach(d=>{\n  \n  const{ date,states,positive,negative} = d\n  arrPositive.push({date , total : positive})\n  arrStates.push({date , total : states})\n})\n//注意map  =>  和 ()=>{return} 和 function(){}区别\narrStates.map(d=>d.date).reverse()\narrStates.map(d=>d.total).reverse()\n```\n\n```js\nvar foo = [{\n    name: 'Stark',\n    age: 21\n},{\n    name: 'Jarvis',\n    age: 20\n},{\n    name: 'Pepper',\n    age: 16\n}]\n\nvar result = foo.filter(person => person.age > 16)\n\t.map(person => ({person: person,friends: []\n    }))\n\n```\n\n类数组转数组\n\n```js\n\n```\n\n## reduce 求和 计算\n\n```js\nfoo.reduce((a, b) => a + b); // => 15\n```\n\n\n## 去重\n\n\n\n```js\nvar uniqueItems = [...new Set(items)]\narr.filter((item,index,ary)=> ary.indexOf(item) === index)\narr.reduce((pre,cur,index)=>pre.includes( cur )? pre:pre.concat(cur),[])\n```\n\n# 转换类型\n\n## 数字转字符串\n\n```js\nvar converted_number = 5 + \"\";\nconsole.log(converted_number);\n// 5\nconsole.log(typeof converted_number); \n// string\n```\n\n## 字符串转数字\n\n```js\nthe_string = \"123\";\nconsole.log(+the_string);\n// 123\n\nvar the_string = \"123\";\nvar the_num = +the_string \nconsole.log(typeof( the_string),typeof( the_num) )\n//string number\n```\n\n\n\n\n\n\n\n# dongtai对象\n\n```js\nconst dynamic = 'flavour';\nvar item = {\n    name: 'Coke',\n    [dynamic]: 'Cherry'\n}\nconsole.log(item); \n// { name: \"Coke\", flavour: \"Cherry\" }\n```\n\n","slug":"前端/js/js好的写法","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2twy000vdmle8h202hn3","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;id = <span class=\"number\">5</span> &#125; =&#123;<span class=\"attr\">id</span>:<span class=\"number\">88</span>, <span class=\"attr\">name</span>:<span class=\"string\">&#x27;nihao&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;sing&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(id) <span class=\"comment\">//88</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;id = <span class=\"number\">5</span> &#125; =&#123; <span class=\"attr\">name</span>:<span class=\"string\">&#x27;nihao&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;sing&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(id)  <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//很类似那个默认传参</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">def</span>(<span class=\"params\">x =<span class=\"number\">3</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(x)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">def() <span class=\"comment\">//3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"number\">100</span></span><br><span class=\"line\">def(x) <span class=\"comment\">//100</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"取整\"><a href=\"#取整\" class=\"headerlink\" title=\"取整\"></a>取整</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = ~~<span class=\"number\">2.33</span>   ----&gt; <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2.33</span> | <span class=\"number\">0</span>   ----&gt; <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">2.33</span> &gt;&gt; <span class=\"number\">0</span>   ----&gt; <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"built_in\">Math</span>.floor(a) ----&gt; <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"连续判断-includes\"><a href=\"#连续判断-includes\" class=\"headerlink\" title=\"连续判断 includes\"></a>连续判断 includes</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不清晰</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> role = <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(role === <span class=\"string\">&quot;admin&quot;</span>||role === <span class=\"string\">&quot;superuser&quot;</span>||role === <span class=\"string\">&quot;editor&quot;</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>( [<span class=\"string\">&quot;admin&quot;</span>,<span class=\"string\">&quot;editer&quot;</span>,<span class=\"string\">&quot;superuser&quot;</span>].includes(role))&#123;</span><br><span class=\"line\">  <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"amp-amp\"><a href=\"#amp-amp\" class=\"headerlink\" title=\"|| &amp;&amp;\"></a>|| &amp;&amp;</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = a || []</span><br><span class=\"line\">states || <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;niubi&#x27;</span>)</span><br><span class=\"line\">states &amp;&amp; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;niubi&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"多个状态选择\"><a href=\"#多个状态选择\" class=\"headerlink\" title=\"多个状态选择\"></a>多个状态选择</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> actions = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>([</span><br><span class=\"line\">  [<span class=\"number\">1</span>, [<span class=\"string\">&#x27;processing&#x27;</span>,<span class=\"string\">&#x27;IndexPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">2</span>, [<span class=\"string\">&#x27;fail&#x27;</span>,<span class=\"string\">&#x27;FailPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">3</span>, [<span class=\"string\">&#x27;fail&#x27;</span>,<span class=\"string\">&#x27;FailPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">4</span>, [<span class=\"string\">&#x27;success&#x27;</span>,<span class=\"string\">&#x27;SuccessPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">5</span>, [<span class=\"string\">&#x27;cancel&#x27;</span>,<span class=\"string\">&#x27;CancelPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;other&#x27;</span>,<span class=\"string\">&#x27;Index&#x27;</span>]]</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"keyword\">const</span> onButtonClick = <span class=\"function\">(<span class=\"params\">status</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> action = actions.get(status) || actions.get(<span class=\"string\">&#x27;default&#x27;</span>)</span><br><span class=\"line\">  sendLog(action[<span class=\"number\">0</span>])</span><br><span class=\"line\">  jumpTo(action[<span class=\"number\">1</span>])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//Map 和 Object</span></span><br><span class=\"line\"><span class=\"comment\">//Object 一般都有prototype</span></span><br><span class=\"line\"><span class=\"comment\">//Object 键只能是字符串或者Symbols Map的键可以是任意值。</span></span><br><span class=\"line\"><span class=\"comment\">//可以通过size属性很容易地得到一个Map的键值对个数</span></span><br><span class=\"line\">actions.size<span class=\"comment\">// =&gt;6</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><p>在用 chart.js ,获取的数据需要处理下</p>\n<p>对象数组 处理. –解构赋值 map</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//有一段get 到的数据 [&#123;&#125;,&#123;&#125;]</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    date: <span class=\"number\">20201021</span>,</span><br><span class=\"line\">    states: <span class=\"number\">56</span>,</span><br><span class=\"line\">    positive: <span class=\"number\">8289661</span>,</span><br><span class=\"line\">    negative: <span class=\"number\">110646725</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    date: <span class=\"number\">20201020</span>,</span><br><span class=\"line\">    states: <span class=\"number\">56</span>,</span><br><span class=\"line\">    positive: <span class=\"number\">8232367</span>,</span><br><span class=\"line\">    negative: <span class=\"number\">109964576</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...and so on</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//js</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrPositive = []</span><br><span class=\"line\"><span class=\"keyword\">let</span> arrStates = []</span><br><span class=\"line\">data.forEach(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span>&#123; date,states,positive,negative&#125; = d</span><br><span class=\"line\">  arrPositive.push(&#123;date , <span class=\"attr\">total</span> : positive&#125;)</span><br><span class=\"line\">  arrStates.push(&#123;date , <span class=\"attr\">total</span> : states&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//注意map  =&gt;  和 ()=&gt;&#123;return&#125; 和 function()&#123;&#125;区别</span></span><br><span class=\"line\">arrStates.map(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>d.date).reverse()</span><br><span class=\"line\">arrStates.map(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>d.total).reverse()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = [&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Stark&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">21</span></span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Jarvis&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Pepper&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">16</span></span><br><span class=\"line\">&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = foo.filter(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.age &gt; <span class=\"number\">16</span>)</span><br><span class=\"line\">\t.map(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> (&#123;<span class=\"attr\">person</span>: person,<span class=\"attr\">friends</span>: []</span><br><span class=\"line\">    &#125;))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>类数组转数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reduce-求和-计算\"><a href=\"#reduce-求和-计算\" class=\"headerlink\" title=\"reduce 求和 计算\"></a>reduce 求和 计算</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo.reduce(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a + b); <span class=\"comment\">// =&gt; 15</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> uniqueItems = [...new <span class=\"built_in\">Set</span>(items)]</span><br><span class=\"line\">arr.filter(<span class=\"function\">(<span class=\"params\">item,index,ary</span>)=&gt;</span> ary.indexOf(item) === index)</span><br><span class=\"line\">arr.reduce(<span class=\"function\">(<span class=\"params\">pre,cur,index</span>)=&gt;</span>pre.includes( cur )? pre:pre.concat(cur),[])</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"转换类型\"><a href=\"#转换类型\" class=\"headerlink\" title=\"转换类型\"></a>转换类型</h1><h2 id=\"数字转字符串\"><a href=\"#数字转字符串\" class=\"headerlink\" title=\"数字转字符串\"></a>数字转字符串</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> converted_number = <span class=\"number\">5</span> + <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(converted_number);</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> converted_number); </span><br><span class=\"line\"><span class=\"comment\">// string</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串转数字\"><a href=\"#字符串转数字\" class=\"headerlink\" title=\"字符串转数字\"></a>字符串转数字</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">the_string = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(+the_string);</span><br><span class=\"line\"><span class=\"comment\">// 123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> the_string = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> the_num = +the_string </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span>( the_string),<span class=\"keyword\">typeof</span>( the_num) )</span><br><span class=\"line\"><span class=\"comment\">//string number</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h1 id=\"dongtai对象\"><a href=\"#dongtai对象\" class=\"headerlink\" title=\"dongtai对象\"></a>dongtai对象</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> dynamic = <span class=\"string\">&#x27;flavour&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> item = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Coke&#x27;</span>,</span><br><span class=\"line\">    [dynamic]: <span class=\"string\">&#x27;Cherry&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(item); </span><br><span class=\"line\"><span class=\"comment\">// &#123; name: &quot;Coke&quot;, flavour: &quot;Cherry&quot; &#125;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;id = <span class=\"number\">5</span> &#125; =&#123;<span class=\"attr\">id</span>:<span class=\"number\">88</span>, <span class=\"attr\">name</span>:<span class=\"string\">&#x27;nihao&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;sing&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(id) <span class=\"comment\">//88</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;id = <span class=\"number\">5</span> &#125; =&#123; <span class=\"attr\">name</span>:<span class=\"string\">&#x27;nihao&#x27;</span>,<span class=\"attr\">like</span>:<span class=\"string\">&#x27;sing&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(id)  <span class=\"comment\">// 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//很类似那个默认传参</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">def</span>(<span class=\"params\">x =<span class=\"number\">3</span></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(x)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">def() <span class=\"comment\">//3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> x = <span class=\"number\">100</span></span><br><span class=\"line\">def(x) <span class=\"comment\">//100</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"取整\"><a href=\"#取整\" class=\"headerlink\" title=\"取整\"></a>取整</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = ~~<span class=\"number\">2.33</span>   ----&gt; <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2.33</span> | <span class=\"number\">0</span>   ----&gt; <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">2.33</span> &gt;&gt; <span class=\"number\">0</span>   ----&gt; <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"built_in\">Math</span>.floor(a) ----&gt; <span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"连续判断-includes\"><a href=\"#连续判断-includes\" class=\"headerlink\" title=\"连续判断 includes\"></a>连续判断 includes</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不清晰</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> role = <span class=\"string\">&quot;user&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(role === <span class=\"string\">&quot;admin&quot;</span>||role === <span class=\"string\">&quot;superuser&quot;</span>||role === <span class=\"string\">&quot;editor&quot;</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>( [<span class=\"string\">&quot;admin&quot;</span>,<span class=\"string\">&quot;editer&quot;</span>,<span class=\"string\">&quot;superuser&quot;</span>].includes(role))&#123;</span><br><span class=\"line\">  <span class=\"comment\">//do something</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"amp-amp\"><a href=\"#amp-amp\" class=\"headerlink\" title=\"|| &amp;&amp;\"></a>|| &amp;&amp;</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = a || []</span><br><span class=\"line\">states || <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;niubi&#x27;</span>)</span><br><span class=\"line\">states &amp;&amp; <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;niubi&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"多个状态选择\"><a href=\"#多个状态选择\" class=\"headerlink\" title=\"多个状态选择\"></a>多个状态选择</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> actions = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>([</span><br><span class=\"line\">  [<span class=\"number\">1</span>, [<span class=\"string\">&#x27;processing&#x27;</span>,<span class=\"string\">&#x27;IndexPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">2</span>, [<span class=\"string\">&#x27;fail&#x27;</span>,<span class=\"string\">&#x27;FailPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">3</span>, [<span class=\"string\">&#x27;fail&#x27;</span>,<span class=\"string\">&#x27;FailPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">4</span>, [<span class=\"string\">&#x27;success&#x27;</span>,<span class=\"string\">&#x27;SuccessPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"number\">5</span>, [<span class=\"string\">&#x27;cancel&#x27;</span>,<span class=\"string\">&#x27;CancelPage&#x27;</span>]],</span><br><span class=\"line\">  [<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;other&#x27;</span>,<span class=\"string\">&#x27;Index&#x27;</span>]]</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"keyword\">const</span> onButtonClick = <span class=\"function\">(<span class=\"params\">status</span>)=&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> action = actions.get(status) || actions.get(<span class=\"string\">&#x27;default&#x27;</span>)</span><br><span class=\"line\">  sendLog(action[<span class=\"number\">0</span>])</span><br><span class=\"line\">  jumpTo(action[<span class=\"number\">1</span>])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//Map 和 Object</span></span><br><span class=\"line\"><span class=\"comment\">//Object 一般都有prototype</span></span><br><span class=\"line\"><span class=\"comment\">//Object 键只能是字符串或者Symbols Map的键可以是任意值。</span></span><br><span class=\"line\"><span class=\"comment\">//可以通过size属性很容易地得到一个Map的键值对个数</span></span><br><span class=\"line\">actions.size<span class=\"comment\">// =&gt;6</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><p>在用 chart.js ,获取的数据需要处理下</p>\n<p>对象数组 处理. –解构赋值 map</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//有一段get 到的数据 [&#123;&#125;,&#123;&#125;]</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    date: <span class=\"number\">20201021</span>,</span><br><span class=\"line\">    states: <span class=\"number\">56</span>,</span><br><span class=\"line\">    positive: <span class=\"number\">8289661</span>,</span><br><span class=\"line\">    negative: <span class=\"number\">110646725</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    date: <span class=\"number\">20201020</span>,</span><br><span class=\"line\">    states: <span class=\"number\">56</span>,</span><br><span class=\"line\">    positive: <span class=\"number\">8232367</span>,</span><br><span class=\"line\">    negative: <span class=\"number\">109964576</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...and so on</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//js</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> arrPositive = []</span><br><span class=\"line\"><span class=\"keyword\">let</span> arrStates = []</span><br><span class=\"line\">data.forEach(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span>&#123; date,states,positive,negative&#125; = d</span><br><span class=\"line\">  arrPositive.push(&#123;date , <span class=\"attr\">total</span> : positive&#125;)</span><br><span class=\"line\">  arrStates.push(&#123;date , <span class=\"attr\">total</span> : states&#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">//注意map  =&gt;  和 ()=&gt;&#123;return&#125; 和 function()&#123;&#125;区别</span></span><br><span class=\"line\">arrStates.map(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>d.date).reverse()</span><br><span class=\"line\">arrStates.map(<span class=\"function\"><span class=\"params\">d</span>=&gt;</span>d.total).reverse()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = [&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Stark&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">21</span></span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Jarvis&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;,&#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Pepper&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">16</span></span><br><span class=\"line\">&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = foo.filter(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> person.age &gt; <span class=\"number\">16</span>)</span><br><span class=\"line\">\t.map(<span class=\"function\"><span class=\"params\">person</span> =&gt;</span> (&#123;<span class=\"attr\">person</span>: person,<span class=\"attr\">friends</span>: []</span><br><span class=\"line\">    &#125;))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>类数组转数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"reduce-求和-计算\"><a href=\"#reduce-求和-计算\" class=\"headerlink\" title=\"reduce 求和 计算\"></a>reduce 求和 计算</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo.reduce(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a + b); <span class=\"comment\">// =&gt; 15</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"去重\"><a href=\"#去重\" class=\"headerlink\" title=\"去重\"></a>去重</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> uniqueItems = [...new <span class=\"built_in\">Set</span>(items)]</span><br><span class=\"line\">arr.filter(<span class=\"function\">(<span class=\"params\">item,index,ary</span>)=&gt;</span> ary.indexOf(item) === index)</span><br><span class=\"line\">arr.reduce(<span class=\"function\">(<span class=\"params\">pre,cur,index</span>)=&gt;</span>pre.includes( cur )? pre:pre.concat(cur),[])</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"转换类型\"><a href=\"#转换类型\" class=\"headerlink\" title=\"转换类型\"></a>转换类型</h1><h2 id=\"数字转字符串\"><a href=\"#数字转字符串\" class=\"headerlink\" title=\"数字转字符串\"></a>数字转字符串</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> converted_number = <span class=\"number\">5</span> + <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(converted_number);</span><br><span class=\"line\"><span class=\"comment\">// 5</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> converted_number); </span><br><span class=\"line\"><span class=\"comment\">// string</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串转数字\"><a href=\"#字符串转数字\" class=\"headerlink\" title=\"字符串转数字\"></a>字符串转数字</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">the_string = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(+the_string);</span><br><span class=\"line\"><span class=\"comment\">// 123</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> the_string = <span class=\"string\">&quot;123&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> the_num = +the_string </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span>( the_string),<span class=\"keyword\">typeof</span>( the_num) )</span><br><span class=\"line\"><span class=\"comment\">//string number</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h1 id=\"dongtai对象\"><a href=\"#dongtai对象\" class=\"headerlink\" title=\"dongtai对象\"></a>dongtai对象</h1><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> dynamic = <span class=\"string\">&#x27;flavour&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> item = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;Coke&#x27;</span>,</span><br><span class=\"line\">    [dynamic]: <span class=\"string\">&#x27;Cherry&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(item); </span><br><span class=\"line\"><span class=\"comment\">// &#123; name: &quot;Coke&quot;, flavour: &quot;Cherry&quot; &#125;</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"报错!Fxxk!","top_img":null,"description":"报错汇总","keywords":"error","date":"2020-01-01T16:00:00.000Z","cover":"https://picgo.genji.xyz/blog/posts/error.png","_content":"\n\n# <i class=\"fab fa-github-square\"></i> git\n\n\n### error: failed to push some refs to 'git@github.com\n\nresolve: \n```bash\ngit pull --rebase origin master\n```\n\n\n<br/>\n\n### 删除git文件\n\nresolve\n```bash\ngit rm --cached filename\n```\n_____\n\n# <i class=\"fab fa-npm\"></i> npm\n\n\n```node\nNode Sass could not find a binding for your current environment: OS X 64-bit with Node.js 12.x\n\nFound bindings for the following environments:\n  - OS X 64-bit with Node.js 13.x\n\n## 前阵 更新了node  又降级到 12  \n\n解决:\n\n\nnpm rebuild node-sass\n\n```\n\n\n\n# <i class=\"fab fa-node\"></i> node\n\n# <i class=\"fab fa-docker\"></i> docker\n\n\n在旁路由 docker run 一个 镜像时候 出现\njava.Net.UnknownHostException \n\n 首先觉得是host 问题所以添加host,\n {% note [info] [no-icon] %}\n 不在直接在容器中 `/etc/hosts` 直接添加 容器容器回重置 ,\n ` --add-hotst  yourdomain.com:IP`  \n{% endnote %}\n```bash\ndocker run -d -p 8080:8080 --add-host api.test.com:10.100.33.101\n\n```\n然后 docker exec -it contaierID /bin/bash 进入容器内终端 \n依然ping不通  然后搜到一个 方法\n\n```bash\n# 开启 NAT 转发\n firewall-cmd --zone=public --add-masquerade --permanent\nfirewall-cmd --reload\nsystemctl restart docker\n\n```\n\n\n# something......","source":"_posts/Mark/error/报错记录.md","raw":"---\ntitle:  报错!Fxxk!\ntop_img: \ndescription: \"报错汇总\"\nkeywords: \"error\"\ndate: 2020-01-02\ncover: https://picgo.genji.xyz/blog/posts/error.png\ntags: [ error ]\ncategories: [mark,error]\n---\n\n\n# <i class=\"fab fa-github-square\"></i> git\n\n\n### error: failed to push some refs to 'git@github.com\n\nresolve: \n```bash\ngit pull --rebase origin master\n```\n\n\n<br/>\n\n### 删除git文件\n\nresolve\n```bash\ngit rm --cached filename\n```\n_____\n\n# <i class=\"fab fa-npm\"></i> npm\n\n\n```node\nNode Sass could not find a binding for your current environment: OS X 64-bit with Node.js 12.x\n\nFound bindings for the following environments:\n  - OS X 64-bit with Node.js 13.x\n\n## 前阵 更新了node  又降级到 12  \n\n解决:\n\n\nnpm rebuild node-sass\n\n```\n\n\n\n# <i class=\"fab fa-node\"></i> node\n\n# <i class=\"fab fa-docker\"></i> docker\n\n\n在旁路由 docker run 一个 镜像时候 出现\njava.Net.UnknownHostException \n\n 首先觉得是host 问题所以添加host,\n {% note [info] [no-icon] %}\n 不在直接在容器中 `/etc/hosts` 直接添加 容器容器回重置 ,\n ` --add-hotst  yourdomain.com:IP`  \n{% endnote %}\n```bash\ndocker run -d -p 8080:8080 --add-host api.test.com:10.100.33.101\n\n```\n然后 docker exec -it contaierID /bin/bash 进入容器内终端 \n依然ping不通  然后搜到一个 方法\n\n```bash\n# 开启 NAT 转发\n firewall-cmd --zone=public --add-masquerade --permanent\nfirewall-cmd --reload\nsystemctl restart docker\n\n```\n\n\n# something......","slug":"Mark/error/报错记录","published":1,"updated":"2021-03-11T06:26:46.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tx10011dmle9qe6eehl","content":"<h1 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\" git\"></a><i class=\"fab fa-github-square\"></i> git</h1><h3 id=\"error-failed-to-push-some-refs-to-‘git-github-com\"><a href=\"#error-failed-to-push-some-refs-to-‘git-github-com\" class=\"headerlink\" title=\"error: failed to push some refs to ‘git@github.com\"></a>error: failed to push some refs to ‘git@github.com</h3><p>resolve: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n<h3 id=\"删除git文件\"><a href=\"#删除git文件\" class=\"headerlink\" title=\"删除git文件\"></a>删除git文件</h3><p>resolve</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached filename</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\" npm\"></a><i class=\"fab fa-npm\"></i> npm</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Node Sass could not find a binding for your current environment: OS X 64-bit with Node.js 12.x</span><br><span class=\"line\"></span><br><span class=\"line\">Found bindings for the following environments:</span><br><span class=\"line\">  - OS X 64-bit with Node.js 13.x</span><br><span class=\"line\"></span><br><span class=\"line\">## 前阵 更新了node  又降级到 12  </span><br><span class=\"line\"></span><br><span class=\"line\">解决:</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">npm rebuild node-sass</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\" node\"></a><i class=\"fab fa-node\"></i> node</h1><h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\" docker\"></a><i class=\"fab fa-docker\"></i> docker</h1><p>在旁路由 docker run 一个 镜像时候 出现<br>java.Net.UnknownHostException </p>\n<p> 首先觉得是host 问题所以添加host,<br> <div class=\"note [info] [no-icon] flat\"><p>不在直接在容器中 <code>/etc/hosts</code> 直接添加 容器容器回重置 ,<br><code> --add-hotst  yourdomain.com:IP</code>  </p>\n</div></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8080:8080 --add-host api.test.com:10.100.33.101</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后 docker exec -it contaierID /bin/bash 进入容器内终端<br>依然ping不通  然后搜到一个 方法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开启 NAT 转发</span></span><br><span class=\"line\"> firewall-cmd --zone=public --add-masquerade --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">systemctl restart docker</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"something……\"><a href=\"#something……\" class=\"headerlink\" title=\"something……\"></a>something……</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"git\"><a href=\"#git\" class=\"headerlink\" title=\" git\"></a><i class=\"fab fa-github-square\"></i> git</h1><h3 id=\"error-failed-to-push-some-refs-to-‘git-github-com\"><a href=\"#error-failed-to-push-some-refs-to-‘git-github-com\" class=\"headerlink\" title=\"error: failed to push some refs to ‘git@github.com\"></a>error: failed to push some refs to ‘git@github.com</h3><p>resolve: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull --rebase origin master</span><br></pre></td></tr></table></figure>\n\n\n<br/>\n\n<h3 id=\"删除git文件\"><a href=\"#删除git文件\" class=\"headerlink\" title=\"删除git文件\"></a>删除git文件</h3><p>resolve</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached filename</span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\" npm\"></a><i class=\"fab fa-npm\"></i> npm</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Node Sass could not find a binding for your current environment: OS X 64-bit with Node.js 12.x</span><br><span class=\"line\"></span><br><span class=\"line\">Found bindings for the following environments:</span><br><span class=\"line\">  - OS X 64-bit with Node.js 13.x</span><br><span class=\"line\"></span><br><span class=\"line\">## 前阵 更新了node  又降级到 12  </span><br><span class=\"line\"></span><br><span class=\"line\">解决:</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">npm rebuild node-sass</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\" node\"></a><i class=\"fab fa-node\"></i> node</h1><h1 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\" docker\"></a><i class=\"fab fa-docker\"></i> docker</h1><p>在旁路由 docker run 一个 镜像时候 出现<br>java.Net.UnknownHostException </p>\n<p> 首先觉得是host 问题所以添加host,<br> <div class=\"note [info] [no-icon] flat\"><p>不在直接在容器中 <code>/etc/hosts</code> 直接添加 容器容器回重置 ,<br><code> --add-hotst  yourdomain.com:IP</code>  </p>\n</div></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8080:8080 --add-host api.test.com:10.100.33.101</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>然后 docker exec -it contaierID /bin/bash 进入容器内终端<br>依然ping不通  然后搜到一个 方法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开启 NAT 转发</span></span><br><span class=\"line\"> firewall-cmd --zone=public --add-masquerade --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">systemctl restart docker</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"something……\"><a href=\"#something……\" class=\"headerlink\" title=\"something……\"></a>something……</h1>"},{"title":"Docker 命令","date":"2020-01-19T16:00:00.000Z","updated":"2021-03-11T06:26:39.156Z","top_img":null,"cover":"https://picgo.genji.xyz/blog/posts/dockerjpg.jpg","description":"docker 命令记录贴","keywords":"docker","_content":"# docker 命令\n\n{% note info %}\n 用到什么之后再添加.\n{% endnote %}\n\n## 拉取\n\n```bash\ndocker pull  name [:tag|@digest]\ndocker pull debian\ndocker pull debian:latest\ndocker pull gitea/gitea:latest\ndocker pull ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2\n```\n\n\n## docker run\n```bash\ndocker run -d   --name=\"something\" -p 90:80  -v /var/lib/gitea:/data gitea/gitea:latest --restart=always\n\n-d 后台\n--name 命名\n-p 端口映射 前内部 后外部\n-v 共享卷, 也可以理解挂载到相应目录 前外部 后内部\n--restart 重启时候 自动运行\n```\n\n\n## docker 查看\n```bash\ndocker images\ndocker ps\n```\n\n## docker 命名\n```bash\ndocker rename oldName newName      (container) \ndokcer rename 容器ID name:tag (images)\n```\n\n\n##  docker stop/start/restart\n```bash\ndocker stop/start/restart id/ name\n```\n\n\n## 进入docker 容器\n```bash\ndocker exec -it id/name /bin/bash\n```\n\n## 删除镜像\n```bash\ndocker rmi imageID/REPOSITORY:TAG\n```\n\n\n## 删除容器\n```bash\ndocker rm CONTAINERID/name\n\n-f :通过 SIGKILL 信号强制删除一个运行中的容器。\n\n-l :移除容器间的网络连接，而非容器本身。\n\n-v :删除与容器关联的卷。\n```\n\n\n\n## docker 导出\n```bash\ndocker save name >/root/name.tar\ndocker load <name.tar\n\n\ndocker export 98ca36> ubuntu.tar\ndocker import\n```\n\n1. docker save保存的是镜像（image），docker export保存的是容器（container）；\n2. docker load用来载入镜像包，docker import用来载入容器包，但两者都会恢复为镜像；\n3. docker load不能对载入的镜像重命名，而docker import可以为镜像指定新名称。\n\n## docker cp\n\n```bash\ncp 主机目录到/www/ddd 容器/www\ndocker cp /www/ddd 96f7f14e99ab:/www\n\ncp 容器目录www  到主机tmp\ndocker cp  96f7f14e99ab:/www /tmp/\n\n```\n\n ","source":"_posts/Mark/Docker/docker命令.md","raw":"---\ntitle: Docker 命令\ndate: 2020-01-20\nupdated: \ntop_img:\ncover: https://picgo.genji.xyz/blog/posts/dockerjpg.jpg\n\ndescription: \"docker 命令记录贴\"\nkeywords: \"docker\"\ntags: [docker]\ncategories: [mark,docker]\n---\n# docker 命令\n\n{% note info %}\n 用到什么之后再添加.\n{% endnote %}\n\n## 拉取\n\n```bash\ndocker pull  name [:tag|@digest]\ndocker pull debian\ndocker pull debian:latest\ndocker pull gitea/gitea:latest\ndocker pull ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2\n```\n\n\n## docker run\n```bash\ndocker run -d   --name=\"something\" -p 90:80  -v /var/lib/gitea:/data gitea/gitea:latest --restart=always\n\n-d 后台\n--name 命名\n-p 端口映射 前内部 后外部\n-v 共享卷, 也可以理解挂载到相应目录 前外部 后内部\n--restart 重启时候 自动运行\n```\n\n\n## docker 查看\n```bash\ndocker images\ndocker ps\n```\n\n## docker 命名\n```bash\ndocker rename oldName newName      (container) \ndokcer rename 容器ID name:tag (images)\n```\n\n\n##  docker stop/start/restart\n```bash\ndocker stop/start/restart id/ name\n```\n\n\n## 进入docker 容器\n```bash\ndocker exec -it id/name /bin/bash\n```\n\n## 删除镜像\n```bash\ndocker rmi imageID/REPOSITORY:TAG\n```\n\n\n## 删除容器\n```bash\ndocker rm CONTAINERID/name\n\n-f :通过 SIGKILL 信号强制删除一个运行中的容器。\n\n-l :移除容器间的网络连接，而非容器本身。\n\n-v :删除与容器关联的卷。\n```\n\n\n\n## docker 导出\n```bash\ndocker save name >/root/name.tar\ndocker load <name.tar\n\n\ndocker export 98ca36> ubuntu.tar\ndocker import\n```\n\n1. docker save保存的是镜像（image），docker export保存的是容器（container）；\n2. docker load用来载入镜像包，docker import用来载入容器包，但两者都会恢复为镜像；\n3. docker load不能对载入的镜像重命名，而docker import可以为镜像指定新名称。\n\n## docker cp\n\n```bash\ncp 主机目录到/www/ddd 容器/www\ndocker cp /www/ddd 96f7f14e99ab:/www\n\ncp 容器目录www  到主机tmp\ndocker cp  96f7f14e99ab:/www /tmp/\n\n```\n\n ","slug":"Mark/Docker/docker命令","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tx30014dmlecb384s5f","content":"<h1 id=\"docker-命令\"><a href=\"#docker-命令\" class=\"headerlink\" title=\"docker 命令\"></a>docker 命令</h1><div class=\"note info flat\"><p>用到什么之后再添加.</p>\n</div>\n\n<h2 id=\"拉取\"><a href=\"#拉取\" class=\"headerlink\" title=\"拉取\"></a>拉取</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull  name [:tag|@digest]</span><br><span class=\"line\">docker pull debian</span><br><span class=\"line\">docker pull debian:latest</span><br><span class=\"line\">docker pull gitea/gitea:latest</span><br><span class=\"line\">docker pull ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"docker-run\"><a href=\"#docker-run\" class=\"headerlink\" title=\"docker run\"></a>docker run</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d   --name=<span class=\"string\">&quot;something&quot;</span> -p 90:80  -v /var/lib/gitea:/data gitea/gitea:latest --restart=always</span><br><span class=\"line\"></span><br><span class=\"line\">-d 后台</span><br><span class=\"line\">--name 命名</span><br><span class=\"line\">-p 端口映射 前内部 后外部</span><br><span class=\"line\">-v 共享卷, 也可以理解挂载到相应目录 前外部 后内部</span><br><span class=\"line\">--restart 重启时候 自动运行</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"docker-查看\"><a href=\"#docker-查看\" class=\"headerlink\" title=\"docker 查看\"></a>docker 查看</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-命名\"><a href=\"#docker-命名\" class=\"headerlink\" title=\"docker 命名\"></a>docker 命名</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rename oldName newName      (container) </span><br><span class=\"line\">dokcer rename 容器ID name:tag (images)</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"docker-stop-start-restart\"><a href=\"#docker-stop-start-restart\" class=\"headerlink\" title=\"docker stop/start/restart\"></a>docker stop/start/restart</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop/start/restart id/ name</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"进入docker-容器\"><a href=\"#进入docker-容器\" class=\"headerlink\" title=\"进入docker 容器\"></a>进入docker 容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it id/name /bin/bash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除镜像\"><a href=\"#删除镜像\" class=\"headerlink\" title=\"删除镜像\"></a>删除镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi imageID/REPOSITORY:TAG</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm CONTAINERID/name</span><br><span class=\"line\"></span><br><span class=\"line\">-f :通过 SIGKILL 信号强制删除一个运行中的容器。</span><br><span class=\"line\"></span><br><span class=\"line\">-l :移除容器间的网络连接，而非容器本身。</span><br><span class=\"line\"></span><br><span class=\"line\">-v :删除与容器关联的卷。</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"docker-导出\"><a href=\"#docker-导出\" class=\"headerlink\" title=\"docker 导出\"></a>docker 导出</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save name &gt;/root/name.tar</span><br><span class=\"line\">docker load &lt;name.tar</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker <span class=\"built_in\">export</span> 98ca36&gt; ubuntu.tar</span><br><span class=\"line\">docker import</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>docker save保存的是镜像（image），docker export保存的是容器（container）；</li>\n<li>docker load用来载入镜像包，docker import用来载入容器包，但两者都会恢复为镜像；</li>\n<li>docker load不能对载入的镜像重命名，而docker import可以为镜像指定新名称。</li>\n</ol>\n<h2 id=\"docker-cp\"><a href=\"#docker-cp\" class=\"headerlink\" title=\"docker cp\"></a>docker cp</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp 主机目录到/www/ddd 容器/www</span><br><span class=\"line\">docker cp /www/ddd 96f7f14e99ab:/www</span><br><span class=\"line\"></span><br><span class=\"line\">cp 容器目录www  到主机tmp</span><br><span class=\"line\">docker cp  96f7f14e99ab:/www /tmp/</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"docker-命令\"><a href=\"#docker-命令\" class=\"headerlink\" title=\"docker 命令\"></a>docker 命令</h1><div class=\"note info flat\"><p>用到什么之后再添加.</p>\n</div>\n\n<h2 id=\"拉取\"><a href=\"#拉取\" class=\"headerlink\" title=\"拉取\"></a>拉取</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull  name [:tag|@digest]</span><br><span class=\"line\">docker pull debian</span><br><span class=\"line\">docker pull debian:latest</span><br><span class=\"line\">docker pull gitea/gitea:latest</span><br><span class=\"line\">docker pull ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"docker-run\"><a href=\"#docker-run\" class=\"headerlink\" title=\"docker run\"></a>docker run</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d   --name=<span class=\"string\">&quot;something&quot;</span> -p 90:80  -v /var/lib/gitea:/data gitea/gitea:latest --restart=always</span><br><span class=\"line\"></span><br><span class=\"line\">-d 后台</span><br><span class=\"line\">--name 命名</span><br><span class=\"line\">-p 端口映射 前内部 后外部</span><br><span class=\"line\">-v 共享卷, 也可以理解挂载到相应目录 前外部 后内部</span><br><span class=\"line\">--restart 重启时候 自动运行</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"docker-查看\"><a href=\"#docker-查看\" class=\"headerlink\" title=\"docker 查看\"></a>docker 查看</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images</span><br><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-命名\"><a href=\"#docker-命名\" class=\"headerlink\" title=\"docker 命名\"></a>docker 命名</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rename oldName newName      (container) </span><br><span class=\"line\">dokcer rename 容器ID name:tag (images)</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"docker-stop-start-restart\"><a href=\"#docker-stop-start-restart\" class=\"headerlink\" title=\"docker stop/start/restart\"></a>docker stop/start/restart</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop/start/restart id/ name</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"进入docker-容器\"><a href=\"#进入docker-容器\" class=\"headerlink\" title=\"进入docker 容器\"></a>进入docker 容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it id/name /bin/bash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除镜像\"><a href=\"#删除镜像\" class=\"headerlink\" title=\"删除镜像\"></a>删除镜像</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi imageID/REPOSITORY:TAG</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm CONTAINERID/name</span><br><span class=\"line\"></span><br><span class=\"line\">-f :通过 SIGKILL 信号强制删除一个运行中的容器。</span><br><span class=\"line\"></span><br><span class=\"line\">-l :移除容器间的网络连接，而非容器本身。</span><br><span class=\"line\"></span><br><span class=\"line\">-v :删除与容器关联的卷。</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"docker-导出\"><a href=\"#docker-导出\" class=\"headerlink\" title=\"docker 导出\"></a>docker 导出</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save name &gt;/root/name.tar</span><br><span class=\"line\">docker load &lt;name.tar</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker <span class=\"built_in\">export</span> 98ca36&gt; ubuntu.tar</span><br><span class=\"line\">docker import</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>docker save保存的是镜像（image），docker export保存的是容器（container）；</li>\n<li>docker load用来载入镜像包，docker import用来载入容器包，但两者都会恢复为镜像；</li>\n<li>docker load不能对载入的镜像重命名，而docker import可以为镜像指定新名称。</li>\n</ol>\n<h2 id=\"docker-cp\"><a href=\"#docker-cp\" class=\"headerlink\" title=\"docker cp\"></a>docker cp</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp 主机目录到/www/ddd 容器/www</span><br><span class=\"line\">docker cp /www/ddd 96f7f14e99ab:/www</span><br><span class=\"line\"></span><br><span class=\"line\">cp 容器目录www  到主机tmp</span><br><span class=\"line\">docker cp  96f7f14e99ab:/www /tmp/</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Git 同时push到 多个仓库","top_img":"https://picgo.genji.xyz/blog/posts/git_push.jpg","description":"Git push到多个仓库 ","keywords":"git","date":"2020-01-01T16:00:00.000Z","cover":"https://picgo.genji.xyz/blog/posts/git_push.jpg","_content":"\n-----\n\n# git push 到多个仓库\n\n##  手动档\n\n随便初始化\n\n```bash\ngit init \ntouch README.md\ngit add .\ngit commit -m\"some thing\"\ngti remote add origin   git@gitee.com:liulingyue/test.git\n\ngit push -u origin master\n```\n\n每个仓库都有这些话吧 .\n\n 创建后有一个.git 隐藏文件  里面有个config\n\n\n\n![image-20200704010944468](https://picgo.genji.xyz/blog/posts/image-20200704010944468.png)\n\n\n\n这时候添加一个新的仓库 ,  注意 ` add` 后面不能是origin\n\n```bash\ngit remote add hello  git@gitee.com:liulingyue/ddddfdfdfdfdfd.git\n```\n\n\n\n![image-20200704005128019](https://picgo.genji.xyz/blog/posts/image-20200704005128019.png)\n\n\n\n再看 config  多出来个东西    `remote \"hello\"`.\n\n\n\n这样就可以手动push  任意仓库\n\n```bash\ngit push origin \ngit push hello \n```\n\n\n\n-----\n\n\n\n##  自动档\n\n![image-20200704005845355](https://picgo.genji.xyz/blog/posts/image-20200704005845355.png)\n\n\n\n 直接添加 \n\n直接 git push \n\n![image-20200704010013126](https://picgo.genji.xyz/blog/posts/image-20200704010013126.png)","source":"_posts/Mark/git/git_push多个仓库.md","raw":"---\ntitle: Git 同时push到 多个仓库\ntop_img: https://picgo.genji.xyz/blog/posts/git_push.jpg\ndescription: \"Git push到多个仓库 \"\nkeywords: \"git\"\ndate: 2020-01-02 00:00:00\ncover: https://picgo.genji.xyz/blog/posts/git_push.jpg\ntags: [git]\ncategories: [mark,git]\n---\n\n-----\n\n# git push 到多个仓库\n\n##  手动档\n\n随便初始化\n\n```bash\ngit init \ntouch README.md\ngit add .\ngit commit -m\"some thing\"\ngti remote add origin   git@gitee.com:liulingyue/test.git\n\ngit push -u origin master\n```\n\n每个仓库都有这些话吧 .\n\n 创建后有一个.git 隐藏文件  里面有个config\n\n\n\n![image-20200704010944468](https://picgo.genji.xyz/blog/posts/image-20200704010944468.png)\n\n\n\n这时候添加一个新的仓库 ,  注意 ` add` 后面不能是origin\n\n```bash\ngit remote add hello  git@gitee.com:liulingyue/ddddfdfdfdfdfd.git\n```\n\n\n\n![image-20200704005128019](https://picgo.genji.xyz/blog/posts/image-20200704005128019.png)\n\n\n\n再看 config  多出来个东西    `remote \"hello\"`.\n\n\n\n这样就可以手动push  任意仓库\n\n```bash\ngit push origin \ngit push hello \n```\n\n\n\n-----\n\n\n\n##  自动档\n\n![image-20200704005845355](https://picgo.genji.xyz/blog/posts/image-20200704005845355.png)\n\n\n\n 直接添加 \n\n直接 git push \n\n![image-20200704010013126](https://picgo.genji.xyz/blog/posts/image-20200704010013126.png)","slug":"Mark/git/git_push多个仓库","published":1,"updated":"2021-03-11T06:38:02.478Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tx40018dmle18hveqdr","content":"<hr>\n<h1 id=\"git-push-到多个仓库\"><a href=\"#git-push-到多个仓库\" class=\"headerlink\" title=\"git push 到多个仓库\"></a>git push 到多个仓库</h1><h2 id=\"手动档\"><a href=\"#手动档\" class=\"headerlink\" title=\"手动档\"></a>手动档</h2><p>随便初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init </span><br><span class=\"line\">touch README.md</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m<span class=\"string\">&quot;some thing&quot;</span></span><br><span class=\"line\">gti remote add origin   git@gitee.com:liulingyue/test.git</span><br><span class=\"line\"></span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<p>每个仓库都有这些话吧 .</p>\n<p> 创建后有一个.git 隐藏文件  里面有个config</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704010944468.png\" alt=\"image-20200704010944468\"></p>\n<p>这时候添加一个新的仓库 ,  注意 <code> add</code> 后面不能是origin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add hello  git@gitee.com:liulingyue/ddddfdfdfdfdfd.git</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704005128019.png\" alt=\"image-20200704005128019\"></p>\n<p>再看 config  多出来个东西    <code>remote &quot;hello&quot;</code>.</p>\n<p>这样就可以手动push  任意仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin </span><br><span class=\"line\">git push hello </span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h2 id=\"自动档\"><a href=\"#自动档\" class=\"headerlink\" title=\"自动档\"></a>自动档</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704005845355.png\" alt=\"image-20200704005845355\"></p>\n<p> 直接添加 </p>\n<p>直接 git push </p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704010013126.png\" alt=\"image-20200704010013126\"></p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<h1 id=\"git-push-到多个仓库\"><a href=\"#git-push-到多个仓库\" class=\"headerlink\" title=\"git push 到多个仓库\"></a>git push 到多个仓库</h1><h2 id=\"手动档\"><a href=\"#手动档\" class=\"headerlink\" title=\"手动档\"></a>手动档</h2><p>随便初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init </span><br><span class=\"line\">touch README.md</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m<span class=\"string\">&quot;some thing&quot;</span></span><br><span class=\"line\">gti remote add origin   git@gitee.com:liulingyue/test.git</span><br><span class=\"line\"></span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<p>每个仓库都有这些话吧 .</p>\n<p> 创建后有一个.git 隐藏文件  里面有个config</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704010944468.png\" alt=\"image-20200704010944468\"></p>\n<p>这时候添加一个新的仓库 ,  注意 <code> add</code> 后面不能是origin</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add hello  git@gitee.com:liulingyue/ddddfdfdfdfdfd.git</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704005128019.png\" alt=\"image-20200704005128019\"></p>\n<p>再看 config  多出来个东西    <code>remote &quot;hello&quot;</code>.</p>\n<p>这样就可以手动push  任意仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin </span><br><span class=\"line\">git push hello </span><br></pre></td></tr></table></figure>\n\n\n\n<hr>\n<h2 id=\"自动档\"><a href=\"#自动档\" class=\"headerlink\" title=\"自动档\"></a>自动档</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704005845355.png\" alt=\"image-20200704005845355\"></p>\n<p> 直接添加 </p>\n<p>直接 git push </p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200704010013126.png\" alt=\"image-20200704010013126\"></p>\n"},{"title":"Git 命令","top_img":"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=924384885,4203827437&fm=26&gp=0.jpg","description":"Git 命令","keywords":"git","date":"2020-01-01T16:00:00.000Z","cover":"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=924384885,4203827437&fm=26&gp=0.jpg","_content":"### 公钥\n\n```bash\nssh-keygen -t rsa -C \"xxxxx@xxxxx.com\"  \n```\n-t   type   -C  commit\n\n可以设置passphrase ( 安全保障 但自动部署有点麻烦 )\n\n<br>\n\n### 手残二连\n\n```bash\ngit config --global user.name \"\"\ngit config --global user.email \"\"\n```\n\n```bash\ngit config --list\n```\n<br>\n\n### 脑残五连\n\n```bash\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin      https || ssh \ngit push -u origin master\n```\n\n<br>\n\n\n\n### 代理\n\n```bash\ngit config --global http.https://github.com.proxy https://127.0.0.1:1087\ngit config --global https.https://github.com.proxy https://127.0.0.1:1087\n\n\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:1086\ngit config --global https.https://github.com.proxy socks5://127.0.0.1:1086\n\n\n\n```\n\n\n<br>\n\n\n### 取消代理\n\n```bash\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n```\n\n<br>\n\n### 删除git文件\n\n```bash\ngit rm --cached filename\n```\n<br>\n\n### branch\n\n```bash\ngit branch             //list 分支\ngit branch  name       //创建\ngit checkout name      //切换\ngit checkout -b        //创建并切换\n\n\ngit checkout -b name origin/name  //取远程分支合并到本地\n```\n\n\n\n\n","source":"_posts/Mark/git/git命令.md","raw":"---\ntitle: Git 命令\ntop_img: https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=924384885,4203827437&fm=26&gp=0.jpg\ndescription: \"Git 命令\"\nkeywords: \"git\"\ndate: 2020-01-02\ncover: https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=924384885,4203827437&fm=26&gp=0.jpg\ntags: [git]\ncategories: [mark,git]\n---\n### 公钥\n\n```bash\nssh-keygen -t rsa -C \"xxxxx@xxxxx.com\"  \n```\n-t   type   -C  commit\n\n可以设置passphrase ( 安全保障 但自动部署有点麻烦 )\n\n<br>\n\n### 手残二连\n\n```bash\ngit config --global user.name \"\"\ngit config --global user.email \"\"\n```\n\n```bash\ngit config --list\n```\n<br>\n\n### 脑残五连\n\n```bash\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin      https || ssh \ngit push -u origin master\n```\n\n<br>\n\n\n\n### 代理\n\n```bash\ngit config --global http.https://github.com.proxy https://127.0.0.1:1087\ngit config --global https.https://github.com.proxy https://127.0.0.1:1087\n\n\ngit config --global http.https://github.com.proxy socks5://127.0.0.1:1086\ngit config --global https.https://github.com.proxy socks5://127.0.0.1:1086\n\n\n\n```\n\n\n<br>\n\n\n### 取消代理\n\n```bash\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n```\n\n<br>\n\n### 删除git文件\n\n```bash\ngit rm --cached filename\n```\n<br>\n\n### branch\n\n```bash\ngit branch             //list 分支\ngit branch  name       //创建\ngit checkout name      //切换\ngit checkout -b        //创建并切换\n\n\ngit checkout -b name origin/name  //取远程分支合并到本地\n```\n\n\n\n\n","slug":"Mark/git/git命令","published":1,"updated":"2021-03-11T06:26:53.831Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tx5001admle85rqf7bu","content":"<h3 id=\"公钥\"><a href=\"#公钥\" class=\"headerlink\" title=\"公钥\"></a>公钥</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;xxxxx@xxxxx.com&quot;</span>  </span><br></pre></td></tr></table></figure>\n<p>-t   type   -C  commit</p>\n<p>可以设置passphrase ( 安全保障 但自动部署有点麻烦 )</p>\n<br>\n\n<h3 id=\"手残二连\"><a href=\"#手残二连\" class=\"headerlink\" title=\"手残二连\"></a>手残二连</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n<br>\n\n<h3 id=\"脑残五连\"><a href=\"#脑残五连\" class=\"headerlink\" title=\"脑残五连\"></a>脑残五连</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">git remote add origin      https || ssh </span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<br>\n\n\n\n<h3 id=\"代理\"><a href=\"#代理\" class=\"headerlink\" title=\"代理\"></a>代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.https://github.com.proxy https://127.0.0.1:1087</span><br><span class=\"line\">git config --global https.https://github.com.proxy https://127.0.0.1:1087</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://127.0.0.1:1086</span><br><span class=\"line\">git config --global https.https://github.com.proxy socks5://127.0.0.1:1086</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<br>\n\n\n<h3 id=\"取消代理\"><a href=\"#取消代理\" class=\"headerlink\" title=\"取消代理\"></a>取消代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> https.proxy</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h3 id=\"删除git文件\"><a href=\"#删除git文件\" class=\"headerlink\" title=\"删除git文件\"></a>删除git文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached filename</span><br></pre></td></tr></table></figure>\n<br>\n\n<h3 id=\"branch\"><a href=\"#branch\" class=\"headerlink\" title=\"branch\"></a>branch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch             //list 分支</span><br><span class=\"line\">git branch  name       //创建</span><br><span class=\"line\">git checkout name      //切换</span><br><span class=\"line\">git checkout -b        //创建并切换</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git checkout -b name origin/name  //取远程分支合并到本地</span><br></pre></td></tr></table></figure>\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"公钥\"><a href=\"#公钥\" class=\"headerlink\" title=\"公钥\"></a>公钥</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;xxxxx@xxxxx.com&quot;</span>  </span><br></pre></td></tr></table></figure>\n<p>-t   type   -C  commit</p>\n<p>可以设置passphrase ( 安全保障 但自动部署有点麻烦 )</p>\n<br>\n\n<h3 id=\"手残二连\"><a href=\"#手残二连\" class=\"headerlink\" title=\"手残二连\"></a>手残二连</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n<br>\n\n<h3 id=\"脑残五连\"><a href=\"#脑残五连\" class=\"headerlink\" title=\"脑残五连\"></a>脑残五连</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">git remote add origin      https || ssh </span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n\n<br>\n\n\n\n<h3 id=\"代理\"><a href=\"#代理\" class=\"headerlink\" title=\"代理\"></a>代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global http.https://github.com.proxy https://127.0.0.1:1087</span><br><span class=\"line\">git config --global https.https://github.com.proxy https://127.0.0.1:1087</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git config --global http.https://github.com.proxy socks5://127.0.0.1:1086</span><br><span class=\"line\">git config --global https.https://github.com.proxy socks5://127.0.0.1:1086</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<br>\n\n\n<h3 id=\"取消代理\"><a href=\"#取消代理\" class=\"headerlink\" title=\"取消代理\"></a>取消代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> https.proxy</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h3 id=\"删除git文件\"><a href=\"#删除git文件\" class=\"headerlink\" title=\"删除git文件\"></a>删除git文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached filename</span><br></pre></td></tr></table></figure>\n<br>\n\n<h3 id=\"branch\"><a href=\"#branch\" class=\"headerlink\" title=\"branch\"></a>branch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch             //list 分支</span><br><span class=\"line\">git branch  name       //创建</span><br><span class=\"line\">git checkout name      //切换</span><br><span class=\"line\">git checkout -b        //创建并切换</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">git checkout -b name origin/name  //取远程分支合并到本地</span><br></pre></td></tr></table></figure>\n\n\n\n\n"},{"title":"Markdown语法和Typora快捷键","date":"2020-02-29T16:00:00.000Z","updated":"2021-03-11T06:30:49.920Z","cover":"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png","description":"一些常用的语法和快捷键","keywords":"Markdown","_content":"\n# 标题1-6\n\n```md\n#\n##\n###\n####\n#####\n######\n```\n\n# 段落\n\n```md\n换行\n\n两个以上空格 加 回车\n\n```\n\n我是普通回车\n\n我是两个空格加回车  \n\n我是两个空格\n\n我什么都不是\n\n## 字体\n\n```md\n*斜体文本*\n**粗体文本**\n***粗斜体文本***\n```\n\n*斜体文本*\n**粗体文本**\n***粗斜体文本***\n\n最常用的是粗体\n\n## 分隔线(没有感情的分隔线)\n\n```md\n***\n* * * \n*****\n- - - \n-----\n我是看不出哦区别 我常用 ----- 好理解\n```\n\n***\n* * *\n*****\n- - -\n-----\n\n## 删除线(打脸专用)\n\n```md\n~~打脸了~~\n```\n\n~~打脸了~~\n\n## 下划线\n\n```\n<u>带下划线文本</u>\n```\n\n<u>带下划线文本</u>\n\n# 代码\n\n## 段落中代码\n\n\n```md\n`hello`\n```\n\n`hello`\n\n\n\n## 代码块\n\n```md\n​```md\n\n\n\n​```\n\n​```语言 + 回车\n```\n\n# 链接\n\n```md\n[百度](baidu.com) \n\n百度[][1]\n淘宝[][taobao]\n\n[1]:www.baidu.con\n[taobao]:www.taobao.com\n\ncommand + k\n```\n\n[百度](baidu.com) \n\n百度[][1]\n淘宝[][taobao]\n\n[1]:www.baidu.con\n[taobao]:www.taobao.com\n\n# 图片\n\n```md\n![markdown](https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png)\n\n缩放得用 html css \n<img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" style=\"zoom:25%;\" /> \n\n\nctrl + command + i\n```\n\n![markdown](https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png)\n\n<img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" style=\"zoom:25%;\" />\n\n \n\n# 列表\n\n```md\n1. hello\n\t+ hi\n\t+ bye\n* hello\n\t- hi\n\t- bye\n\n```\n\n 1. hello\n\t+ hi\n\t+ bye\n* hello\n\t- hi\n\t- bye\n\n\n\n\n\n\n\n\n\n# 其他\n\nMarkdown 还能各种画图  数学公式 等等 \n\n我敬而远之.\n\n","source":"_posts/Mark/md/Markdown 语法.md","raw":"---\ntitle: Markdown语法和Typora快捷键\ndate: 2020-03-01 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\ndescription: 一些常用的语法和快捷键\n\ntags:  \t[Markdown,Typora]\nkeywords: Markdown\n\ncategories: [mark,md]\n---\n\n# 标题1-6\n\n```md\n#\n##\n###\n####\n#####\n######\n```\n\n# 段落\n\n```md\n换行\n\n两个以上空格 加 回车\n\n```\n\n我是普通回车\n\n我是两个空格加回车  \n\n我是两个空格\n\n我什么都不是\n\n## 字体\n\n```md\n*斜体文本*\n**粗体文本**\n***粗斜体文本***\n```\n\n*斜体文本*\n**粗体文本**\n***粗斜体文本***\n\n最常用的是粗体\n\n## 分隔线(没有感情的分隔线)\n\n```md\n***\n* * * \n*****\n- - - \n-----\n我是看不出哦区别 我常用 ----- 好理解\n```\n\n***\n* * *\n*****\n- - -\n-----\n\n## 删除线(打脸专用)\n\n```md\n~~打脸了~~\n```\n\n~~打脸了~~\n\n## 下划线\n\n```\n<u>带下划线文本</u>\n```\n\n<u>带下划线文本</u>\n\n# 代码\n\n## 段落中代码\n\n\n```md\n`hello`\n```\n\n`hello`\n\n\n\n## 代码块\n\n```md\n​```md\n\n\n\n​```\n\n​```语言 + 回车\n```\n\n# 链接\n\n```md\n[百度](baidu.com) \n\n百度[][1]\n淘宝[][taobao]\n\n[1]:www.baidu.con\n[taobao]:www.taobao.com\n\ncommand + k\n```\n\n[百度](baidu.com) \n\n百度[][1]\n淘宝[][taobao]\n\n[1]:www.baidu.con\n[taobao]:www.taobao.com\n\n# 图片\n\n```md\n![markdown](https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png)\n\n缩放得用 html css \n<img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" style=\"zoom:25%;\" /> \n\n\nctrl + command + i\n```\n\n![markdown](https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png)\n\n<img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" style=\"zoom:25%;\" />\n\n \n\n# 列表\n\n```md\n1. hello\n\t+ hi\n\t+ bye\n* hello\n\t- hi\n\t- bye\n\n```\n\n 1. hello\n\t+ hi\n\t+ bye\n* hello\n\t- hi\n\t- bye\n\n\n\n\n\n\n\n\n\n# 其他\n\nMarkdown 还能各种画图  数学公式 等等 \n\n我敬而远之.\n\n","slug":"Mark/md/Markdown 语法","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i2tx6001edmle2rnxhgpo","content":"<h1 id=\"标题1-6\"><a href=\"#标题1-6\" class=\"headerlink\" title=\"标题1-6\"></a>标题1-6</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">#</span></span><br><span class=\"line\"><span class=\"section\">##</span></span><br><span class=\"line\"><span class=\"section\">###</span></span><br><span class=\"line\"><span class=\"section\">####</span></span><br><span class=\"line\"><span class=\"section\">#####</span></span><br><span class=\"line\"><span class=\"section\">######</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">换行</span><br><span class=\"line\"></span><br><span class=\"line\">两个以上空格 加 回车</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>我是普通回车</p>\n<p>我是两个空格加回车  </p>\n<p>我是两个空格</p>\n<p>我什么都不是</p>\n<h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体文本*</span></span><br><span class=\"line\"><span class=\"strong\">**粗体文本**</span></span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体文本<span class=\"strong\">**<span class=\"emphasis\">*</span></span></span></span></span><br></pre></td></tr></table></figure>\n\n<p><em>斜体文本</em><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong></p>\n<p>最常用的是粗体</p>\n<h2 id=\"分隔线-没有感情的分隔线\"><a href=\"#分隔线-没有感情的分隔线\" class=\"headerlink\" title=\"分隔线(没有感情的分隔线)\"></a>分隔线(没有感情的分隔线)</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">*</span> <span class=\"emphasis\">* *</span> </span></span><br><span class=\"line\"><span class=\"strong\">**</span><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">- - - </span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">-----</span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">我是看不出哦区别 我常用 ----- 好理解</span></span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<h2 id=\"删除线-打脸专用\"><a href=\"#删除线-打脸专用\" class=\"headerlink\" title=\"删除线(打脸专用)\"></a>删除线(打脸专用)</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~打脸了~~</span><br></pre></td></tr></table></figure>\n\n<p><del>打脸了</del></p>\n<h2 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;u&gt;带下划线文本&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure>\n\n<p><u>带下划线文本</u></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><h2 id=\"段落中代码\"><a href=\"#段落中代码\" class=\"headerlink\" title=\"段落中代码\"></a>段落中代码</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`hello`</span></span><br></pre></td></tr></table></figure>\n\n<p><code>hello</code></p>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​<span class=\"code\">```md</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">​```</span></span><br><span class=\"line\"></span><br><span class=\"line\">​<span class=\"code\">```语言 + 回车</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">百度</span>](<span class=\"link\">baidu.com</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">百度[][1]</span><br><span class=\"line\">淘宝[][taobao]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">1</span>]:<span class=\"link\">www.baidu.con</span></span><br><span class=\"line\">[<span class=\"symbol\">taobao</span>]:<span class=\"link\">www.taobao.com</span></span><br><span class=\"line\"></span><br><span class=\"line\">command + k</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"baidu.com\">百度</a> </p>\n<p>百度<a href=\"www.baidu.con\"></a><br>淘宝<a href=\"www.taobao.com\"></a></p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">markdown</span>](<span class=\"link\">https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">缩放得用 html css </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;zoom:25%;&quot;</span> /&gt;</span></span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ctrl + command + i</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" alt=\"markdown\"></p>\n<img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" style=\"zoom:25%;\" />\n\n\n\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> hello</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> hi</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> bye</span><br><span class=\"line\"><span class=\"bullet\">*</span> hello</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> hi</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> bye</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>hello<ul>\n<li>hi</li>\n<li>bye</li>\n</ul>\n<ul>\n<li>hello</li>\n</ul>\n<ul>\n<li>hi</li>\n<li>bye</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>Markdown 还能各种画图  数学公式 等等 </p>\n<p>我敬而远之.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"标题1-6\"><a href=\"#标题1-6\" class=\"headerlink\" title=\"标题1-6\"></a>标题1-6</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">#</span></span><br><span class=\"line\"><span class=\"section\">##</span></span><br><span class=\"line\"><span class=\"section\">###</span></span><br><span class=\"line\"><span class=\"section\">####</span></span><br><span class=\"line\"><span class=\"section\">#####</span></span><br><span class=\"line\"><span class=\"section\">######</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"段落\"><a href=\"#段落\" class=\"headerlink\" title=\"段落\"></a>段落</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">换行</span><br><span class=\"line\"></span><br><span class=\"line\">两个以上空格 加 回车</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>我是普通回车</p>\n<p>我是两个空格加回车  </p>\n<p>我是两个空格</p>\n<p>我什么都不是</p>\n<h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"emphasis\">*斜体文本*</span></span><br><span class=\"line\"><span class=\"strong\">**粗体文本**</span></span><br><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*粗斜体文本<span class=\"strong\">**<span class=\"emphasis\">*</span></span></span></span></span><br></pre></td></tr></table></figure>\n\n<p><em>斜体文本</em><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong></p>\n<p>最常用的是粗体</p>\n<h2 id=\"分隔线-没有感情的分隔线\"><a href=\"#分隔线-没有感情的分隔线\" class=\"headerlink\" title=\"分隔线(没有感情的分隔线)\"></a>分隔线(没有感情的分隔线)</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">*</span> <span class=\"emphasis\">* *</span> </span></span><br><span class=\"line\"><span class=\"strong\">**</span><span class=\"strong\">**<span class=\"emphasis\">*</span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">- - - </span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">-----</span></span></span><br><span class=\"line\"><span class=\"strong\"><span class=\"emphasis\">我是看不出哦区别 我常用 ----- 好理解</span></span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<h2 id=\"删除线-打脸专用\"><a href=\"#删除线-打脸专用\" class=\"headerlink\" title=\"删除线(打脸专用)\"></a>删除线(打脸专用)</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~~打脸了~~</span><br></pre></td></tr></table></figure>\n\n<p><del>打脸了</del></p>\n<h2 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;u&gt;带下划线文本&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure>\n\n<p><u>带下划线文本</u></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><h2 id=\"段落中代码\"><a href=\"#段落中代码\" class=\"headerlink\" title=\"段落中代码\"></a>段落中代码</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"code\">`hello`</span></span><br></pre></td></tr></table></figure>\n\n<p><code>hello</code></p>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​<span class=\"code\">```md</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">​```</span></span><br><span class=\"line\"></span><br><span class=\"line\">​<span class=\"code\">```语言 + 回车</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">百度</span>](<span class=\"link\">baidu.com</span>) </span><br><span class=\"line\"></span><br><span class=\"line\">百度[][1]</span><br><span class=\"line\">淘宝[][taobao]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"symbol\">1</span>]:<span class=\"link\">www.baidu.con</span></span><br><span class=\"line\">[<span class=\"symbol\">taobao</span>]:<span class=\"link\">www.taobao.com</span></span><br><span class=\"line\"></span><br><span class=\"line\">command + k</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"baidu.com\">百度</a> </p>\n<p>百度<a href=\"www.baidu.con\"></a><br>淘宝<a href=\"www.taobao.com\"></a></p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">markdown</span>](<span class=\"link\">https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">缩放得用 html css </span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png&quot;</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;zoom:25%;&quot;</span> /&gt;</span></span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ctrl + command + i</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" alt=\"markdown\"></p>\n<img src=\"https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png\" style=\"zoom:25%;\" />\n\n\n\n<h1 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h1><figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">1.</span> hello</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> hi</span><br><span class=\"line\"><span class=\"bullet\">\t+</span> bye</span><br><span class=\"line\"><span class=\"bullet\">*</span> hello</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> hi</span><br><span class=\"line\"><span class=\"bullet\">\t-</span> bye</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>hello<ul>\n<li>hi</li>\n<li>bye</li>\n</ul>\n<ul>\n<li>hello</li>\n</ul>\n<ul>\n<li>hi</li>\n<li>bye</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>Markdown 还能各种画图  数学公式 等等 </p>\n<p>我敬而远之.</p>\n"},{"title":"mac 常用指令/快捷键","date":"2020-02-14T16:00:00.000Z","updated":"2021-03-11T06:39:17.358Z","cover":"https://picgo.genji.xyz/blog/posts/macbook-pro-13-inch.jpg","description":"mac 常用指令/快捷键","keywords":"Mac,指令,快捷键","_content":"\n\n\n##  指令\n\n```bash\n#允许安装任何来源软件命令\nsudo spctl --master-disable\n\n# 关闭键盘 fn 功能按键 \ndefaults write .GlobalPreferences com.apple.keyboard.fnState -bool yes\n\n```\n\n\n\n## 快捷键\n\n```\n\nshift command  .   \n## 显示/隐藏文件 \n\ncommand  alt esc  \n强制退出\n\n\n```\n\n","source":"_posts/Mark/mac常用指令和快捷键.md","raw":"---\n\ntitle: mac 常用指令/快捷键 \ndate: 2020-02-15 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/macbook-pro-13-inch.jpg\ndescription: mac 常用指令/快捷键 \n\ntags:  \tMac\nkeywords: Mac,指令,快捷键\ncategories: [mark,快捷键]\n---\n\n\n\n##  指令\n\n```bash\n#允许安装任何来源软件命令\nsudo spctl --master-disable\n\n# 关闭键盘 fn 功能按键 \ndefaults write .GlobalPreferences com.apple.keyboard.fnState -bool yes\n\n```\n\n\n\n## 快捷键\n\n```\n\nshift command  .   \n## 显示/隐藏文件 \n\ncommand  alt esc  \n强制退出\n\n\n```\n\n","slug":"Mark/mac常用指令和快捷键","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4i3u6p0000i4le4jt296hm","content":"<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#允许安装任何来源软件命令</span></span><br><span class=\"line\">sudo spctl --master-disable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭键盘 fn 功能按键 </span></span><br><span class=\"line\">defaults write .GlobalPreferences com.apple.keyboard.fnState -bool yes</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">shift command  .   </span><br><span class=\"line\">## 显示&#x2F;隐藏文件 </span><br><span class=\"line\"></span><br><span class=\"line\">command  alt esc  </span><br><span class=\"line\">强制退出</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#允许安装任何来源软件命令</span></span><br><span class=\"line\">sudo spctl --master-disable</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭键盘 fn 功能按键 </span></span><br><span class=\"line\">defaults write .GlobalPreferences com.apple.keyboard.fnState -bool yes</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">shift command  .   </span><br><span class=\"line\">## 显示&#x2F;隐藏文件 </span><br><span class=\"line\"></span><br><span class=\"line\">command  alt esc  </span><br><span class=\"line\">强制退出</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"移动端 rem自适应","top_img":"https://cdn.dribbble.com/users/2181562/screenshots/11874821/media/7f180ffc5c497dabfb96f9dac1647ddb.jpg","description":"rem 自适应","keywords":"rem","date":"2019-12-31T16:00:00.000Z","cover":"https://cdn.dribbble.com/users/2181562/screenshots/11874821/media/7f180ffc5c497dabfb96f9dac1647ddb.jpg","_content":"\n# 移动端 rem 自适应\n\n### 1. rem --> html{font-size: 100px   or 625%   };\n   chrome强制字体最小值为12px，低于12px按12px处理.\n   1rem=10px就变成1rem=12px，出现偏差.\n\n### 2. `<meta name='viewport' content='width=device-width,initial-scale=1,user-scale=no' />`\n\n### 3. 高清适配方案中iPhone X全屏兼容：\n  1、需要在viewport中添加 viewport-fit=cover，js和meta标签中都要添加；\n  2、同时iPhone X屏幕底部圆弧区域占位高度使用 calc(constant(safe-area-inset-bottom) * 3) 作为padding-bottom， margin-bottom等高度属性的值。iPhone X上，高清适配方案中，此值等价于.34rem，即34逻辑像素。根据实际情况可以修改* 3这个系数来调整占位区域的高度，但一定要使用constant(safe-area-inset-bottom)。在ios11下，非iPhone X的设备此值为0，使用时需要注意样式覆盖的情况。\n\n### postcss   px2rem\n```js\n//vue.config.js\n\nmodule.exports = {\n  css: {\n    loaderOptions: {\n      postcss: {\n        plugins: [\n          require(\"autoprefixer\")(),\n          require(\"postcss-plugin-px2rem\")({\n            rootValue: 100, //换算基数， 默认100  ，这样的话把根标签的字体规定为1rem为100px,这样就可以从设计稿上量出多少个px直接在代码中写多上px了。\n            // unitPrecision: 5, //允许REM单位增长到的十进制数字。\n            propWhiteList: [], //默认值是一个空数组，这意味着禁用白名单并启用所有属性。\n            exclude: /(node_module)/, //默认false，可以（reg）利用正则表达式排除某些文件夹的方法，例如/(node_module)\\/如果想把前端UI框架内的px也转换成rem，请把此属性设为默认值\n            selectorBlackList: [\"html\"], //要忽略并保留为px的选择器\n            // ignoreIdentifier: false,  //（boolean/string）忽略单个属性的方法，启用ignoreidentifier后，replace将自动设置为true。\n            // replace: true, // （布尔值）替换包含REM的规则，而不是添加回退。\n            mediaQuery: false, //（布尔值）允许在媒体查询中转换px。\n            minPixelValue: 3, //设置要替换的最小像素值(3px会被转rem)。 默认 0\n          }),\n        ],\n      },\n    },\n  },\n};\n```\n\n```css\nhtml{\n\tfont-size: 100px   or 625%  \n}\n```\n\n```js\nmethods: {\n    rem() {\n      var designWidth = 750,\n        rem2px = 100;\n      document.documentElement.style.fontSize =\n        (((window.innerWidth / designWidth) * rem2px) / 16) * 100 + \"%\";\n    },\n  },\n  created() {\n    this.rem(),\n      window.addEventListener(\n        \"resize\",\n        () => {\n          clearTimeout(timer);\n          let timer = setTimeout(() => {\n            this.rem()\n          }, 200);\n        },\n        false\n      );\n  },\n```\n\n\n\n\n{% blockquote  %}\n也可 将 fontsize  填入黑名单 , 媒体查询控制 字体的大小 避免 文字过小  .\n{% endblockquote %}\n\n","source":"_posts/前端/css/responsive_rem.md","raw":"---\ntitle: 移动端 rem自适应\ntop_img: https://cdn.dribbble.com/users/2181562/screenshots/11874821/media/7f180ffc5c497dabfb96f9dac1647ddb.jpg\ndescription: \"rem 自适应\"\nkeywords: \"rem\"\ndate: 2020-01-01 00:00:00\ncover: https://cdn.dribbble.com/users/2181562/screenshots/11874821/media/7f180ffc5c497dabfb96f9dac1647ddb.jpg\ntags: [rem, meta, postcss, px2rem, 移动端,响应式]\ncategories: [前端,css]\n---\n\n# 移动端 rem 自适应\n\n### 1. rem --> html{font-size: 100px   or 625%   };\n   chrome强制字体最小值为12px，低于12px按12px处理.\n   1rem=10px就变成1rem=12px，出现偏差.\n\n### 2. `<meta name='viewport' content='width=device-width,initial-scale=1,user-scale=no' />`\n\n### 3. 高清适配方案中iPhone X全屏兼容：\n  1、需要在viewport中添加 viewport-fit=cover，js和meta标签中都要添加；\n  2、同时iPhone X屏幕底部圆弧区域占位高度使用 calc(constant(safe-area-inset-bottom) * 3) 作为padding-bottom， margin-bottom等高度属性的值。iPhone X上，高清适配方案中，此值等价于.34rem，即34逻辑像素。根据实际情况可以修改* 3这个系数来调整占位区域的高度，但一定要使用constant(safe-area-inset-bottom)。在ios11下，非iPhone X的设备此值为0，使用时需要注意样式覆盖的情况。\n\n### postcss   px2rem\n```js\n//vue.config.js\n\nmodule.exports = {\n  css: {\n    loaderOptions: {\n      postcss: {\n        plugins: [\n          require(\"autoprefixer\")(),\n          require(\"postcss-plugin-px2rem\")({\n            rootValue: 100, //换算基数， 默认100  ，这样的话把根标签的字体规定为1rem为100px,这样就可以从设计稿上量出多少个px直接在代码中写多上px了。\n            // unitPrecision: 5, //允许REM单位增长到的十进制数字。\n            propWhiteList: [], //默认值是一个空数组，这意味着禁用白名单并启用所有属性。\n            exclude: /(node_module)/, //默认false，可以（reg）利用正则表达式排除某些文件夹的方法，例如/(node_module)\\/如果想把前端UI框架内的px也转换成rem，请把此属性设为默认值\n            selectorBlackList: [\"html\"], //要忽略并保留为px的选择器\n            // ignoreIdentifier: false,  //（boolean/string）忽略单个属性的方法，启用ignoreidentifier后，replace将自动设置为true。\n            // replace: true, // （布尔值）替换包含REM的规则，而不是添加回退。\n            mediaQuery: false, //（布尔值）允许在媒体查询中转换px。\n            minPixelValue: 3, //设置要替换的最小像素值(3px会被转rem)。 默认 0\n          }),\n        ],\n      },\n    },\n  },\n};\n```\n\n```css\nhtml{\n\tfont-size: 100px   or 625%  \n}\n```\n\n```js\nmethods: {\n    rem() {\n      var designWidth = 750,\n        rem2px = 100;\n      document.documentElement.style.fontSize =\n        (((window.innerWidth / designWidth) * rem2px) / 16) * 100 + \"%\";\n    },\n  },\n  created() {\n    this.rem(),\n      window.addEventListener(\n        \"resize\",\n        () => {\n          clearTimeout(timer);\n          let timer = setTimeout(() => {\n            this.rem()\n          }, 200);\n        },\n        false\n      );\n  },\n```\n\n\n\n\n{% blockquote  %}\n也可 将 fontsize  填入黑名单 , 媒体查询控制 字体的大小 避免 文字过小  .\n{% endblockquote %}\n\n","slug":"前端/css/responsive_rem","published":1,"updated":"2021-03-11T06:40:28.808Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4iayk20000m2le18ffc477","content":"<h1 id=\"移动端-rem-自适应\"><a href=\"#移动端-rem-自适应\" class=\"headerlink\" title=\"移动端 rem 自适应\"></a>移动端 rem 自适应</h1><h3 id=\"1-rem-–-gt-html-font-size-100px-or-625\"><a href=\"#1-rem-–-gt-html-font-size-100px-or-625\" class=\"headerlink\" title=\"1. rem –&gt; html{font-size: 100px   or 625%   };\"></a>1. rem –&gt; html{font-size: 100px   or 625%   };</h3><p>   chrome强制字体最小值为12px，低于12px按12px处理.<br>   1rem=10px就变成1rem=12px，出现偏差.</p>\n<h3 id=\"2-lt-meta-name-39-viewport-39-content-39-width-device-width-initial-scale-1-user-scale-no-39-gt\"><a href=\"#2-lt-meta-name-39-viewport-39-content-39-width-device-width-initial-scale-1-user-scale-no-39-gt\" class=\"headerlink\" title=\"2. &lt;meta name=&#39;viewport&#39; content=&#39;width=device-width,initial-scale=1,user-scale=no&#39; /&gt;\"></a>2. <code>&lt;meta name=&#39;viewport&#39; content=&#39;width=device-width,initial-scale=1,user-scale=no&#39; /&gt;</code></h3><h3 id=\"3-高清适配方案中iPhone-X全屏兼容：\"><a href=\"#3-高清适配方案中iPhone-X全屏兼容：\" class=\"headerlink\" title=\"3. 高清适配方案中iPhone X全屏兼容：\"></a>3. 高清适配方案中iPhone X全屏兼容：</h3><p>  1、需要在viewport中添加 viewport-fit=cover，js和meta标签中都要添加；<br>  2、同时iPhone X屏幕底部圆弧区域占位高度使用 calc(constant(safe-area-inset-bottom) * 3) 作为padding-bottom， margin-bottom等高度属性的值。iPhone X上，高清适配方案中，此值等价于.34rem，即34逻辑像素。根据实际情况可以修改* 3这个系数来调整占位区域的高度，但一定要使用constant(safe-area-inset-bottom)。在ios11下，非iPhone X的设备此值为0，使用时需要注意样式覆盖的情况。</p>\n<h3 id=\"postcss-px2rem\"><a href=\"#postcss-px2rem\" class=\"headerlink\" title=\"postcss   px2rem\"></a>postcss   px2rem</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//vue.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  css: &#123;</span><br><span class=\"line\">    loaderOptions: &#123;</span><br><span class=\"line\">      postcss: &#123;</span><br><span class=\"line\">        plugins: [</span><br><span class=\"line\">          <span class=\"built_in\">require</span>(<span class=\"string\">&quot;autoprefixer&quot;</span>)(),</span><br><span class=\"line\">          <span class=\"built_in\">require</span>(<span class=\"string\">&quot;postcss-plugin-px2rem&quot;</span>)(&#123;</span><br><span class=\"line\">            rootValue: <span class=\"number\">100</span>, <span class=\"comment\">//换算基数， 默认100  ，这样的话把根标签的字体规定为1rem为100px,这样就可以从设计稿上量出多少个px直接在代码中写多上px了。</span></span><br><span class=\"line\">            <span class=\"comment\">// unitPrecision: 5, //允许REM单位增长到的十进制数字。</span></span><br><span class=\"line\">            propWhiteList: [], <span class=\"comment\">//默认值是一个空数组，这意味着禁用白名单并启用所有属性。</span></span><br><span class=\"line\">            exclude: <span class=\"regexp\">/(node_module)/</span>, <span class=\"comment\">//默认false，可以（reg）利用正则表达式排除某些文件夹的方法，例如/(node_module)\\/如果想把前端UI框架内的px也转换成rem，请把此属性设为默认值</span></span><br><span class=\"line\">            selectorBlackList: [<span class=\"string\">&quot;html&quot;</span>], <span class=\"comment\">//要忽略并保留为px的选择器</span></span><br><span class=\"line\">            <span class=\"comment\">// ignoreIdentifier: false,  //（boolean/string）忽略单个属性的方法，启用ignoreidentifier后，replace将自动设置为true。</span></span><br><span class=\"line\">            <span class=\"comment\">// replace: true, // （布尔值）替换包含REM的规则，而不是添加回退。</span></span><br><span class=\"line\">            mediaQuery: <span class=\"literal\">false</span>, <span class=\"comment\">//（布尔值）允许在媒体查询中转换px。</span></span><br><span class=\"line\">            minPixelValue: <span class=\"number\">3</span>, <span class=\"comment\">//设置要替换的最小像素值(3px会被转rem)。 默认 0</span></span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">100px</span>   or <span class=\"number\">625%</span>  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    rem() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> designWidth = <span class=\"number\">750</span>,</span><br><span class=\"line\">        rem2px = <span class=\"number\">100</span>;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.documentElement.style.fontSize =</span><br><span class=\"line\">        (((<span class=\"built_in\">window</span>.innerWidth / designWidth) * rem2px) / <span class=\"number\">16</span>) * <span class=\"number\">100</span> + <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.rem(),</span><br><span class=\"line\">      <span class=\"built_in\">window</span>.addEventListener(</span><br><span class=\"line\">        <span class=\"string\">&quot;resize&quot;</span>,</span><br><span class=\"line\">        () =&gt; &#123;</span><br><span class=\"line\">          <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">          <span class=\"keyword\">let</span> timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.rem()</span><br><span class=\"line\">          &#125;, <span class=\"number\">200</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      );</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n\n\n\n<blockquote><p>也可 将 fontsize  填入黑名单 , 媒体查询控制 字体的大小 避免 文字过小  .</p>\n</blockquote>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"移动端-rem-自适应\"><a href=\"#移动端-rem-自适应\" class=\"headerlink\" title=\"移动端 rem 自适应\"></a>移动端 rem 自适应</h1><h3 id=\"1-rem-–-gt-html-font-size-100px-or-625\"><a href=\"#1-rem-–-gt-html-font-size-100px-or-625\" class=\"headerlink\" title=\"1. rem –&gt; html{font-size: 100px   or 625%   };\"></a>1. rem –&gt; html{font-size: 100px   or 625%   };</h3><p>   chrome强制字体最小值为12px，低于12px按12px处理.<br>   1rem=10px就变成1rem=12px，出现偏差.</p>\n<h3 id=\"2-lt-meta-name-39-viewport-39-content-39-width-device-width-initial-scale-1-user-scale-no-39-gt\"><a href=\"#2-lt-meta-name-39-viewport-39-content-39-width-device-width-initial-scale-1-user-scale-no-39-gt\" class=\"headerlink\" title=\"2. &lt;meta name=&#39;viewport&#39; content=&#39;width=device-width,initial-scale=1,user-scale=no&#39; /&gt;\"></a>2. <code>&lt;meta name=&#39;viewport&#39; content=&#39;width=device-width,initial-scale=1,user-scale=no&#39; /&gt;</code></h3><h3 id=\"3-高清适配方案中iPhone-X全屏兼容：\"><a href=\"#3-高清适配方案中iPhone-X全屏兼容：\" class=\"headerlink\" title=\"3. 高清适配方案中iPhone X全屏兼容：\"></a>3. 高清适配方案中iPhone X全屏兼容：</h3><p>  1、需要在viewport中添加 viewport-fit=cover，js和meta标签中都要添加；<br>  2、同时iPhone X屏幕底部圆弧区域占位高度使用 calc(constant(safe-area-inset-bottom) * 3) 作为padding-bottom， margin-bottom等高度属性的值。iPhone X上，高清适配方案中，此值等价于.34rem，即34逻辑像素。根据实际情况可以修改* 3这个系数来调整占位区域的高度，但一定要使用constant(safe-area-inset-bottom)。在ios11下，非iPhone X的设备此值为0，使用时需要注意样式覆盖的情况。</p>\n<h3 id=\"postcss-px2rem\"><a href=\"#postcss-px2rem\" class=\"headerlink\" title=\"postcss   px2rem\"></a>postcss   px2rem</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//vue.config.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  css: &#123;</span><br><span class=\"line\">    loaderOptions: &#123;</span><br><span class=\"line\">      postcss: &#123;</span><br><span class=\"line\">        plugins: [</span><br><span class=\"line\">          <span class=\"built_in\">require</span>(<span class=\"string\">&quot;autoprefixer&quot;</span>)(),</span><br><span class=\"line\">          <span class=\"built_in\">require</span>(<span class=\"string\">&quot;postcss-plugin-px2rem&quot;</span>)(&#123;</span><br><span class=\"line\">            rootValue: <span class=\"number\">100</span>, <span class=\"comment\">//换算基数， 默认100  ，这样的话把根标签的字体规定为1rem为100px,这样就可以从设计稿上量出多少个px直接在代码中写多上px了。</span></span><br><span class=\"line\">            <span class=\"comment\">// unitPrecision: 5, //允许REM单位增长到的十进制数字。</span></span><br><span class=\"line\">            propWhiteList: [], <span class=\"comment\">//默认值是一个空数组，这意味着禁用白名单并启用所有属性。</span></span><br><span class=\"line\">            exclude: <span class=\"regexp\">/(node_module)/</span>, <span class=\"comment\">//默认false，可以（reg）利用正则表达式排除某些文件夹的方法，例如/(node_module)\\/如果想把前端UI框架内的px也转换成rem，请把此属性设为默认值</span></span><br><span class=\"line\">            selectorBlackList: [<span class=\"string\">&quot;html&quot;</span>], <span class=\"comment\">//要忽略并保留为px的选择器</span></span><br><span class=\"line\">            <span class=\"comment\">// ignoreIdentifier: false,  //（boolean/string）忽略单个属性的方法，启用ignoreidentifier后，replace将自动设置为true。</span></span><br><span class=\"line\">            <span class=\"comment\">// replace: true, // （布尔值）替换包含REM的规则，而不是添加回退。</span></span><br><span class=\"line\">            mediaQuery: <span class=\"literal\">false</span>, <span class=\"comment\">//（布尔值）允许在媒体查询中转换px。</span></span><br><span class=\"line\">            minPixelValue: <span class=\"number\">3</span>, <span class=\"comment\">//设置要替换的最小像素值(3px会被转rem)。 默认 0</span></span><br><span class=\"line\">          &#125;),</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">font-size</span>: <span class=\"number\">100px</span>   or <span class=\"number\">625%</span>  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    rem() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> designWidth = <span class=\"number\">750</span>,</span><br><span class=\"line\">        rem2px = <span class=\"number\">100</span>;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.documentElement.style.fontSize =</span><br><span class=\"line\">        (((<span class=\"built_in\">window</span>.innerWidth / designWidth) * rem2px) / <span class=\"number\">16</span>) * <span class=\"number\">100</span> + <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.rem(),</span><br><span class=\"line\">      <span class=\"built_in\">window</span>.addEventListener(</span><br><span class=\"line\">        <span class=\"string\">&quot;resize&quot;</span>,</span><br><span class=\"line\">        () =&gt; &#123;</span><br><span class=\"line\">          <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">          <span class=\"keyword\">let</span> timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.rem()</span><br><span class=\"line\">          &#125;, <span class=\"number\">200</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"literal\">false</span></span><br><span class=\"line\">      );</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n\n\n\n<blockquote><p>也可 将 fontsize  填入黑名单 , 媒体查询控制 字体的大小 避免 文字过小  .</p>\n</blockquote>\n\n"},{"title":"Tips","date":"2019-12-31T16:00:00.000Z","updated":"2021-03-11T06:40:43.274Z","cover":"https://picgo.genji.xyz/blog/posts/tips.jpg","keywords":"Tips","description":"小东西","_content":"\n\n# <i class=\"fas fa-book\"></i> Tips\n\n-----\n\n\n```html\n<a href=\"mailto:XXX@126.com\">Email</a>\n## 点击发送邮件\n```\n\n\n\n\n\n","source":"_posts/前端/html/html小记录.md","raw":"---\ntitle: Tips\ndate: 2020-01-01 00:00:00\nupdated: \ncover:  https://picgo.genji.xyz/blog/posts/tips.jpg\ntags:  \tTips\ncategories: [前端,html]\nkeywords: Tips\ndescription: 小东西\n---\n\n\n# <i class=\"fas fa-book\"></i> Tips\n\n-----\n\n\n```html\n<a href=\"mailto:XXX@126.com\">Email</a>\n## 点击发送邮件\n```\n\n\n\n\n\n","slug":"前端/html/html小记录","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4iayka0002m2legbuaf5pl","content":"<h1 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\" Tips\"></a><i class=\"fas fa-book\"></i> Tips</h1><hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;mailto:XXX@126.com&quot;</span>&gt;</span>Email<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">## 点击发送邮件</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\" Tips\"></a><i class=\"fas fa-book\"></i> Tips</h1><hr>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;mailto:XXX@126.com&quot;</span>&gt;</span>Email<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">## 点击发送邮件</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"title":"github action","date":"2020-02-03T16:00:00.000Z","updated":"2021-03-11T06:40:07.926Z","top_img":null,"cover":"https://picgo.genji.xyz/blog/posts/bg2019091201.jpg","description":"github action","keywords":"github action","_content":"\n\n\n## github action\n\n​    之前用过不少类似工具 travis,circle,coding,daocloud(docker).但是吧 还是觉得github action要好用一些.\n\n1.  语言\n\n  `yaml`\n   个人不太喜欢`jekins`  \n   注意下格式就行,前端也没啥写的.\n   最多就\n   (push后build,tar -zcvf, ssh  scp ,cd,rm ,mkdir,npm install, pm2 )\n\n2. 插件 \n\n   有很多开源的action , 用的时候直接 `use`: `插件名`\n\n   就很好用,就很懒!\n\n3. 方便管理\n\n   代码和 CI/CD 在一个平台真的很好管理, 再也不用切来切去,  \n\n   \n\n## 最近用的action插件\n\n基本用法可以看看 : [阮一峰的github actions 教程](http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html)\n\n我只记录下最近用的action插件.\n\nyaml 一定要注意格式  空格 和 tab\n\n1. [actions/checkout@v2](https://github.com/marketplace/actions/checkout)\n\n   ```yaml\n   name: checkout\n   on: push\n   jobs:\n     publish:\n    runs-on: ubuntu-latest\n    steps:\n      -\n        name: Checkout\n        uses: actions/checkout@v2\n        \n   #这样你就能获取到 repo  的文件\n   ```\n\n2. [setup-node](https://github.com/marketplace/actions/setup-node-js-environment)  \n\n   ```yaml\n   #basic\n   steps:\n   - uses: actions/checkout@v2\n   - uses: actions/setup-node@v1\n     with:\n       node-version: '12'\n   - run: npm install\n   - run: npm test\n   \n   \n   #Publish to npmjs and GPR with npm/yarn:\n   steps:\n   - uses: actions/checkout@v2\n   - uses: actions/setup-node@v1\n     with:\n       node-version: '10.x'\n       registry-url: 'https://registry.npmjs.org'\n   - run: npm install\n   - run: npm publish\n     env:\n       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n   - uses: actions/setup-node@v1\n     with:\n       registry-url: 'https://npm.pkg.github.com'\n   - run: npm publish\n     env:\n       NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n   ```\n\n\n\n3. [Github pages](https://github.com/marketplace/actions/github-pages)\n\n   ```yaml\n   name: action page\n   \n   on: push\n   jobs:\n     publish:\n       runs-on: ubuntu-latest\n       steps:\n         -\n           name: Checkout\n           uses: actions/checkout@v2\n         - uses: actions/setup-node@v1\n           with:\n             node-version: 10\n         - run: npm install\n           \n         - name: build\n           run: npm run build\n         - name: ls\n           run: ls\n         -\n           name: Deploy to GitHub Pages\n           if: success()\n           uses: crazy-max/ghaction-github-pages@v2\n           with:\n             target_branch: gh-pages\n             build_dir: dist\n           env:\n             GITHUB_TOKEN: ${{ secrets.PAGETOKEN }}\n   \n      \n   ```\n\n\n\n4. [ssh deploy](https://github.com/marketplace/actions/ssh-deploy)\n\n   ```YAML\n       - name: Install npm dependencies\n         run: npm install\n       - name: Run build task\n         run: npm run build --if-present\n       - name: Deploy to Server\n         uses: easingthemes/ssh-deploy@v2.1.5\n         env:\n             SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}\n             ARGS: \"-rltgoDzvO --delete\"\n             SOURCE: \"dist/\"\n             REMOTE_HOST: ${{ secrets.REMOTE_HOST }}\n             REMOTE_USER: ${{ secrets.REMOTE_USER }}\n             TARGET: ${{ secrets.REMOTE_TARGET }}\n             \n    #还有更多参数 端口等        \n   ```\n\n   \n\n## action badge\n\n#### [官方文档](https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/adding-a-workflow-status-badge)\n\n`https://github.com/<OWNER>/<REPOSITORY>/workflows/<WORKFLOW_FILE_PATH>/badge.svg`\n\n```md\n![something](https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg)\n```\n\n链接形式:[![something](https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg)](https://github.com/genjiXYZ/vue-parallax-banner)\n\n图片形式:![something](https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg)\n\n这个是动态的,根据你action执行的情况,显示不同状态.\n\n","source":"_posts/前端/CI/CD/github_action.md","raw":"---\ntitle: github action\ndate: 2020-02-04 00:00:00\nupdated: \ntop_img:\ncover: https://picgo.genji.xyz/blog/posts/bg2019091201.jpg\ndescription: github action\n\nkeywords: \"github action\"\ntags: [CI/CD,github action]\ncategories: [前端,CI/CD]\n---\n\n\n\n## github action\n\n​    之前用过不少类似工具 travis,circle,coding,daocloud(docker).但是吧 还是觉得github action要好用一些.\n\n1.  语言\n\n  `yaml`\n   个人不太喜欢`jekins`  \n   注意下格式就行,前端也没啥写的.\n   最多就\n   (push后build,tar -zcvf, ssh  scp ,cd,rm ,mkdir,npm install, pm2 )\n\n2. 插件 \n\n   有很多开源的action , 用的时候直接 `use`: `插件名`\n\n   就很好用,就很懒!\n\n3. 方便管理\n\n   代码和 CI/CD 在一个平台真的很好管理, 再也不用切来切去,  \n\n   \n\n## 最近用的action插件\n\n基本用法可以看看 : [阮一峰的github actions 教程](http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html)\n\n我只记录下最近用的action插件.\n\nyaml 一定要注意格式  空格 和 tab\n\n1. [actions/checkout@v2](https://github.com/marketplace/actions/checkout)\n\n   ```yaml\n   name: checkout\n   on: push\n   jobs:\n     publish:\n    runs-on: ubuntu-latest\n    steps:\n      -\n        name: Checkout\n        uses: actions/checkout@v2\n        \n   #这样你就能获取到 repo  的文件\n   ```\n\n2. [setup-node](https://github.com/marketplace/actions/setup-node-js-environment)  \n\n   ```yaml\n   #basic\n   steps:\n   - uses: actions/checkout@v2\n   - uses: actions/setup-node@v1\n     with:\n       node-version: '12'\n   - run: npm install\n   - run: npm test\n   \n   \n   #Publish to npmjs and GPR with npm/yarn:\n   steps:\n   - uses: actions/checkout@v2\n   - uses: actions/setup-node@v1\n     with:\n       node-version: '10.x'\n       registry-url: 'https://registry.npmjs.org'\n   - run: npm install\n   - run: npm publish\n     env:\n       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}\n   - uses: actions/setup-node@v1\n     with:\n       registry-url: 'https://npm.pkg.github.com'\n   - run: npm publish\n     env:\n       NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n   ```\n\n\n\n3. [Github pages](https://github.com/marketplace/actions/github-pages)\n\n   ```yaml\n   name: action page\n   \n   on: push\n   jobs:\n     publish:\n       runs-on: ubuntu-latest\n       steps:\n         -\n           name: Checkout\n           uses: actions/checkout@v2\n         - uses: actions/setup-node@v1\n           with:\n             node-version: 10\n         - run: npm install\n           \n         - name: build\n           run: npm run build\n         - name: ls\n           run: ls\n         -\n           name: Deploy to GitHub Pages\n           if: success()\n           uses: crazy-max/ghaction-github-pages@v2\n           with:\n             target_branch: gh-pages\n             build_dir: dist\n           env:\n             GITHUB_TOKEN: ${{ secrets.PAGETOKEN }}\n   \n      \n   ```\n\n\n\n4. [ssh deploy](https://github.com/marketplace/actions/ssh-deploy)\n\n   ```YAML\n       - name: Install npm dependencies\n         run: npm install\n       - name: Run build task\n         run: npm run build --if-present\n       - name: Deploy to Server\n         uses: easingthemes/ssh-deploy@v2.1.5\n         env:\n             SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}\n             ARGS: \"-rltgoDzvO --delete\"\n             SOURCE: \"dist/\"\n             REMOTE_HOST: ${{ secrets.REMOTE_HOST }}\n             REMOTE_USER: ${{ secrets.REMOTE_USER }}\n             TARGET: ${{ secrets.REMOTE_TARGET }}\n             \n    #还有更多参数 端口等        \n   ```\n\n   \n\n## action badge\n\n#### [官方文档](https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/adding-a-workflow-status-badge)\n\n`https://github.com/<OWNER>/<REPOSITORY>/workflows/<WORKFLOW_FILE_PATH>/badge.svg`\n\n```md\n![something](https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg)\n```\n\n链接形式:[![something](https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg)](https://github.com/genjiXYZ/vue-parallax-banner)\n\n图片形式:![something](https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg)\n\n这个是动态的,根据你action执行的情况,显示不同状态.\n\n","slug":"前端/CI/CD/github_action","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4iaykf0008m2leecyj66uh","content":"<h2 id=\"github-action\"><a href=\"#github-action\" class=\"headerlink\" title=\"github action\"></a>github action</h2><p>​    之前用过不少类似工具 travis,circle,coding,daocloud(docker).但是吧 还是觉得github action要好用一些.</p>\n<ol>\n<li><p>语言</p>\n<p><code>yaml</code><br>个人不太喜欢<code>jekins</code><br>注意下格式就行,前端也没啥写的.<br>最多就<br>(push后build,tar -zcvf, ssh  scp ,cd,rm ,mkdir,npm install, pm2 )</p>\n</li>\n<li><p>插件 </p>\n<p>有很多开源的action , 用的时候直接 <code>use</code>: <code>插件名</code></p>\n<p>就很好用,就很懒!</p>\n</li>\n<li><p>方便管理</p>\n<p>代码和 CI/CD 在一个平台真的很好管理, 再也不用切来切去,  </p>\n</li>\n</ol>\n<h2 id=\"最近用的action插件\"><a href=\"#最近用的action插件\" class=\"headerlink\" title=\"最近用的action插件\"></a>最近用的action插件</h2><p>基本用法可以看看 : <a href=\"http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html\">阮一峰的github actions 教程</a></p>\n<p>我只记录下最近用的action插件.</p>\n<p>yaml 一定要注意格式  空格 和 tab</p>\n<ol>\n<li><p><a href=\"https://github.com/marketplace/actions/checkout\">actions/checkout@v2</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">checkout</span></span><br><span class=\"line\"><span class=\"attr\">on:</span> <span class=\"string\">push</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish:</span></span><br><span class=\"line\"> <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\"> <span class=\"attr\">steps:</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span></span><br><span class=\"line\">     <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">     <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"comment\">#这样你就能获取到 repo  的文件</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><a href=\"https://github.com/marketplace/actions/setup-node-js-environment\">setup-node</a>  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#basic</span></span><br><span class=\"line\"><span class=\"attr\">steps:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"attr\">node-version:</span> <span class=\"string\">&#x27;12&#x27;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Publish to npmjs and GPR with npm/yarn:</span></span><br><span class=\"line\"><span class=\"attr\">steps:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"attr\">node-version:</span> <span class=\"string\">&#x27;10.x&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">registry-url:</span> <span class=\"string\">&#x27;https://registry.npmjs.org&#x27;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">  <span class=\"attr\">env:</span></span><br><span class=\"line\">    <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.NPM_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"attr\">registry-url:</span> <span class=\"string\">&#x27;https://npm.pkg.github.com&#x27;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">  <span class=\"attr\">env:</span></span><br><span class=\"line\">    <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"3\">\n<li><p><a href=\"https://github.com/marketplace/actions/github-pages\">Github pages</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">action</span> <span class=\"string\">page</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span> <span class=\"string\">push</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"number\">10</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">build</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ls</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">ls</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">if:</span> <span class=\"string\">success()</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">crazy-max/ghaction-github-pages@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">target_branch:</span> <span class=\"string\">gh-pages</span></span><br><span class=\"line\">          <span class=\"attr\">build_dir:</span> <span class=\"string\">dist</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">GITHUB_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.PAGETOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"4\">\n<li><p><a href=\"https://github.com/marketplace/actions/ssh-deploy\">ssh deploy</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">npm</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">     <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">build</span> <span class=\"string\">task</span></span><br><span class=\"line\">     <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build</span> <span class=\"string\">--if-present</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">Server</span></span><br><span class=\"line\">     <span class=\"attr\">uses:</span> <span class=\"string\">easingthemes/ssh-deploy@v2.1.5</span></span><br><span class=\"line\">     <span class=\"attr\">env:</span></span><br><span class=\"line\">         <span class=\"attr\">SSH_PRIVATE_KEY:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.SERVER_SSH_KEY</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         <span class=\"attr\">ARGS:</span> <span class=\"string\">&quot;-rltgoDzvO --delete&quot;</span></span><br><span class=\"line\">         <span class=\"attr\">SOURCE:</span> <span class=\"string\">&quot;dist/&quot;</span></span><br><span class=\"line\">         <span class=\"attr\">REMOTE_HOST:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_HOST</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         <span class=\"attr\">REMOTE_USER:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_USER</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         <span class=\"attr\">TARGET:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_TARGET</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"comment\">#还有更多参数 端口等        </span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<h2 id=\"action-badge\"><a href=\"#action-badge\" class=\"headerlink\" title=\"action badge\"></a>action badge</h2><h4 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a><a href=\"https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/adding-a-workflow-status-badge\">官方文档</a></h4><p><code>https://github.com/&lt;OWNER&gt;/&lt;REPOSITORY&gt;/workflows/&lt;WORKFLOW_FILE_PATH&gt;/badge.svg</code></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">something</span>](<span class=\"link\">https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg</span>)</span><br></pre></td></tr></table></figure>\n\n<p>链接形式:<a href=\"https://github.com/genjiXYZ/vue-parallax-banner\"><img src=\"https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg\" alt=\"something\"></a></p>\n<p>图片形式:<img src=\"https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg\" alt=\"something\"></p>\n<p>这个是动态的,根据你action执行的情况,显示不同状态.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"github-action\"><a href=\"#github-action\" class=\"headerlink\" title=\"github action\"></a>github action</h2><p>​    之前用过不少类似工具 travis,circle,coding,daocloud(docker).但是吧 还是觉得github action要好用一些.</p>\n<ol>\n<li><p>语言</p>\n<p><code>yaml</code><br>个人不太喜欢<code>jekins</code><br>注意下格式就行,前端也没啥写的.<br>最多就<br>(push后build,tar -zcvf, ssh  scp ,cd,rm ,mkdir,npm install, pm2 )</p>\n</li>\n<li><p>插件 </p>\n<p>有很多开源的action , 用的时候直接 <code>use</code>: <code>插件名</code></p>\n<p>就很好用,就很懒!</p>\n</li>\n<li><p>方便管理</p>\n<p>代码和 CI/CD 在一个平台真的很好管理, 再也不用切来切去,  </p>\n</li>\n</ol>\n<h2 id=\"最近用的action插件\"><a href=\"#最近用的action插件\" class=\"headerlink\" title=\"最近用的action插件\"></a>最近用的action插件</h2><p>基本用法可以看看 : <a href=\"http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html\">阮一峰的github actions 教程</a></p>\n<p>我只记录下最近用的action插件.</p>\n<p>yaml 一定要注意格式  空格 和 tab</p>\n<ol>\n<li><p><a href=\"https://github.com/marketplace/actions/checkout\">actions/checkout@v2</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">checkout</span></span><br><span class=\"line\"><span class=\"attr\">on:</span> <span class=\"string\">push</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish:</span></span><br><span class=\"line\"> <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\"> <span class=\"attr\">steps:</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span></span><br><span class=\"line\">     <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">     <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"comment\">#这样你就能获取到 repo  的文件</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><a href=\"https://github.com/marketplace/actions/setup-node-js-environment\">setup-node</a>  </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#basic</span></span><br><span class=\"line\"><span class=\"attr\">steps:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"attr\">node-version:</span> <span class=\"string\">&#x27;12&#x27;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Publish to npmjs and GPR with npm/yarn:</span></span><br><span class=\"line\"><span class=\"attr\">steps:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"attr\">node-version:</span> <span class=\"string\">&#x27;10.x&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">registry-url:</span> <span class=\"string\">&#x27;https://registry.npmjs.org&#x27;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">  <span class=\"attr\">env:</span></span><br><span class=\"line\">    <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.NPM_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">  <span class=\"attr\">with:</span></span><br><span class=\"line\">    <span class=\"attr\">registry-url:</span> <span class=\"string\">&#x27;https://npm.pkg.github.com&#x27;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">  <span class=\"attr\">env:</span></span><br><span class=\"line\">    <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"3\">\n<li><p><a href=\"https://github.com/marketplace/actions/github-pages\">Github pages</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">action</span> <span class=\"string\">page</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span> <span class=\"string\">push</span></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"number\">10</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">build</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ls</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">ls</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">if:</span> <span class=\"string\">success()</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">crazy-max/ghaction-github-pages@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">target_branch:</span> <span class=\"string\">gh-pages</span></span><br><span class=\"line\">          <span class=\"attr\">build_dir:</span> <span class=\"string\">dist</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">GITHUB_TOKEN:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.PAGETOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"4\">\n<li><p><a href=\"https://github.com/marketplace/actions/ssh-deploy\">ssh deploy</a></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">npm</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">     <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span> <span class=\"string\">build</span> <span class=\"string\">task</span></span><br><span class=\"line\">     <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build</span> <span class=\"string\">--if-present</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">Server</span></span><br><span class=\"line\">     <span class=\"attr\">uses:</span> <span class=\"string\">easingthemes/ssh-deploy@v2.1.5</span></span><br><span class=\"line\">     <span class=\"attr\">env:</span></span><br><span class=\"line\">         <span class=\"attr\">SSH_PRIVATE_KEY:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.SERVER_SSH_KEY</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         <span class=\"attr\">ARGS:</span> <span class=\"string\">&quot;-rltgoDzvO --delete&quot;</span></span><br><span class=\"line\">         <span class=\"attr\">SOURCE:</span> <span class=\"string\">&quot;dist/&quot;</span></span><br><span class=\"line\">         <span class=\"attr\">REMOTE_HOST:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_HOST</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         <span class=\"attr\">REMOTE_USER:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_USER</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         <span class=\"attr\">TARGET:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.REMOTE_TARGET</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"comment\">#还有更多参数 端口等        </span></span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<h2 id=\"action-badge\"><a href=\"#action-badge\" class=\"headerlink\" title=\"action badge\"></a>action badge</h2><h4 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a><a href=\"https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/adding-a-workflow-status-badge\">官方文档</a></h4><p><code>https://github.com/&lt;OWNER&gt;/&lt;REPOSITORY&gt;/workflows/&lt;WORKFLOW_FILE_PATH&gt;/badge.svg</code></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">something</span>](<span class=\"link\">https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg</span>)</span><br></pre></td></tr></table></figure>\n\n<p>链接形式:<a href=\"https://github.com/genjiXYZ/vue-parallax-banner\"><img src=\"https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg\" alt=\"something\"></a></p>\n<p>图片形式:<img src=\"https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg\" alt=\"something\"></p>\n<p>这个是动态的,根据你action执行的情况,显示不同状态.</p>\n"},{"title":"github webhook","date":"2020-02-02T16:00:00.000Z","updated":"2021-03-11T06:40:14.010Z","top_img":null,"cover":"https://picgo.genji.xyz/blog/posts/image-20200930154903141.png","description":"github webhook","keywords":"github webhook","_content":"\n\n\n\n\n\n\n\n\n# Web hooks\n\n##  什么是web hooks\n\n![image-20200930151443628](https://picgo.genji.xyz/blog/posts/image-20200930151443628.png)\n\n只不过 install bulid 等都是在你的服务器运行.\n\n-----\n\n## 配置\n\n我就用宝塔面板自带的了.\n\n![image-20200930154309950](https://picgo.genji.xyz/blog/posts/image-20200930154309950.png)\n\n填写 `任意名称`  和你要`执行的脚本`  ,提交后会给你 带有秘钥的 链接\n\n```bash\n比如 \n\ncd /www/wwwroot/hello/\ngit clone link\ncd /文件夹\nnpm install \nnpm run build  \ncd /文件夹\npm2 start app.js  \n\n```\n\n-----\n\n## 测试\n\n\n使用 postman  post 一下 ,\n\n![image-20200930154106968](https://picgo.genji.xyz/blog/posts/image-20200930154106968.png)\n\n\n\n![image-20200930154359603](https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-19-40%401x.png)\n\n可以看到调用次数增加,执行的日志也有记录 .\n\n## github setting\n\n![image-20200930154552727](https://picgo.genji.xyz/blog/posts/image-20200930154552727.png)\n\n你可以直接填写带有秘钥的链接,也可以分开写.\n\n\nover\n\n\n\n\n\n","source":"_posts/前端/CI/CD/github_webhooks.md","raw":"---\ntitle: github webhook\ndate: 2020-02-03 00:00:00\nupdated: \ntop_img:\ncover:  https://picgo.genji.xyz/blog/posts/image-20200930154903141.png\n\ndescription: github webhook\nkeywords: \"github webhook\"\ntags:  \t[webhook,CI/CD]\ncategories: [前端,CI/CD]\n---\n\n\n\n\n\n\n\n\n\n# Web hooks\n\n##  什么是web hooks\n\n![image-20200930151443628](https://picgo.genji.xyz/blog/posts/image-20200930151443628.png)\n\n只不过 install bulid 等都是在你的服务器运行.\n\n-----\n\n## 配置\n\n我就用宝塔面板自带的了.\n\n![image-20200930154309950](https://picgo.genji.xyz/blog/posts/image-20200930154309950.png)\n\n填写 `任意名称`  和你要`执行的脚本`  ,提交后会给你 带有秘钥的 链接\n\n```bash\n比如 \n\ncd /www/wwwroot/hello/\ngit clone link\ncd /文件夹\nnpm install \nnpm run build  \ncd /文件夹\npm2 start app.js  \n\n```\n\n-----\n\n## 测试\n\n\n使用 postman  post 一下 ,\n\n![image-20200930154106968](https://picgo.genji.xyz/blog/posts/image-20200930154106968.png)\n\n\n\n![image-20200930154359603](https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-19-40%401x.png)\n\n可以看到调用次数增加,执行的日志也有记录 .\n\n## github setting\n\n![image-20200930154552727](https://picgo.genji.xyz/blog/posts/image-20200930154552727.png)\n\n你可以直接填写带有秘钥的链接,也可以分开写.\n\n\nover\n\n\n\n\n\n","slug":"前端/CI/CD/github_webhooks","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4iaykh000bm2le2sq8eo3i","content":"<h1 id=\"Web-hooks\"><a href=\"#Web-hooks\" class=\"headerlink\" title=\"Web hooks\"></a>Web hooks</h1><h2 id=\"什么是web-hooks\"><a href=\"#什么是web-hooks\" class=\"headerlink\" title=\"什么是web hooks\"></a>什么是web hooks</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930151443628.png\" alt=\"image-20200930151443628\"></p>\n<p>只不过 install bulid 等都是在你的服务器运行.</p>\n<hr>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>我就用宝塔面板自带的了.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930154309950.png\" alt=\"image-20200930154309950\"></p>\n<p>填写 <code>任意名称</code>  和你要<code>执行的脚本</code>  ,提交后会给你 带有秘钥的 链接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /www/wwwroot/hello/</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> link</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /文件夹</span><br><span class=\"line\">npm install </span><br><span class=\"line\">npm run build  </span><br><span class=\"line\"><span class=\"built_in\">cd</span> /文件夹</span><br><span class=\"line\">pm2 start app.js  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>使用 postman  post 一下 ,</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930154106968.png\" alt=\"image-20200930154106968\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-19-40%401x.png\" alt=\"image-20200930154359603\"></p>\n<p>可以看到调用次数增加,执行的日志也有记录 .</p>\n<h2 id=\"github-setting\"><a href=\"#github-setting\" class=\"headerlink\" title=\"github setting\"></a>github setting</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930154552727.png\" alt=\"image-20200930154552727\"></p>\n<p>你可以直接填写带有秘钥的链接,也可以分开写.</p>\n<p>over</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Web-hooks\"><a href=\"#Web-hooks\" class=\"headerlink\" title=\"Web hooks\"></a>Web hooks</h1><h2 id=\"什么是web-hooks\"><a href=\"#什么是web-hooks\" class=\"headerlink\" title=\"什么是web hooks\"></a>什么是web hooks</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930151443628.png\" alt=\"image-20200930151443628\"></p>\n<p>只不过 install bulid 等都是在你的服务器运行.</p>\n<hr>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>我就用宝塔面板自带的了.</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930154309950.png\" alt=\"image-20200930154309950\"></p>\n<p>填写 <code>任意名称</code>  和你要<code>执行的脚本</code>  ,提交后会给你 带有秘钥的 链接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /www/wwwroot/hello/</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> link</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /文件夹</span><br><span class=\"line\">npm install </span><br><span class=\"line\">npm run build  </span><br><span class=\"line\"><span class=\"built_in\">cd</span> /文件夹</span><br><span class=\"line\">pm2 start app.js  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>使用 postman  post 一下 ,</p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930154106968.png\" alt=\"image-20200930154106968\"></p>\n<p><img src=\"https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-19-40%401x.png\" alt=\"image-20200930154359603\"></p>\n<p>可以看到调用次数增加,执行的日志也有记录 .</p>\n<h2 id=\"github-setting\"><a href=\"#github-setting\" class=\"headerlink\" title=\"github setting\"></a>github setting</h2><p><img src=\"https://picgo.genji.xyz/blog/posts/image-20200930154552727.png\" alt=\"image-20200930154552727\"></p>\n<p>你可以直接填写带有秘钥的链接,也可以分开写.</p>\n<p>over</p>\n"},{"title":"Travis CI/CD(一) github pages","top_img":null,"description":"利用travis 在github pages 生成静态网站","keywords":"travis","date":"2020-01-31T16:00:00.000Z","cover":"https://picgo.genji.xyz/blog/posts/TravisC.png","_content":"\n# Travis CI/CD 构建(github pages 篇)\n\n\n\n### \t\t在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)\n\n-----\n\n\n\n## 什么是 Travis?\n\n说人话-- 就是帮你 build  test  deploy\n\n\n\n## 价格 配置 限制 \n\n~~travis 有两个网站 travis.com travis.org~~\n\n~~travis.org  --- 开源仓库 免费使用~~\n\n~~travis.com --- 主要面向 私有仓库~~\n\n现在只有 `travis.com` 可以免费试用 但是有点条件  \n\n\n\n![image-20200627163900305](http://pic.genji.xyz/test/image-20200627163900305.png)\n\n## 如何使用\n\n1.  **travis 初步设置**\n\n![image-20200627171223899](http://pic.genji.xyz/test/image-20200627171223899.png)\n\n<center>1 设置 \t2同步 github 仓库 \t3选择你要使用travis 的仓库</center>\n\n2.   **GitHub 这是私人令牌( 获得部署到 gh-pages 权限)**\n\n![image-20200627172033567](http://pic.genji.xyz/test/image-20200627172033567.png)\n\n<center>1\t设置 2 \t私人令牌 3 创建新的令牌</center>\n\n\n\n![image-20200627172351276](http://pic.genji.xyz/test/image-20200627172351276.png)\n\n<center>设置令牌的权限 有控制仓库权限即可,如要设置其他权限自行设置. <a traget=\"_blank\" href=\"https://docs.travis-ci.com/user/deployment/pages/#further-configuration\">官方文档</a>有进一步配置 </center>\n\n![image-20200627175338324](http://pic.genji.xyz/test/image-20200627175338324.png)\n\n<center>复制你的令牌,然后添加到Travis 的环境变量中</center>\n\n![image-20200627175709667](http://pic.genji.xyz/test/image-20200627175709667.png)\n\n<center>1在设置中\t2创建变量名\t3粘贴令牌</center>\t\t\n\n3.  **在项目根目录 创建  `.travis.yml`  文件**\n\n<img src=\"http://pic.genji.xyz/test/image-20200627174914491.png\" alt=\"image-20200627174914491\" style=\"zoom: 50%;\" />\n\n   ```yml\n   language: node_js\n   node_js:\n     - 12\n   \n   branches:\n     only:\n       - master\n   \n   script:\n     - yarn install  \n     - yarn build\n   deploy:\n     provider: pages\n     skip-cleanup: true\n     github-token: \"$GH_TOKEN\"\n     keep-history: true\n     on:\n       branch: master\n     local-dir: dist\n   ```\n\n****\n\n   **然后重新 push  到仓库 即可 触发travis** \n\n![image-20200627180239377](http://pic.genji.xyz/test/image-20200627180239377.png)\n\n\n\n![image-20200627180524840](http://pic.genji.xyz/test/image-20200627180524840.png)\n\n\n\n**虽然成功了 ,但是应该会有个问题,就是 build 路径问题  ,设置下 `vue.config.js` 即可.**\n\n**路径问题 太常见了, 去控制台看看 js css 文件, 改下路径 测试下即可.**\n\n```js\n// vue.config.js\nmodule.exports={\n\tpublicPath:\"./\",\n}\n\n```\n\n![image-20200627181721917](http://pic.genji.xyz/test/image-20200627181721917.png)\n\n\n\n![image-20200627181814545](http://pic.genji.xyz/test/image-20200627181814545.png)\n\n**这里就是我们的 静态网站了!  以后只要 改代码 push  ,即可自动bulid并且push到gh-pages分支.**\n\n\n\n## **CNAME**\n\n**配置CNAME  这样你就可以用自己的域名访问了.**\n\n![image-20200627182429486](http://pic.genji.xyz/test/image-20200627182429486.png)\n\n**在这里填好自己的域名,然后去dns 服务商去添加解析记录**\n\n![image-20200627182734908](http://pic.genji.xyz/test/image-20200627182734908.png)\n\n**<user>  你github  叫什么 就填什么 (全部小写)**\n\n**dns  刷新需要点时间  等个5分钟 基本上就好了** \n\n**你可以ping  你的域名   看看 ip  有没有指向 github.io 的ip**\n\n```ssh\n❯ ping github.io\nPING github.io (185.199.110.153): 56 data bytes\n64 bytes from 185.199.110.153: icmp_seq=0 ttl=53 time=71.172 ms\n64 bytes from 185.199.110.153: icmp_seq=1 ttl=53 time=71.182 ms\n64 bytes from 185.199.110.153: icmp_seq=2 ttl=53 time=70.903 ms\n\n```\n\n**更改cname 后 用你自己的域名打开,可能会一开始布局乱的现象,**\n\n**说人话 : 用gihub 的域名  需要改`vue.config.js` 用自己的域名 不需要改**\n\n\n\n\n\n\n\n#### Pages 篇完 \n\n#### 有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)\n\n-----\n\n\n\n","source":"_posts/前端/CI/CD/travis_pages.md","raw":"---\ntitle: Travis CI/CD(一) github pages\ntop_img: \ndescription: 利用travis 在github pages 生成静态网站\nkeywords: travis\ndate: 2020-02-01 00:00:00\ncover: https://picgo.genji.xyz/blog/posts/TravisC.png\ntags: [Travis,github-pages,CNAME,CI/CD]\ncategories: [前端,CI/CD]\n---\n\n# Travis CI/CD 构建(github pages 篇)\n\n\n\n### \t\t在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)\n\n-----\n\n\n\n## 什么是 Travis?\n\n说人话-- 就是帮你 build  test  deploy\n\n\n\n## 价格 配置 限制 \n\n~~travis 有两个网站 travis.com travis.org~~\n\n~~travis.org  --- 开源仓库 免费使用~~\n\n~~travis.com --- 主要面向 私有仓库~~\n\n现在只有 `travis.com` 可以免费试用 但是有点条件  \n\n\n\n![image-20200627163900305](http://pic.genji.xyz/test/image-20200627163900305.png)\n\n## 如何使用\n\n1.  **travis 初步设置**\n\n![image-20200627171223899](http://pic.genji.xyz/test/image-20200627171223899.png)\n\n<center>1 设置 \t2同步 github 仓库 \t3选择你要使用travis 的仓库</center>\n\n2.   **GitHub 这是私人令牌( 获得部署到 gh-pages 权限)**\n\n![image-20200627172033567](http://pic.genji.xyz/test/image-20200627172033567.png)\n\n<center>1\t设置 2 \t私人令牌 3 创建新的令牌</center>\n\n\n\n![image-20200627172351276](http://pic.genji.xyz/test/image-20200627172351276.png)\n\n<center>设置令牌的权限 有控制仓库权限即可,如要设置其他权限自行设置. <a traget=\"_blank\" href=\"https://docs.travis-ci.com/user/deployment/pages/#further-configuration\">官方文档</a>有进一步配置 </center>\n\n![image-20200627175338324](http://pic.genji.xyz/test/image-20200627175338324.png)\n\n<center>复制你的令牌,然后添加到Travis 的环境变量中</center>\n\n![image-20200627175709667](http://pic.genji.xyz/test/image-20200627175709667.png)\n\n<center>1在设置中\t2创建变量名\t3粘贴令牌</center>\t\t\n\n3.  **在项目根目录 创建  `.travis.yml`  文件**\n\n<img src=\"http://pic.genji.xyz/test/image-20200627174914491.png\" alt=\"image-20200627174914491\" style=\"zoom: 50%;\" />\n\n   ```yml\n   language: node_js\n   node_js:\n     - 12\n   \n   branches:\n     only:\n       - master\n   \n   script:\n     - yarn install  \n     - yarn build\n   deploy:\n     provider: pages\n     skip-cleanup: true\n     github-token: \"$GH_TOKEN\"\n     keep-history: true\n     on:\n       branch: master\n     local-dir: dist\n   ```\n\n****\n\n   **然后重新 push  到仓库 即可 触发travis** \n\n![image-20200627180239377](http://pic.genji.xyz/test/image-20200627180239377.png)\n\n\n\n![image-20200627180524840](http://pic.genji.xyz/test/image-20200627180524840.png)\n\n\n\n**虽然成功了 ,但是应该会有个问题,就是 build 路径问题  ,设置下 `vue.config.js` 即可.**\n\n**路径问题 太常见了, 去控制台看看 js css 文件, 改下路径 测试下即可.**\n\n```js\n// vue.config.js\nmodule.exports={\n\tpublicPath:\"./\",\n}\n\n```\n\n![image-20200627181721917](http://pic.genji.xyz/test/image-20200627181721917.png)\n\n\n\n![image-20200627181814545](http://pic.genji.xyz/test/image-20200627181814545.png)\n\n**这里就是我们的 静态网站了!  以后只要 改代码 push  ,即可自动bulid并且push到gh-pages分支.**\n\n\n\n## **CNAME**\n\n**配置CNAME  这样你就可以用自己的域名访问了.**\n\n![image-20200627182429486](http://pic.genji.xyz/test/image-20200627182429486.png)\n\n**在这里填好自己的域名,然后去dns 服务商去添加解析记录**\n\n![image-20200627182734908](http://pic.genji.xyz/test/image-20200627182734908.png)\n\n**<user>  你github  叫什么 就填什么 (全部小写)**\n\n**dns  刷新需要点时间  等个5分钟 基本上就好了** \n\n**你可以ping  你的域名   看看 ip  有没有指向 github.io 的ip**\n\n```ssh\n❯ ping github.io\nPING github.io (185.199.110.153): 56 data bytes\n64 bytes from 185.199.110.153: icmp_seq=0 ttl=53 time=71.172 ms\n64 bytes from 185.199.110.153: icmp_seq=1 ttl=53 time=71.182 ms\n64 bytes from 185.199.110.153: icmp_seq=2 ttl=53 time=70.903 ms\n\n```\n\n**更改cname 后 用你自己的域名打开,可能会一开始布局乱的现象,**\n\n**说人话 : 用gihub 的域名  需要改`vue.config.js` 用自己的域名 不需要改**\n\n\n\n\n\n\n\n#### Pages 篇完 \n\n#### 有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)\n\n-----\n\n\n\n","slug":"前端/CI/CD/travis_pages","published":1,"updated":"2021-03-11T06:40:04.489Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4iayki000em2le0uv93vop","content":"<h1 id=\"Travis-CI-CD-构建-github-pages-篇\"><a href=\"#Travis-CI-CD-构建-github-pages-篇\" class=\"headerlink\" title=\"Travis CI/CD 构建(github pages 篇)\"></a>Travis CI/CD 构建(github pages 篇)</h1><h3 id=\"在-github-action-没有正式发布前-就一直用-travis-circle-现在正准备向官方爸爸靠拢-毕竟github-action-拥有-2核-7GB-和-比较-的-活跃生态-别人写好的-actions\"><a href=\"#在-github-action-没有正式发布前-就一直用-travis-circle-现在正准备向官方爸爸靠拢-毕竟github-action-拥有-2核-7GB-和-比较-的-活跃生态-别人写好的-actions\" class=\"headerlink\" title=\"在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)\"></a>在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)</h3><hr>\n<h2 id=\"什么是-Travis\"><a href=\"#什么是-Travis\" class=\"headerlink\" title=\"什么是 Travis?\"></a>什么是 Travis?</h2><p>说人话– 就是帮你 build  test  deploy</p>\n<h2 id=\"价格-配置-限制\"><a href=\"#价格-配置-限制\" class=\"headerlink\" title=\"价格 配置 限制\"></a>价格 配置 限制</h2><p><del>travis 有两个网站 travis.com travis.org</del></p>\n<p><del>travis.org  — 开源仓库 免费使用</del></p>\n<p><del>travis.com — 主要面向 私有仓库</del></p>\n<p>现在只有 <code>travis.com</code> 可以免费试用 但是有点条件  </p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627163900305.png\" alt=\"image-20200627163900305\"></p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><ol>\n<li><strong>travis 初步设置</strong></li>\n</ol>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627171223899.png\" alt=\"image-20200627171223899\"></p>\n<center>1 设置     2同步 github 仓库     3选择你要使用travis 的仓库</center>\n\n<ol start=\"2\">\n<li><strong>GitHub 这是私人令牌( 获得部署到 gh-pages 权限)</strong></li>\n</ol>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627172033567.png\" alt=\"image-20200627172033567\"></p>\n<center>1    设置 2     私人令牌 3 创建新的令牌</center>\n\n\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627172351276.png\" alt=\"image-20200627172351276\"></p>\n<center>设置令牌的权限 有控制仓库权限即可,如要设置其他权限自行设置. <a traget=\"_blank\" href=\"https://docs.travis-ci.com/user/deployment/pages/#further-configuration\">官方文档</a>有进一步配置 </center>\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627175338324.png\" alt=\"image-20200627175338324\"></p>\n<center>复制你的令牌,然后添加到Travis 的环境变量中</center>\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627175709667.png\" alt=\"image-20200627175709667\"></p>\n<center>1在设置中    2创建变量名    3粘贴令牌</center>        \n\n<ol start=\"3\">\n<li><strong>在项目根目录 创建  <code>.travis.yml</code>  文件</strong></li>\n</ol>\n<img src=\"http://pic.genji.xyz/test/image-20200627174914491.png\" alt=\"image-20200627174914491\" style=\"zoom: 50%;\" />\n\n   <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">node_js</span></span><br><span class=\"line\"><span class=\"attr\">node_js:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">branches:</span></span><br><span class=\"line\">  <span class=\"attr\">only:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">install</span>  </span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span> <span class=\"string\">pages</span></span><br><span class=\"line\">  <span class=\"attr\">skip-cleanup:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">github-token:</span> <span class=\"string\">&quot;$GH_TOKEN&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">keep-history:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">local-dir:</span> <span class=\"string\">dist</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>   <strong>然后重新 push  到仓库 即可 触发travis</strong> </p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627180239377.png\" alt=\"image-20200627180239377\"></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627180524840.png\" alt=\"image-20200627180524840\"></p>\n<p><strong>虽然成功了 ,但是应该会有个问题,就是 build 路径问题  ,设置下 <code>vue.config.js</code> 即可.</strong></p>\n<p><strong>路径问题 太常见了, 去控制台看看 js css 文件, 改下路径 测试下即可.</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=&#123;</span><br><span class=\"line\">\tpublicPath:<span class=\"string\">&quot;./&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627181721917.png\" alt=\"image-20200627181721917\"></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627181814545.png\" alt=\"image-20200627181814545\"></p>\n<p><strong>这里就是我们的 静态网站了!  以后只要 改代码 push  ,即可自动bulid并且push到gh-pages分支.</strong></p>\n<h2 id=\"CNAME\"><a href=\"#CNAME\" class=\"headerlink\" title=\"CNAME\"></a><strong>CNAME</strong></h2><p><strong>配置CNAME  这样你就可以用自己的域名访问了.</strong></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627182429486.png\" alt=\"image-20200627182429486\"></p>\n<p><strong>在这里填好自己的域名,然后去dns 服务商去添加解析记录</strong></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627182734908.png\" alt=\"image-20200627182734908\"></p>\n<p><strong><user>  你github  叫什么 就填什么 (全部小写)</strong></p>\n<p><strong>dns  刷新需要点时间  等个5分钟 基本上就好了</strong> </p>\n<p><strong>你可以ping  你的域名   看看 ip  有没有指向 github.io 的ip</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ ping github.io</span><br><span class=\"line\">PING github.io (185.199.110.153): 56 data bytes</span><br><span class=\"line\">64 bytes from 185.199.110.153: icmp_seq&#x3D;0 ttl&#x3D;53 time&#x3D;71.172 ms</span><br><span class=\"line\">64 bytes from 185.199.110.153: icmp_seq&#x3D;1 ttl&#x3D;53 time&#x3D;71.182 ms</span><br><span class=\"line\">64 bytes from 185.199.110.153: icmp_seq&#x3D;2 ttl&#x3D;53 time&#x3D;70.903 ms</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>更改cname 后 用你自己的域名打开,可能会一开始布局乱的现象,</strong></p>\n<p><strong>说人话 : 用gihub 的域名  需要改<code>vue.config.js</code> 用自己的域名 不需要改</strong></p>\n<h4 id=\"Pages-篇完\"><a href=\"#Pages-篇完\" class=\"headerlink\" title=\"Pages 篇完\"></a>Pages 篇完</h4><h4 id=\"有那里写的不对-或者有什么问题了-请在下面留言-留下你的邮箱-我会及时回复\"><a href=\"#有那里写的不对-或者有什么问题了-请在下面留言-留下你的邮箱-我会及时回复\" class=\"headerlink\" title=\"有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)\"></a>有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)</h4><hr>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Travis-CI-CD-构建-github-pages-篇\"><a href=\"#Travis-CI-CD-构建-github-pages-篇\" class=\"headerlink\" title=\"Travis CI/CD 构建(github pages 篇)\"></a>Travis CI/CD 构建(github pages 篇)</h1><h3 id=\"在-github-action-没有正式发布前-就一直用-travis-circle-现在正准备向官方爸爸靠拢-毕竟github-action-拥有-2核-7GB-和-比较-的-活跃生态-别人写好的-actions\"><a href=\"#在-github-action-没有正式发布前-就一直用-travis-circle-现在正准备向官方爸爸靠拢-毕竟github-action-拥有-2核-7GB-和-比较-的-活跃生态-别人写好的-actions\" class=\"headerlink\" title=\"在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)\"></a>在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)</h3><hr>\n<h2 id=\"什么是-Travis\"><a href=\"#什么是-Travis\" class=\"headerlink\" title=\"什么是 Travis?\"></a>什么是 Travis?</h2><p>说人话– 就是帮你 build  test  deploy</p>\n<h2 id=\"价格-配置-限制\"><a href=\"#价格-配置-限制\" class=\"headerlink\" title=\"价格 配置 限制\"></a>价格 配置 限制</h2><p><del>travis 有两个网站 travis.com travis.org</del></p>\n<p><del>travis.org  — 开源仓库 免费使用</del></p>\n<p><del>travis.com — 主要面向 私有仓库</del></p>\n<p>现在只有 <code>travis.com</code> 可以免费试用 但是有点条件  </p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627163900305.png\" alt=\"image-20200627163900305\"></p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><ol>\n<li><strong>travis 初步设置</strong></li>\n</ol>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627171223899.png\" alt=\"image-20200627171223899\"></p>\n<center>1 设置     2同步 github 仓库     3选择你要使用travis 的仓库</center>\n\n<ol start=\"2\">\n<li><strong>GitHub 这是私人令牌( 获得部署到 gh-pages 权限)</strong></li>\n</ol>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627172033567.png\" alt=\"image-20200627172033567\"></p>\n<center>1    设置 2     私人令牌 3 创建新的令牌</center>\n\n\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627172351276.png\" alt=\"image-20200627172351276\"></p>\n<center>设置令牌的权限 有控制仓库权限即可,如要设置其他权限自行设置. <a traget=\"_blank\" href=\"https://docs.travis-ci.com/user/deployment/pages/#further-configuration\">官方文档</a>有进一步配置 </center>\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627175338324.png\" alt=\"image-20200627175338324\"></p>\n<center>复制你的令牌,然后添加到Travis 的环境变量中</center>\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627175709667.png\" alt=\"image-20200627175709667\"></p>\n<center>1在设置中    2创建变量名    3粘贴令牌</center>        \n\n<ol start=\"3\">\n<li><strong>在项目根目录 创建  <code>.travis.yml</code>  文件</strong></li>\n</ol>\n<img src=\"http://pic.genji.xyz/test/image-20200627174914491.png\" alt=\"image-20200627174914491\" style=\"zoom: 50%;\" />\n\n   <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">node_js</span></span><br><span class=\"line\"><span class=\"attr\">node_js:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">branches:</span></span><br><span class=\"line\">  <span class=\"attr\">only:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">install</span>  </span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span> <span class=\"string\">pages</span></span><br><span class=\"line\">  <span class=\"attr\">skip-cleanup:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">github-token:</span> <span class=\"string\">&quot;$GH_TOKEN&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">keep-history:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">local-dir:</span> <span class=\"string\">dist</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>   <strong>然后重新 push  到仓库 即可 触发travis</strong> </p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627180239377.png\" alt=\"image-20200627180239377\"></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627180524840.png\" alt=\"image-20200627180524840\"></p>\n<p><strong>虽然成功了 ,但是应该会有个问题,就是 build 路径问题  ,设置下 <code>vue.config.js</code> 即可.</strong></p>\n<p><strong>路径问题 太常见了, 去控制台看看 js css 文件, 改下路径 测试下即可.</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// vue.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=&#123;</span><br><span class=\"line\">\tpublicPath:<span class=\"string\">&quot;./&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://pic.genji.xyz/test/image-20200627181721917.png\" alt=\"image-20200627181721917\"></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627181814545.png\" alt=\"image-20200627181814545\"></p>\n<p><strong>这里就是我们的 静态网站了!  以后只要 改代码 push  ,即可自动bulid并且push到gh-pages分支.</strong></p>\n<h2 id=\"CNAME\"><a href=\"#CNAME\" class=\"headerlink\" title=\"CNAME\"></a><strong>CNAME</strong></h2><p><strong>配置CNAME  这样你就可以用自己的域名访问了.</strong></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627182429486.png\" alt=\"image-20200627182429486\"></p>\n<p><strong>在这里填好自己的域名,然后去dns 服务商去添加解析记录</strong></p>\n<p><img src=\"http://pic.genji.xyz/test/image-20200627182734908.png\" alt=\"image-20200627182734908\"></p>\n<p><strong><user>  你github  叫什么 就填什么 (全部小写)</strong></p>\n<p><strong>dns  刷新需要点时间  等个5分钟 基本上就好了</strong> </p>\n<p><strong>你可以ping  你的域名   看看 ip  有没有指向 github.io 的ip</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ ping github.io</span><br><span class=\"line\">PING github.io (185.199.110.153): 56 data bytes</span><br><span class=\"line\">64 bytes from 185.199.110.153: icmp_seq&#x3D;0 ttl&#x3D;53 time&#x3D;71.172 ms</span><br><span class=\"line\">64 bytes from 185.199.110.153: icmp_seq&#x3D;1 ttl&#x3D;53 time&#x3D;71.182 ms</span><br><span class=\"line\">64 bytes from 185.199.110.153: icmp_seq&#x3D;2 ttl&#x3D;53 time&#x3D;70.903 ms</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>更改cname 后 用你自己的域名打开,可能会一开始布局乱的现象,</strong></p>\n<p><strong>说人话 : 用gihub 的域名  需要改<code>vue.config.js</code> 用自己的域名 不需要改</strong></p>\n<h4 id=\"Pages-篇完\"><a href=\"#Pages-篇完\" class=\"headerlink\" title=\"Pages 篇完\"></a>Pages 篇完</h4><h4 id=\"有那里写的不对-或者有什么问题了-请在下面留言-留下你的邮箱-我会及时回复\"><a href=\"#有那里写的不对-或者有什么问题了-请在下面留言-留下你的邮箱-我会及时回复\" class=\"headerlink\" title=\"有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)\"></a>有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)</h4><hr>\n"},{"title":"Travis CI/CD(二) 部署到服务器","date":"2020-02-01T16:00:00.000Z","updated":"2021-03-11T06:40:17.890Z","description":"利用travis部署hexo到阿里云,","top_img":null,"cover":"https://picgo.genji.xyz/blog/posts/TravisC.png","keywords":["Travis","ssh"],"_content":"\n\n\n![img](https://picgo.genji.xyz/blog/posts/TravisC.png)\n\n# Travis 部署到服务器 \n\n\n## ssh \n\n### 确保你电脑有 ssh私钥\n\n没有的话\n\n```bash\n ssh-keygen -t rsa -C \"something you like\" \n```\n\n\n### 将公钥copy到服务器\n\n```bash\nssh-copy-id root@服务器IP\n## sh-copy-id root@110.110.112.11\n\n## 会在复制你电脑 public key 到 服务器 ~/.ssh/authorized_keys \n\n## 正常是.ssh 文件夹 700权限\n## authorized_keys文件600权限\n## chmod 600 authorized_keys \n## chmod 700 -R .ssh\n```\n\n##  travis 环境变量\n\n用到了 travis CLI 工具加密下你本机的 私钥\n\n```bash\ngem install travis\n\n## 我推荐使用homebrew \n## brew install travis\n\n\ntravis login --org\ntravis login --pro\ntravis login --com\n\n具体登录哪个,看你使用的哪个\n```\n\n\n\n```bash\n❯ travis login --org\n\n输入github  账号 密码\n```\n\n\n\n在travis 面板中`监听`你的项目   (github 已经存在的 repo)\n\n在本地`项目目录`中\n\n```bash\n## travis encrypt-file ssh_key --add\n\ntravis encrypt-file ~/.ssh/id_rsa  --add\n\n\n\n\n1.自动在travis.yml 生成一段 配置脚本 \n\n---\nbefore_install:\n- openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv\n  -in id_rsa.enc -out ~\\/.ssh/id_rsa -d\n\n##别忘了 把 \\ 删除       ~/.ssh/id_rsa -d\n\n2.自动在travis 环境变量中添加\n\n3.自动 生成 id_rsa.enc 文加密文件\n\n```\n\n\n\n![image-20200929025050217](/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20200929025050217.png)\n\n\n\n```bash\n通用版本\n\n# 在当前目录生成密钥\nssh-keygen -t rsa -b 4096 -C 'build@travis-ci.org' -f ./deploy_rsa\n# 使用Travis加密\ntravis encrypt-file deploy_rsa --add\n# 添加信任关系\nssh-copy-id -i deploy_rsa.pub <ssh-user>@<deploy-host>\n# 删除敏感文件\nrm -f deploy_rsa deploy_rsa.pub\n# 将修改添加到git中\ngit add deploy_rsa.enc .travis.yml\n\n\n\n\n\n## \n-t type -b bit -C comment -f file\n\n-i   identity_file\n\n```\n\n\n\n\n\n\n\n## travis 配置文件\n\n\n\n```yaml\nsudo: false \nlanguage: node_js\nnode_js:\n  - 12\ncache: npm\n\n## 这里注意 文件不同 配置不同(yarn-lock文件有影响 需要添加 -yarn )\ninstall:\n  - yarn\n  \n## 触发分支\nbranches:\n  only:\n    - master\n\n## 添加known_hosts    ~/.ssh/known_hosts\n## ip 是你服务器的IP地址   在环境变量中手动添加\naddons:\n  ssh_known_hosts: ${IP}\n  \nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv\n    -in id_rsa.enc -out ~/.ssh/id_rsa -d\n  - chmod 600 ~/.ssh/id_rsa\n\nscript:\n  - hexo generate\n  - ls\n  - tar -zcvf hexo.tar.bz2 ./public # 压缩\n  - scp -o stricthostkeychecking=no -r ./hexo.tar.bz2 root@${IP}:/www/wwwroot/blog.genji.xyz # scp复制\n  - ssh root@${IP} 'cd /www/wwwroot/blog.genji.xyz && tar -zxvf hexo.tar.bz2 ' # 解压\n  # - cd public\n  # - echo 'blog.genji.xyz' > CNAME\n\nafter_success:\n\t- do something  \n\n## 部署到服务器不需要了 部署到github page可以这么设置  token 就是\ndeploy:\n  provider: pages\n  skip-cleanup: true\n  github-token: \"$GH_TOKEN\"\n  keep-history: true\n  on:\n    branch: master\n  local-dir: public\n##\n\n```\n\n\n\n\n\n## 报错\n\n\n\n1. \n\n   ```bash\n   $ ssh root@${IP} 'cd /www/wwwroot/blog.genji.xyz'\n   219The authenticity of host '**.**.**.147 ' can't be established.\n   220ECDSA key fingerprint is SHA256:0nYNmoIDAHBbvDCtGI//PiDCRbD3twO9wQftM8abBEg.\n   221Are you sure you want to continue connecting (yes/no)? \n   ```\n\n   ```bash\n   -o StrictHostKeyChecking=no\n   \n   scp 或者 ssh 要添加 否则第一次连接时依然会要求你确认\n   ```\n\n   \n\n2. ```bash\n   \n    ssh -o StrictHostKeyChecking=no root@${IP} 'cd /www/wwwroot/blog.genji.xyz'\n   Warning: Permanently added 'ip' (ECDSA) to the list of known hosts.\n   root@ip's password: \n   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n   @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n   \n   Permissions 0664 for '/home/travis/.ssh/id_rsa' are too open.\n   It is required that your private key files are NOT accessible by others.\n   This private key will be ignored.\n   Load key \"/home/travis/.ssh/id_rsa\": bad permissions\n   \n   \n   权限问题 Permissions 0664\n   \n   \n   \n   before_install:\n     - openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv\n     -in id_rsa.enc -out ~/.ssh/id_rsa -d\n     - chmod 600 ~/.ssh/id_rsa\n     \n     改成600\n   \n   ```\n\n\n\n","source":"_posts/前端/CI/CD/travis_server.md","raw":"---\ntitle: Travis CI/CD(二) 部署到服务器\ndate: 2020-02-02 00:00:00\nupdated:\n\ndescription: \"利用travis部署hexo到阿里云,\"\ntop_img: \ncover: https://picgo.genji.xyz/blog/posts/TravisC.png\n\ntags: [Travis,ssh,CI/CD]\n\nkeywords: [Travis,ssh]\ncategories: [前端,CI/CD]\n---\n\n\n\n![img](https://picgo.genji.xyz/blog/posts/TravisC.png)\n\n# Travis 部署到服务器 \n\n\n## ssh \n\n### 确保你电脑有 ssh私钥\n\n没有的话\n\n```bash\n ssh-keygen -t rsa -C \"something you like\" \n```\n\n\n### 将公钥copy到服务器\n\n```bash\nssh-copy-id root@服务器IP\n## sh-copy-id root@110.110.112.11\n\n## 会在复制你电脑 public key 到 服务器 ~/.ssh/authorized_keys \n\n## 正常是.ssh 文件夹 700权限\n## authorized_keys文件600权限\n## chmod 600 authorized_keys \n## chmod 700 -R .ssh\n```\n\n##  travis 环境变量\n\n用到了 travis CLI 工具加密下你本机的 私钥\n\n```bash\ngem install travis\n\n## 我推荐使用homebrew \n## brew install travis\n\n\ntravis login --org\ntravis login --pro\ntravis login --com\n\n具体登录哪个,看你使用的哪个\n```\n\n\n\n```bash\n❯ travis login --org\n\n输入github  账号 密码\n```\n\n\n\n在travis 面板中`监听`你的项目   (github 已经存在的 repo)\n\n在本地`项目目录`中\n\n```bash\n## travis encrypt-file ssh_key --add\n\ntravis encrypt-file ~/.ssh/id_rsa  --add\n\n\n\n\n1.自动在travis.yml 生成一段 配置脚本 \n\n---\nbefore_install:\n- openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv\n  -in id_rsa.enc -out ~\\/.ssh/id_rsa -d\n\n##别忘了 把 \\ 删除       ~/.ssh/id_rsa -d\n\n2.自动在travis 环境变量中添加\n\n3.自动 生成 id_rsa.enc 文加密文件\n\n```\n\n\n\n![image-20200929025050217](/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20200929025050217.png)\n\n\n\n```bash\n通用版本\n\n# 在当前目录生成密钥\nssh-keygen -t rsa -b 4096 -C 'build@travis-ci.org' -f ./deploy_rsa\n# 使用Travis加密\ntravis encrypt-file deploy_rsa --add\n# 添加信任关系\nssh-copy-id -i deploy_rsa.pub <ssh-user>@<deploy-host>\n# 删除敏感文件\nrm -f deploy_rsa deploy_rsa.pub\n# 将修改添加到git中\ngit add deploy_rsa.enc .travis.yml\n\n\n\n\n\n## \n-t type -b bit -C comment -f file\n\n-i   identity_file\n\n```\n\n\n\n\n\n\n\n## travis 配置文件\n\n\n\n```yaml\nsudo: false \nlanguage: node_js\nnode_js:\n  - 12\ncache: npm\n\n## 这里注意 文件不同 配置不同(yarn-lock文件有影响 需要添加 -yarn )\ninstall:\n  - yarn\n  \n## 触发分支\nbranches:\n  only:\n    - master\n\n## 添加known_hosts    ~/.ssh/known_hosts\n## ip 是你服务器的IP地址   在环境变量中手动添加\naddons:\n  ssh_known_hosts: ${IP}\n  \nbefore_install:\n  - openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv\n    -in id_rsa.enc -out ~/.ssh/id_rsa -d\n  - chmod 600 ~/.ssh/id_rsa\n\nscript:\n  - hexo generate\n  - ls\n  - tar -zcvf hexo.tar.bz2 ./public # 压缩\n  - scp -o stricthostkeychecking=no -r ./hexo.tar.bz2 root@${IP}:/www/wwwroot/blog.genji.xyz # scp复制\n  - ssh root@${IP} 'cd /www/wwwroot/blog.genji.xyz && tar -zxvf hexo.tar.bz2 ' # 解压\n  # - cd public\n  # - echo 'blog.genji.xyz' > CNAME\n\nafter_success:\n\t- do something  \n\n## 部署到服务器不需要了 部署到github page可以这么设置  token 就是\ndeploy:\n  provider: pages\n  skip-cleanup: true\n  github-token: \"$GH_TOKEN\"\n  keep-history: true\n  on:\n    branch: master\n  local-dir: public\n##\n\n```\n\n\n\n\n\n## 报错\n\n\n\n1. \n\n   ```bash\n   $ ssh root@${IP} 'cd /www/wwwroot/blog.genji.xyz'\n   219The authenticity of host '**.**.**.147 ' can't be established.\n   220ECDSA key fingerprint is SHA256:0nYNmoIDAHBbvDCtGI//PiDCRbD3twO9wQftM8abBEg.\n   221Are you sure you want to continue connecting (yes/no)? \n   ```\n\n   ```bash\n   -o StrictHostKeyChecking=no\n   \n   scp 或者 ssh 要添加 否则第一次连接时依然会要求你确认\n   ```\n\n   \n\n2. ```bash\n   \n    ssh -o StrictHostKeyChecking=no root@${IP} 'cd /www/wwwroot/blog.genji.xyz'\n   Warning: Permanently added 'ip' (ECDSA) to the list of known hosts.\n   root@ip's password: \n   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n   @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n   \n   Permissions 0664 for '/home/travis/.ssh/id_rsa' are too open.\n   It is required that your private key files are NOT accessible by others.\n   This private key will be ignored.\n   Load key \"/home/travis/.ssh/id_rsa\": bad permissions\n   \n   \n   权限问题 Permissions 0664\n   \n   \n   \n   before_install:\n     - openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv\n     -in id_rsa.enc -out ~/.ssh/id_rsa -d\n     - chmod 600 ~/.ssh/id_rsa\n     \n     改成600\n   \n   ```\n\n\n\n","slug":"前端/CI/CD/travis_server","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ckm4iaykk000hm2le4k9g3lrd","content":"<p><img src=\"https://picgo.genji.xyz/blog/posts/TravisC.png\" alt=\"img\"></p>\n<h1 id=\"Travis-部署到服务器\"><a href=\"#Travis-部署到服务器\" class=\"headerlink\" title=\"Travis 部署到服务器\"></a>Travis 部署到服务器</h1><h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><h3 id=\"确保你电脑有-ssh私钥\"><a href=\"#确保你电脑有-ssh私钥\" class=\"headerlink\" title=\"确保你电脑有 ssh私钥\"></a>确保你电脑有 ssh私钥</h3><p>没有的话</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;something you like&quot;</span> </span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"将公钥copy到服务器\"><a href=\"#将公钥copy到服务器\" class=\"headerlink\" title=\"将公钥copy到服务器\"></a>将公钥copy到服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-copy-id root@服务器IP</span><br><span class=\"line\"><span class=\"comment\">## sh-copy-id root@110.110.112.11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 会在复制你电脑 public key 到 服务器 ~/.ssh/authorized_keys </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 正常是.ssh 文件夹 700权限</span></span><br><span class=\"line\"><span class=\"comment\">## authorized_keys文件600权限</span></span><br><span class=\"line\"><span class=\"comment\">## chmod 600 authorized_keys </span></span><br><span class=\"line\"><span class=\"comment\">## chmod 700 -R .ssh</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"travis-环境变量\"><a href=\"#travis-环境变量\" class=\"headerlink\" title=\"travis 环境变量\"></a>travis 环境变量</h2><p>用到了 travis CLI 工具加密下你本机的 私钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install travis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 我推荐使用homebrew </span></span><br><span class=\"line\"><span class=\"comment\">## brew install travis</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">travis login --org</span><br><span class=\"line\">travis login --pro</span><br><span class=\"line\">travis login --com</span><br><span class=\"line\"></span><br><span class=\"line\">具体登录哪个,看你使用的哪个</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ travis login --org</span><br><span class=\"line\"></span><br><span class=\"line\">输入github  账号 密码</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在travis 面板中<code>监听</code>你的项目   (github 已经存在的 repo)</p>\n<p>在本地<code>项目目录</code>中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## travis encrypt-file ssh_key --add</span></span><br><span class=\"line\"></span><br><span class=\"line\">travis encrypt-file ~/.ssh/id_rsa  --add</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.自动在travis.yml 生成一段 配置脚本 </span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\">before_install:</span><br><span class=\"line\">- openssl aes-256-cbc -K <span class=\"variable\">$encrypted_024e66b057a6_key</span> -iv <span class=\"variable\">$encrypted_024e66b057a6_iv</span></span><br><span class=\"line\">  -<span class=\"keyword\">in</span> id_rsa.enc -out ~\\/.ssh/id_rsa -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##别忘了 把 \\ 删除       ~/.ssh/id_rsa -d</span></span><br><span class=\"line\"></span><br><span class=\"line\">2.自动在travis 环境变量中添加</span><br><span class=\"line\"></span><br><span class=\"line\">3.自动 生成 id_rsa.enc 文加密文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20200929025050217.png\" alt=\"image-20200929025050217\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通用版本</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在当前目录生成密钥</span></span><br><span class=\"line\">ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&#x27;build@travis-ci.org&#x27;</span> -f ./deploy_rsa</span><br><span class=\"line\"><span class=\"comment\"># 使用Travis加密</span></span><br><span class=\"line\">travis encrypt-file deploy_rsa --add</span><br><span class=\"line\"><span class=\"comment\"># 添加信任关系</span></span><br><span class=\"line\">ssh-copy-id -i deploy_rsa.pub &lt;ssh-user&gt;@&lt;deploy-host&gt;</span><br><span class=\"line\"><span class=\"comment\"># 删除敏感文件</span></span><br><span class=\"line\">rm -f deploy_rsa deploy_rsa.pub</span><br><span class=\"line\"><span class=\"comment\"># 将修改添加到git中</span></span><br><span class=\"line\">git add deploy_rsa.enc .travis.yml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\">-t <span class=\"built_in\">type</span> -b bit -C comment -f file</span><br><span class=\"line\"></span><br><span class=\"line\">-i   identity_file</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"travis-配置文件\"><a href=\"#travis-配置文件\" class=\"headerlink\" title=\"travis 配置文件\"></a>travis 配置文件</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sudo:</span> <span class=\"literal\">false</span> </span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">node_js</span></span><br><span class=\"line\"><span class=\"attr\">node_js:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"attr\">cache:</span> <span class=\"string\">npm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 这里注意 文件不同 配置不同(yarn-lock文件有影响 需要添加 -yarn )</span></span><br><span class=\"line\"><span class=\"attr\">install:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">## 触发分支</span></span><br><span class=\"line\"><span class=\"attr\">branches:</span></span><br><span class=\"line\">  <span class=\"attr\">only:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 添加known_hosts    ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"comment\">## ip 是你服务器的IP地址   在环境变量中手动添加</span></span><br><span class=\"line\"><span class=\"attr\">addons:</span></span><br><span class=\"line\">  <span class=\"attr\">ssh_known_hosts:</span> <span class=\"string\">$&#123;IP&#125;</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"attr\">before_install:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">openssl</span> <span class=\"string\">aes-256-cbc</span> <span class=\"string\">-K</span> <span class=\"string\">$encrypted_024e66b057a6_key</span> <span class=\"string\">-iv</span> <span class=\"string\">$encrypted_024e66b057a6_iv</span></span><br><span class=\"line\">    <span class=\"string\">-in</span> <span class=\"string\">id_rsa.enc</span> <span class=\"string\">-out</span> <span class=\"string\">~/.ssh/id_rsa</span> <span class=\"string\">-d</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">chmod</span> <span class=\"number\">600</span> <span class=\"string\">~/.ssh/id_rsa</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">hexo</span> <span class=\"string\">generate</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ls</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">tar</span> <span class=\"string\">-zcvf</span> <span class=\"string\">hexo.tar.bz2</span> <span class=\"string\">./public</span> <span class=\"comment\"># 压缩</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">scp</span> <span class=\"string\">-o</span> <span class=\"string\">stricthostkeychecking=no</span> <span class=\"string\">-r</span> <span class=\"string\">./hexo.tar.bz2</span> <span class=\"string\">root@$&#123;IP&#125;:/www/wwwroot/blog.genji.xyz</span> <span class=\"comment\"># scp复制</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ssh</span> <span class=\"string\">root@$&#123;IP&#125;</span> <span class=\"string\">&#x27;cd /www/wwwroot/blog.genji.xyz &amp;&amp; tar -zxvf hexo.tar.bz2 &#x27;</span> <span class=\"comment\"># 解压</span></span><br><span class=\"line\">  <span class=\"comment\"># - cd public</span></span><br><span class=\"line\">  <span class=\"comment\"># - echo &#x27;blog.genji.xyz&#x27; &gt; CNAME</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">after_success:</span></span><br><span class=\"line\">\t<span class=\"bullet\">-</span> <span class=\"string\">do</span> <span class=\"string\">something</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 部署到服务器不需要了 部署到github page可以这么设置  token 就是</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span> <span class=\"string\">pages</span></span><br><span class=\"line\">  <span class=\"attr\">skip-cleanup:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">github-token:</span> <span class=\"string\">&quot;$GH_TOKEN&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">keep-history:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">local-dir:</span> <span class=\"string\">public</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h2><ol>\n<li><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh root@<span class=\"variable\">$&#123;IP&#125;</span> <span class=\"string\">&#x27;cd /www/wwwroot/blog.genji.xyz&#x27;</span></span><br><span class=\"line\">219The authenticity of host <span class=\"string\">&#x27;**.**.**.147 &#x27;</span> can<span class=\"string\">&#x27;t be established.</span></span><br><span class=\"line\"><span class=\"string\">220ECDSA key fingerprint is SHA256:0nYNmoIDAHBbvDCtGI//PiDCRbD3twO9wQftM8abBEg.</span></span><br><span class=\"line\"><span class=\"string\">221Are you sure you want to continue connecting (yes/no)? </span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-o StrictHostKeyChecking=no</span><br><span class=\"line\"></span><br><span class=\"line\">scp 或者 ssh 要添加 否则第一次连接时依然会要求你确认</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"2\">\n<li><pre><code class=\"bash\">\n ssh -o StrictHostKeyChecking=no root@$&#123;IP&#125; &#39;cd /www/wwwroot/blog.genji.xyz&#39;\nWarning: Permanently added &#39;ip&#39; (ECDSA) to the list of known hosts.\nroot@ip&#39;s password: \n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n\nPermissions 0664 for &#39;/home/travis/.ssh/id_rsa&#39; are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key &quot;/home/travis/.ssh/id_rsa&quot;: bad permissions\n\n</code></pre>\n</li>\n</ol>\n<p>   权限问题 Permissions 0664</p>\n<p>   before_install:<br>     - openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv<br>     -in id_rsa.enc -out ~/.ssh/id_rsa -d<br>     - chmod 600 ~/.ssh/id_rsa</p>\n<pre><code> 改成600</code></pre>\n<pre><code>\n\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://picgo.genji.xyz/blog/posts/TravisC.png\" alt=\"img\"></p>\n<h1 id=\"Travis-部署到服务器\"><a href=\"#Travis-部署到服务器\" class=\"headerlink\" title=\"Travis 部署到服务器\"></a>Travis 部署到服务器</h1><h2 id=\"ssh\"><a href=\"#ssh\" class=\"headerlink\" title=\"ssh\"></a>ssh</h2><h3 id=\"确保你电脑有-ssh私钥\"><a href=\"#确保你电脑有-ssh私钥\" class=\"headerlink\" title=\"确保你电脑有 ssh私钥\"></a>确保你电脑有 ssh私钥</h3><p>没有的话</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;something you like&quot;</span> </span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"将公钥copy到服务器\"><a href=\"#将公钥copy到服务器\" class=\"headerlink\" title=\"将公钥copy到服务器\"></a>将公钥copy到服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-copy-id root@服务器IP</span><br><span class=\"line\"><span class=\"comment\">## sh-copy-id root@110.110.112.11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 会在复制你电脑 public key 到 服务器 ~/.ssh/authorized_keys </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 正常是.ssh 文件夹 700权限</span></span><br><span class=\"line\"><span class=\"comment\">## authorized_keys文件600权限</span></span><br><span class=\"line\"><span class=\"comment\">## chmod 600 authorized_keys </span></span><br><span class=\"line\"><span class=\"comment\">## chmod 700 -R .ssh</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"travis-环境变量\"><a href=\"#travis-环境变量\" class=\"headerlink\" title=\"travis 环境变量\"></a>travis 环境变量</h2><p>用到了 travis CLI 工具加密下你本机的 私钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install travis</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 我推荐使用homebrew </span></span><br><span class=\"line\"><span class=\"comment\">## brew install travis</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">travis login --org</span><br><span class=\"line\">travis login --pro</span><br><span class=\"line\">travis login --com</span><br><span class=\"line\"></span><br><span class=\"line\">具体登录哪个,看你使用的哪个</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ travis login --org</span><br><span class=\"line\"></span><br><span class=\"line\">输入github  账号 密码</span><br></pre></td></tr></table></figure>\n\n\n\n<p>在travis 面板中<code>监听</code>你的项目   (github 已经存在的 repo)</p>\n<p>在本地<code>项目目录</code>中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## travis encrypt-file ssh_key --add</span></span><br><span class=\"line\"></span><br><span class=\"line\">travis encrypt-file ~/.ssh/id_rsa  --add</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.自动在travis.yml 生成一段 配置脚本 </span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\">before_install:</span><br><span class=\"line\">- openssl aes-256-cbc -K <span class=\"variable\">$encrypted_024e66b057a6_key</span> -iv <span class=\"variable\">$encrypted_024e66b057a6_iv</span></span><br><span class=\"line\">  -<span class=\"keyword\">in</span> id_rsa.enc -out ~\\/.ssh/id_rsa -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##别忘了 把 \\ 删除       ~/.ssh/id_rsa -d</span></span><br><span class=\"line\"></span><br><span class=\"line\">2.自动在travis 环境变量中添加</span><br><span class=\"line\"></span><br><span class=\"line\">3.自动 生成 id_rsa.enc 文加密文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20200929025050217.png\" alt=\"image-20200929025050217\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通用版本</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在当前目录生成密钥</span></span><br><span class=\"line\">ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&#x27;build@travis-ci.org&#x27;</span> -f ./deploy_rsa</span><br><span class=\"line\"><span class=\"comment\"># 使用Travis加密</span></span><br><span class=\"line\">travis encrypt-file deploy_rsa --add</span><br><span class=\"line\"><span class=\"comment\"># 添加信任关系</span></span><br><span class=\"line\">ssh-copy-id -i deploy_rsa.pub &lt;ssh-user&gt;@&lt;deploy-host&gt;</span><br><span class=\"line\"><span class=\"comment\"># 删除敏感文件</span></span><br><span class=\"line\">rm -f deploy_rsa deploy_rsa.pub</span><br><span class=\"line\"><span class=\"comment\"># 将修改添加到git中</span></span><br><span class=\"line\">git add deploy_rsa.enc .travis.yml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## </span></span><br><span class=\"line\">-t <span class=\"built_in\">type</span> -b bit -C comment -f file</span><br><span class=\"line\"></span><br><span class=\"line\">-i   identity_file</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"travis-配置文件\"><a href=\"#travis-配置文件\" class=\"headerlink\" title=\"travis 配置文件\"></a>travis 配置文件</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sudo:</span> <span class=\"literal\">false</span> </span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">node_js</span></span><br><span class=\"line\"><span class=\"attr\">node_js:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"number\">12</span></span><br><span class=\"line\"><span class=\"attr\">cache:</span> <span class=\"string\">npm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 这里注意 文件不同 配置不同(yarn-lock文件有影响 需要添加 -yarn )</span></span><br><span class=\"line\"><span class=\"attr\">install:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">yarn</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">## 触发分支</span></span><br><span class=\"line\"><span class=\"attr\">branches:</span></span><br><span class=\"line\">  <span class=\"attr\">only:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 添加known_hosts    ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"comment\">## ip 是你服务器的IP地址   在环境变量中手动添加</span></span><br><span class=\"line\"><span class=\"attr\">addons:</span></span><br><span class=\"line\">  <span class=\"attr\">ssh_known_hosts:</span> <span class=\"string\">$&#123;IP&#125;</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"attr\">before_install:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">openssl</span> <span class=\"string\">aes-256-cbc</span> <span class=\"string\">-K</span> <span class=\"string\">$encrypted_024e66b057a6_key</span> <span class=\"string\">-iv</span> <span class=\"string\">$encrypted_024e66b057a6_iv</span></span><br><span class=\"line\">    <span class=\"string\">-in</span> <span class=\"string\">id_rsa.enc</span> <span class=\"string\">-out</span> <span class=\"string\">~/.ssh/id_rsa</span> <span class=\"string\">-d</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">chmod</span> <span class=\"number\">600</span> <span class=\"string\">~/.ssh/id_rsa</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">hexo</span> <span class=\"string\">generate</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ls</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">tar</span> <span class=\"string\">-zcvf</span> <span class=\"string\">hexo.tar.bz2</span> <span class=\"string\">./public</span> <span class=\"comment\"># 压缩</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">scp</span> <span class=\"string\">-o</span> <span class=\"string\">stricthostkeychecking=no</span> <span class=\"string\">-r</span> <span class=\"string\">./hexo.tar.bz2</span> <span class=\"string\">root@$&#123;IP&#125;:/www/wwwroot/blog.genji.xyz</span> <span class=\"comment\"># scp复制</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"string\">ssh</span> <span class=\"string\">root@$&#123;IP&#125;</span> <span class=\"string\">&#x27;cd /www/wwwroot/blog.genji.xyz &amp;&amp; tar -zxvf hexo.tar.bz2 &#x27;</span> <span class=\"comment\"># 解压</span></span><br><span class=\"line\">  <span class=\"comment\"># - cd public</span></span><br><span class=\"line\">  <span class=\"comment\"># - echo &#x27;blog.genji.xyz&#x27; &gt; CNAME</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">after_success:</span></span><br><span class=\"line\">\t<span class=\"bullet\">-</span> <span class=\"string\">do</span> <span class=\"string\">something</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 部署到服务器不需要了 部署到github page可以这么设置  token 就是</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">provider:</span> <span class=\"string\">pages</span></span><br><span class=\"line\">  <span class=\"attr\">skip-cleanup:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">github-token:</span> <span class=\"string\">&quot;$GH_TOKEN&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">keep-history:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">on:</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">local-dir:</span> <span class=\"string\">public</span></span><br><span class=\"line\"><span class=\"comment\">##</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h2><ol>\n<li><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh root@<span class=\"variable\">$&#123;IP&#125;</span> <span class=\"string\">&#x27;cd /www/wwwroot/blog.genji.xyz&#x27;</span></span><br><span class=\"line\">219The authenticity of host <span class=\"string\">&#x27;**.**.**.147 &#x27;</span> can<span class=\"string\">&#x27;t be established.</span></span><br><span class=\"line\"><span class=\"string\">220ECDSA key fingerprint is SHA256:0nYNmoIDAHBbvDCtGI//PiDCRbD3twO9wQftM8abBEg.</span></span><br><span class=\"line\"><span class=\"string\">221Are you sure you want to continue connecting (yes/no)? </span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-o StrictHostKeyChecking=no</span><br><span class=\"line\"></span><br><span class=\"line\">scp 或者 ssh 要添加 否则第一次连接时依然会要求你确认</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<ol start=\"2\">\n<li><pre><code class=\"bash\">\n ssh -o StrictHostKeyChecking=no root@$&#123;IP&#125; &#39;cd /www/wwwroot/blog.genji.xyz&#39;\nWarning: Permanently added &#39;ip&#39; (ECDSA) to the list of known hosts.\nroot@ip&#39;s password: \n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n\nPermissions 0664 for &#39;/home/travis/.ssh/id_rsa&#39; are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key &quot;/home/travis/.ssh/id_rsa&quot;: bad permissions\n\n</code></pre>\n</li>\n</ol>\n<p>   权限问题 Permissions 0664</p>\n<p>   before_install:<br>     - openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv<br>     -in id_rsa.enc -out ~/.ssh/id_rsa -d<br>     - chmod 600 ~/.ssh/id_rsa</p>\n<pre><code> 改成600</code></pre>\n<pre><code>\n\n</code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cki0qsrp7000tbnvtbu1kf6wq","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qsrpd0013bnvthl787zge"},{"post_id":"cki0qsrp7000tbnvtbu1kf6wq","category_id":"cki0qd2om00004lvt2aof2gap","_id":"cki0qsrpd0015bnvtaw01ffd5"},{"post_id":"cki0qxv5y000drtvtbox20s8s","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qxv67000qrtvta5tucu8h"},{"post_id":"cki0qxv5y000drtvtbox20s8s","category_id":"ckgktmr63000aibp71i4t9jpr","_id":"cki0qxv69000srtvt9wpa9w30"},{"post_id":"cki0qxv5z000grtvt2i3v734n","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qxv6a000vrtvtcawqd2ii"},{"post_id":"cki0qxv5z000grtvt2i3v734n","category_id":"ckgktmr63000aibp71i4t9jpr","_id":"cki0qxv6n000zrtvt92o28y0d"},{"post_id":"cki0qxv61000jrtvtbjn14f2j","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qxv6o0012rtvt50yu1j3o"},{"post_id":"cki0qxv61000jrtvtbjn14f2j","category_id":"ckgktmr63000aibp71i4t9jpr","_id":"cki0qxv6r0015rtvthiam737f"},{"post_id":"cki0qxv63000mrtvt7igkhev9","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qxv6s0017rtvth78e4e4o"},{"post_id":"cki0qxv63000mrtvt7igkhev9","category_id":"ckgktmr63000aibp71i4t9jpr","_id":"cki0qxv6t001artvtdhkf334b"},{"post_id":"cki0qxv65000prtvtaj6n1mvq","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki0qxv6t001crtvt89m0fl5c"},{"post_id":"cki0qxv65000prtvtaj6n1mvq","category_id":"ckgktmr63000aibp71i4t9jpr","_id":"cki0qxv6u001ertvt4mnv5tv4"},{"post_id":"cki69ze7l00000yvtfqvq8tnu","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki780lrc0002mjvta40l85ux"},{"post_id":"cki69ze7l00000yvtfqvq8tnu","category_id":"cki0r3g1y00076gvt1g6qdniz","_id":"cki780lrc0003mjvtf91x1917"},{"post_id":"cki781fv00000p2vt5oqfgx4c","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cki7kckbn0003auvt9psfe951"},{"post_id":"cki781fv00000p2vt5oqfgx4c","category_id":"cki7kckbm0001auvta8pgbrew","_id":"cki7kckbn0004auvte1uv7zh0"},{"post_id":"cki19a7ig00001nvtfr2w0tt6","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"cklzw8cse0007w0lee0ca2vbk"},{"post_id":"ckm4i2tvy0001dmle6r0xa0l1","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2twn0008dmle3n1y9ev3"},{"post_id":"ckm4i2tw20002dmle2nzlgjuz","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2two000bdmle47h13je9"},{"post_id":"ckm4i2tvu0000dmlegqma916n","category_id":"ckfvzv0ki0001zjp763ik3xth","_id":"ckm4i2twq000edmlegfz5flul"},{"post_id":"ckm4i2tvu0000dmlegqma916n","category_id":"ckm4i2tw30003dmlego8qdv41","_id":"ckm4i2twr000hdmledzq4avpb"},{"post_id":"ckm4i2twm0007dmle9ffa2wne","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2twt000ldmled0y10ka2"},{"post_id":"ckm4i2two000admle4qsx6owj","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2twu000ndmlegozl9n8z"},{"post_id":"ckm4i2twp000ddmle1vhobha9","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2twv000qdmle390zhnzr"},{"post_id":"ckm4i2twq000gdmled0qi29mx","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2twx000sdmle5boi7p0k"},{"post_id":"ckm4i2tws000kdmleh8exb3os","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2twz000wdmle2l6m1rpt"},{"post_id":"ckm4h6wzv000omeleg4ec139f","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4i2tx0000zdmlecl6e69rx"},{"post_id":"cki1f88ql00008svtaxn56b5n","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4i2tx10012dmle8xd82djd"},{"post_id":"cki1f88ql00008svtaxn56b5n","category_id":"ckgktmr63000aibp71i4t9jpr","_id":"ckm4i2tx40016dmledck4amm1"},{"post_id":"ckm4i2twy000vdmle8h202hn3","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4i2tx6001cdmleb1je7maf"},{"post_id":"ckm4i2twy000vdmle8h202hn3","category_id":"ckgktmr63000aibp71i4t9jpr","_id":"ckm4i2tx8001fdmleg2dydas7"},{"post_id":"ckm4i2twu000pdmleama727d2","category_id":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txb001odmle9jahfz58"},{"post_id":"ckm4i2twu000pdmleama727d2","category_id":"ckm4i2tx6001bdmle5qcl5k76","_id":"ckm4i2txb001qdmle712cdisn"},{"post_id":"ckm4i2tx10011dmle9qe6eehl","category_id":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txc001tdmlefj9q0hb7"},{"post_id":"ckm4i2tx10011dmle9qe6eehl","category_id":"ckm4i2tx9001idmlec61l09xh","_id":"ckm4i2txc001vdmleb9bk4ulb"},{"post_id":"ckm4i2tx30014dmlecb384s5f","category_id":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txc001ydmlehq1sh90y"},{"post_id":"ckm4i2tx30014dmlecb384s5f","category_id":"ckm4i2txb001ndmle73yjg63a","_id":"ckm4i2txe001zdmle3cqc90gz"},{"post_id":"ckm4i2tx40018dmle18hveqdr","category_id":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txg0021dmle5xhd7juo"},{"post_id":"ckm4i2tx40018dmle18hveqdr","category_id":"ckm4i2txb001sdmle4uya1nup","_id":"ckm4i2txg0022dmleh2om26d5"},{"post_id":"ckm4i2tx5001admle85rqf7bu","category_id":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txg0023dmle03zh0z5x"},{"post_id":"ckm4i2tx5001admle85rqf7bu","category_id":"ckm4i2txb001sdmle4uya1nup","_id":"ckm4i2txg0024dmle10h78xiw"},{"post_id":"ckm4i2tx6001edmle2rnxhgpo","category_id":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i2txg0025dmle4mfwe7dp"},{"post_id":"ckm4i2tx6001edmle2rnxhgpo","category_id":"ckm4i2txf0020dmle2foxgun6","_id":"ckm4i2txg0026dmle9hzh5k8v"},{"post_id":"ckm4i3u6p0000i4le4jt296hm","category_id":"ckm4i2twy000udmleh0s61mwi","_id":"ckm4i3u750003i4le8cdy07pf"},{"post_id":"ckm4i3u6p0000i4le4jt296hm","category_id":"ckm4i3u6w0002i4le7fy6h2nn","_id":"ckm4i3u760004i4le9s0ih82v"},{"post_id":"ckm4iayk20000m2le18ffc477","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4iayke0004m2le18td2l3t"},{"post_id":"ckm4iayk20000m2le18ffc477","category_id":"cki0r3g1y00076gvt1g6qdniz","_id":"ckm4iaykf0006m2le6yxcdy5j"},{"post_id":"ckm4i2twi0005dmle34360hzu","category_id":"ckfp0iqy600038ap7dkweaihi","_id":"ckm4iaykg0009m2le3ydbfqxh"},{"post_id":"ckm4iayka0002m2legbuaf5pl","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4iaykh000cm2le8zud7nfg"},{"post_id":"ckm4iayka0002m2legbuaf5pl","category_id":"ckm4i2tx30015dmlegfn457gm","_id":"ckm4iaykj000fm2le1wrv26j5"},{"post_id":"cki19a7ig00001nvtfr2w0tt6","category_id":"cki7kckbm0001auvta8pgbrew","_id":"ckm4iaykl000im2le2nnydev6"},{"post_id":"ckm4iaykf0008m2leecyj66uh","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4iaykm000km2le7m6n96fp"},{"post_id":"ckm4iaykf0008m2leecyj66uh","category_id":"cki0qxv6b000yrtvtfum69ud9","_id":"ckm4iaykm000mm2le0qxhc81l"},{"post_id":"ckm4iaykh000bm2le2sq8eo3i","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4iaykm000om2leb5o57e55"},{"post_id":"ckm4iaykh000bm2le2sq8eo3i","category_id":"cki0qxv6b000yrtvtfum69ud9","_id":"ckm4iaykm000qm2lefzl1d8t5"},{"post_id":"ckm4iayki000em2le0uv93vop","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4iaykm000sm2le9l9082i2"},{"post_id":"ckm4iayki000em2le0uv93vop","category_id":"cki0qxv6b000yrtvtfum69ud9","_id":"ckm4iaykm000um2le1m5h83m8"},{"post_id":"ckm4iaykk000hm2le4k9g3lrd","category_id":"ckfpphzlp00019sp7gyogcwqn","_id":"ckm4iaykn000wm2led4s9bwwl"},{"post_id":"ckm4iaykk000hm2le4k9g3lrd","category_id":"cki0qxv6b000yrtvtfum69ud9","_id":"ckm4iaykn000ym2leh45qbuff"}],"PostTag":[{"post_id":"cki0qsrp7000tbnvtbu1kf6wq","tag_id":"ckhisipvn0009h0p7cmq63z26","_id":"cki0qsrpe001dbnvt1xxhe1am"},{"post_id":"cki0qxv5y000drtvtbox20s8s","tag_id":"ckgktmr620007ibp72dzk4ced","_id":"cki0qxv6a000wrtvt1i7s1anr"},{"post_id":"cki0qxv5y000drtvtbox20s8s","tag_id":"ckgktmr68000libp743picqzd","_id":"cki0qxv6n0010rtvt6ea39s3m"},{"post_id":"cki0qxv5z000grtvt2i3v734n","tag_id":"ckgktmr620007ibp72dzk4ced","_id":"cki0qxv6p0013rtvt5u3ecovo"},{"post_id":"cki0qxv5z000grtvt2i3v734n","tag_id":"ckgktmr68000libp743picqzd","_id":"cki0qxv6s0016rtvt4giq32sp"},{"post_id":"cki0qxv61000jrtvtbjn14f2j","tag_id":"ckgktmr620007ibp72dzk4ced","_id":"cki0qxv6s0018rtvtctpfhj3s"},{"post_id":"cki0qxv61000jrtvtbjn14f2j","tag_id":"ckgktmr68000libp743picqzd","_id":"cki0qxv6t001brtvtbncx4lpg"},{"post_id":"cki0qxv63000mrtvt7igkhev9","tag_id":"ckgktmr620007ibp72dzk4ced","_id":"cki0qxv6t001drtvt60o66u2j"},{"post_id":"cki0qxv63000mrtvt7igkhev9","tag_id":"ckgktmr68000libp743picqzd","_id":"cki0qxv6u001frtvt8hvv3lrd"},{"post_id":"cki69ze7l00000yvtfqvq8tnu","tag_id":"cki780lr50001mjvthdsn313u","_id":"cki780lrc0004mjvt2y5yezoa"},{"post_id":"cki781fv00000p2vt5oqfgx4c","tag_id":"cki7kckbf0000auvt10tg3vit","_id":"cki7kckbn0002auvtb2a41ks9"},{"post_id":"cki1f88ql00008svtaxn56b5n","tag_id":"ckgktmr620007ibp72dzk4ced","_id":"ckm4gt4cw000224leg3an5fcr"},{"post_id":"cki19a7ig00001nvtfr2w0tt6","tag_id":"ckm4gt4cn000024lecnucd9n8","_id":"ckm4gt4cx000324lec94eejoo"},{"post_id":"ckm4h6wzv000omeleg4ec139f","tag_id":"cki0savvk0000jtvtesi1c0k8","_id":"ckm4h6wzx000umeleeqzohh3g"},{"post_id":"ckm4i2tvu0000dmlegqma916n","tag_id":"ckfvhvcfx000g6pp7e8ujh1p1","_id":"ckm4i2twh0004dmle8ec86vf3"},{"post_id":"ckm4i2tvy0001dmle6r0xa0l1","tag_id":"ckfp0iqyb00048ap7dtui0g6g","_id":"ckm4i2twk0006dmle3jsf8aq6"},{"post_id":"ckm4i2tw20002dmle2nzlgjuz","tag_id":"ckf6gww9d0003zop747kb4hwt","_id":"ckm4i2twn0009dmlebto0gpq3"},{"post_id":"ckm4i2tw20002dmle2nzlgjuz","tag_id":"ckf6gww9g0008zop7661uc01u","_id":"ckm4i2twp000cdmle2mwe4kaz"},{"post_id":"ckm4i2twm0007dmle9ffa2wne","tag_id":"ckf6gww9s0010zop7ft9o70l2","_id":"ckm4i2twq000fdmle4odq5t55"},{"post_id":"ckm4i2twm0007dmle9ffa2wne","tag_id":"ckf6gww9t0015zop7e8rh65vi","_id":"ckm4i2twr000idmleauhu12qi"},{"post_id":"ckm4i2two000admle4qsx6owj","tag_id":"ckgktmr5s0001ibp7c3epcvv6","_id":"ckm4i2twt000mdmle5xws6t3i"},{"post_id":"ckm4i2two000admle4qsx6owj","tag_id":"ckf6gww9g0008zop7661uc01u","_id":"ckm4i2twu000odmlebkz9cug3"},{"post_id":"ckm4i2twq000gdmled0qi29mx","tag_id":"ckgktmr5s0001ibp7c3epcvv6","_id":"ckm4i2twv000rdmle4ot683fw"},{"post_id":"ckm4i2tws000kdmleh8exb3os","tag_id":"ckf74sjdq00070vp78m5qd6gr","_id":"ckm4i2twx000tdmle3tmk5oek"},{"post_id":"ckm4i2tws000kdmleh8exb3os","tag_id":"ckf74sjds00090vp7dkku50bx","_id":"ckm4i2twz000xdmle17ho9wqv"},{"post_id":"ckm4i2twp000ddmle1vhobha9","tag_id":"ckm4i2twr000jdmle86w34h6f","_id":"ckm4i2tx00010dmlegqqj8aam"},{"post_id":"ckm4i2twu000pdmleama727d2","tag_id":"ckf6gww9u001czop719cj7zto","_id":"ckm4i2tx10013dmleeegr5nuo"},{"post_id":"ckm4i2twu000pdmleama727d2","tag_id":"ckfvz2qo20001jfp739ze273g","_id":"ckm4i2tx40017dmleh2gi14so"},{"post_id":"ckm4i2twu000pdmleama727d2","tag_id":"ckfvz2qo30002jfp76ngw5l0s","_id":"ckm4i2tx50019dmle59zrbzv7"},{"post_id":"ckm4i2twy000vdmle8h202hn3","tag_id":"ckgktmr620007ibp72dzk4ced","_id":"ckm4i2tx6001ddmle63yx8gj9"},{"post_id":"ckm4i2twy000vdmle8h202hn3","tag_id":"ckgovbiqb00096wp7cl8kfn5d","_id":"ckm4i2tx8001gdmlehab0ek0b"},{"post_id":"ckm4i2tx10011dmle9qe6eehl","tag_id":"ckf6gww9w001jzop71fc9cf12","_id":"ckm4i2txa001kdmle8lgec6nz"},{"post_id":"ckm4i2tx30014dmlecb384s5f","tag_id":"ckf6gww9t0017zop7bg56bb8i","_id":"ckm4i2txa001mdmle1vch53jv"},{"post_id":"ckm4i2tx40018dmle18hveqdr","tag_id":"ckf6gww9u001czop719cj7zto","_id":"ckm4i2txb001pdmle0bl5eu2y"},{"post_id":"ckm4i2tx5001admle85rqf7bu","tag_id":"ckf6gww9u001czop719cj7zto","_id":"ckm4i2txb001rdmlee1zk3m8r"},{"post_id":"ckm4i2tx6001edmle2rnxhgpo","tag_id":"ckhisipvc0001h0p7gsmzbj6p","_id":"ckm4i2txc001udmlec1l96pm5"},{"post_id":"ckm4i2tx6001edmle2rnxhgpo","tag_id":"ckhisipvm0005h0p714rx852a","_id":"ckm4i2txc001wdmleg5s1fda6"},{"post_id":"ckm4i3u6p0000i4le4jt296hm","tag_id":"ckfvhvcfw000a6pp7gcecgxoj","_id":"ckm4i3u6w0001i4lecd4j2fxp"},{"post_id":"ckm4iayk20000m2le18ffc477","tag_id":"ckf6gww9w001kzop74rqfh70b","_id":"ckm4iayka0001m2leg39i0uan"},{"post_id":"ckm4iayk20000m2le18ffc477","tag_id":"ckf6gww9x001nzop79v5b05n4","_id":"ckm4iaykc0003m2ledapual8g"},{"post_id":"ckm4iayk20000m2le18ffc477","tag_id":"ckf6gww9x001ozop7ecufc2al","_id":"ckm4iayke0005m2leh8ts0qys"},{"post_id":"ckm4iayk20000m2le18ffc477","tag_id":"ckf6gww9x001pzop77rn2hvzu","_id":"ckm4iaykf0007m2ledauwaqmb"},{"post_id":"ckm4iayk20000m2le18ffc477","tag_id":"ckf6gww9x001qzop70nt39exc","_id":"ckm4iaykg000am2le4kxy00gy"},{"post_id":"ckm4iayk20000m2le18ffc477","tag_id":"ckfpproe70000rvp78qcg4js6","_id":"ckm4iayki000dm2legpht1e06"},{"post_id":"ckm4i2twi0005dmle34360hzu","tag_id":"ckfvhvcfm00036pp7dn0g3uyc","_id":"ckm4iaykk000gm2leddh1dei7"},{"post_id":"ckm4i2twi0005dmle34360hzu","tag_id":"ckf6gww9t0017zop7bg56bb8i","_id":"ckm4iaykl000jm2le9ch3dy4p"},{"post_id":"ckm4i2twi0005dmle34360hzu","tag_id":"ckfvhvcfu00076pp73ch6hara","_id":"ckm4iaykm000lm2le27oh47c2"},{"post_id":"ckm4iayka0002m2legbuaf5pl","tag_id":"ckfpp9vzm0002ujp7guybhxsm","_id":"ckm4iaykm000nm2le8if2645y"},{"post_id":"ckm4iaykf0008m2leecyj66uh","tag_id":"ckfpl0eop0004z1p720804bns","_id":"ckm4iaykm000pm2le1ohe2fck"},{"post_id":"ckm4iaykf0008m2leecyj66uh","tag_id":"ckfppt64i0000u2p7bti3gkpx","_id":"ckm4iaykm000rm2lec76r2704"},{"post_id":"ckm4iaykh000bm2le2sq8eo3i","tag_id":"ckfpl0eou0009z1p742kp7odn","_id":"ckm4iaykm000tm2le5uzz9juu"},{"post_id":"ckm4iaykh000bm2le2sq8eo3i","tag_id":"ckfpl0eop0004z1p720804bns","_id":"ckm4iaykm000vm2le7hzn1rna"},{"post_id":"ckm4iayki000em2le0uv93vop","tag_id":"ckf6gww9i000dzop7091vdvgh","_id":"ckm4iaykn000xm2leep0v2g8b"},{"post_id":"ckm4iayki000em2le0uv93vop","tag_id":"ckf6gww9n000kzop7bvcu7xfl","_id":"ckm4iaykn000zm2le2a1vd955"},{"post_id":"ckm4iayki000em2le0uv93vop","tag_id":"ckf6gww9p000ozop70m4hdeoj","_id":"ckm4iaykn0010m2le7fuo9i7n"},{"post_id":"ckm4iayki000em2le0uv93vop","tag_id":"ckfpl0eop0004z1p720804bns","_id":"ckm4iaykn0011m2legg8e1hzk"},{"post_id":"ckm4iaykk000hm2le4k9g3lrd","tag_id":"ckf6gww9i000dzop7091vdvgh","_id":"ckm4iaykn0012m2le7ms98zj2"},{"post_id":"ckm4iaykk000hm2le4k9g3lrd","tag_id":"ckf6gww9r000wzop71qj73unu","_id":"ckm4iayko0013m2leezv49ufc"},{"post_id":"ckm4iaykk000hm2le4k9g3lrd","tag_id":"ckfpl0eop0004z1p720804bns","_id":"ckm4iayko0014m2le7k1ohxiq"}],"Tag":[{"name":"ddns","_id":"ckf6gww9d0003zop747kb4hwt"},{"name":"旁路由","_id":"ckf6gww9g0008zop7661uc01u"},{"name":"Travis","_id":"ckf6gww9i000dzop7091vdvgh"},{"name":"github-pages","_id":"ckf6gww9n000kzop7bvcu7xfl"},{"name":"CNAME","_id":"ckf6gww9p000ozop70m4hdeoj"},{"name":"ssh","_id":"ckf6gww9r000wzop71qj73unu"},{"name":"frp","_id":"ckf6gww9s0010zop7ft9o70l2"},{"name":"内网穿透","_id":"ckf6gww9t0015zop7e8rh65vi"},{"name":"docker","_id":"ckf6gww9t0017zop7bg56bb8i"},{"name":"linux","_id":"ckf6gww9u001bzop70ugaf3fr"},{"name":"git","_id":"ckf6gww9u001czop719cj7zto"},{"name":"error","_id":"ckf6gww9w001jzop71fc9cf12"},{"name":"rem","_id":"ckf6gww9w001kzop74rqfh70b"},{"name":"meta","_id":"ckf6gww9x001nzop79v5b05n4"},{"name":"postcss","_id":"ckf6gww9x001ozop7ecufc2al"},{"name":"px2rem","_id":"ckf6gww9x001pzop77rn2hvzu"},{"name":"移动端","_id":"ckf6gww9x001qzop70nt39exc"},{"name":"光猫","_id":"ckf74sjdq00070vp78m5qd6gr"},{"name":"路由器","_id":"ckf74sjds00090vp7dkku50bx"},{"name":"awtrix","_id":"ckfp0iqyb00048ap7dtui0g6g"},{"name":"action","_id":"ckfpl0eom0001z1p73o0a8ho6"},{"name":"CI/CD","_id":"ckfpl0eop0004z1p720804bns"},{"name":"webhook","_id":"ckfpl0eou0009z1p742kp7odn"},{"name":"网络,git,proxy","_id":"ckfpl0eow000dz1p7f7nafszk"},{"name":"网络,git,proxy,终端","_id":"ckfpo5t94000031p78lvfdmt9"},{"name":"Tips","_id":"ckfpp9vzm0002ujp7guybhxsm"},{"name":"响应式","_id":"ckfpproe70000rvp78qcg4js6"},{"name":"github action","_id":"ckfppt64i0000u2p7bti3gkpx"},{"name":"gitea","_id":"ckfvhvcfm00036pp7dn0g3uyc"},{"name":"端口映射","_id":"ckfvhvcfu00076pp73ch6hara"},{"name":"Mac","_id":"ckfvhvcfw000a6pp7gcecgxoj"},{"name":"mongoDB","_id":"ckfvhvcfx000g6pp7e8ujh1p1"},{"name":"网络","_id":"ckfvz2qnx0000jfp7akrif75d"},{"name":"proxy","_id":"ckfvz2qo20001jfp739ze273g"},{"name":"终端","_id":"ckfvz2qo30002jfp76ngw5l0s"},{"name":"Markdown,Typora","_id":"ckg116i4d0001u1p7ci7afdo2"},{"name":"openwrt","_id":"ckgktmr5s0001ibp7c3epcvv6"},{"name":"js","_id":"ckgktmr620007ibp72dzk4ced"},{"name":"好的的写法","_id":"ckgktmr64000cibp72yvlfl7o"},{"name":"Array","_id":"ckgktmr68000libp743picqzd"},{"name":"sketch","_id":"ckgktmr69000uibp7dz0p1qfw"},{"name":"Mark","_id":"ckgovbiqb00096wp7cl8kfn5d"},{"name":"Markdown","_id":"ckhisipvc0001h0p7gsmzbj6p"},{"name":"Typora","_id":"ckhisipvm0005h0p714rx852a"},{"name":"npm","_id":"ckhisipvn0009h0p7cmq63z26"},{"name":"黑苹果","_id":"cki0savvk0000jtvtesi1c0k8"},{"name":"parallax","_id":"cki780lr50001mjvthdsn313u"},{"name":"爬虫","_id":"cki7kckbf0000auvt10tg3vit"},{"name":"node","_id":"ckm4gt4cn000024lecnucd9n8"},{"name":"标签","_id":"ckm4h6wzn0008mele4z175gpm"},{"name":"md","_id":"ckm4i2twr000jdmle86w34h6f"}]}}