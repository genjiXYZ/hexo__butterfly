<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="2021/03/11/%E6%A8%A1%E6%9D%BF/"/>
      <url>2021/03/11/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>title: title<br>date: 2020-04-01 00:00:00<br>updated:<br>cover:  封面<br>description: 描述</p><p>tags:      标签<br>keywords: 关键词<br>categories: [分类,分类]</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>npm publish一个 vue 组件</title>
      <link href="2020/11/01/%E5%89%8D%E7%AB%AF/npm/2020-11-15_npm_publish/"/>
      <url>2020/11/01/%E5%89%8D%E7%AB%AF/npm/2020-11-15_npm_publish/</url>
      
        <content type="html"><![CDATA[<h2 id="两种方式包"><a href="#两种方式包" class="headerlink" title="两种方式包"></a>两种方式包</h2><p>1.webpack 打包成 js ( 体积小,适用极少的依赖第三方插件)</p><p>2.直接 vue 组件 (直观,方便后期改)</p><div class="note info no-icon flat"><p>我这小组件,还在更新中,经常改.( 感觉传入参数 还需要重新设计下!)所以选择第二种方式 .</p></div><h2 id="create-hello"><a href="#create-hello" class="headerlink" title="create hello"></a>create hello</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue create hello  -m npm    <span class="comment">// -m 选择   包管理工具</span></span><br><span class="line">然后你随便写个你想要的 组件</span><br></pre></td></tr></table></figure><h2 id="提取组件-添加入口文件"><a href="#提取组件-添加入口文件" class="headerlink" title="提取组件/添加入口文件"></a>提取组件/添加入口文件</h2><p><img src="https://picgo.genji.xyz/blog/posts/image-20201115145749248.png" alt="image-20201115145749248"></p><p>创建个lib 文件夹 在src同级,将<code>components</code> 复制粘贴 </p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201115150045695.png" alt="image-20201115150045695"></p><p>在lib目录下 创建index.js  入口文件</p><p><a href="https://cn.vuejs.org/v2/guide/plugins.html#%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6">要暴露install 方法 :官方文档</a></p><p>第一个参数是 <code>Vue</code> 构造器，第二个参数是一个可选的选项对象.</p><div class="tabs" id="info"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#info-1">单组件</button></li><li class="tab"><button type="button" data-href="#info-2">按需引入</button></li><li class="tab"><button type="button" data-href="#info-3">antd</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="info-1"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//  lib/index.js</span></span><br><span class="line"><span class="keyword">import</span> parallaxBanner <span class="keyword">from</span> <span class="string">&#x27;./components/parallaxBanner&#x27;</span></span><br><span class="line"></span><br><span class="line">parallaxBanner.install = <span class="function"><span class="keyword">function</span>(<span class="params">Vue</span>)</span>&#123;</span><br><span class="line">Vue.component(parallaxBanner.name, parallaxBanner)</span><br><span class="line">  <span class="comment">//这里的parallaxBanner.name 就是你组件里面 定义的name  也可替换成任意 &quot;str&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> parallaxBanner</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="info-2"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  按需引入 就是搞个对象出去 然后  import &#123;a&#125; = &#123;a,b&#125;</span></span><br><span class="line"><span class="keyword">let</span> ModuleObj = &#123;</span><br><span class="line">    ComponentA,</span><br><span class="line">    ComponentB</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> MyModule = &#123;&#125;</span><br><span class="line">MyModule.install = <span class="function">(<span class="params">Vue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> ModuleObj) &#123;</span><br><span class="line">        Vue.component(i, ModuleObj[i])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> MyModule</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="info-3"><p>** 见文章末尾 其他 ** </p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;vue-parallax-banner&quot;</span>,   <span class="comment">// name required</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;0.0.67&quot;</span>,     <span class="comment">// 版本号  每次publish的版本一定要不同 required</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span>: <span class="literal">false</span>,        <span class="comment">// 公开/私人 required</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;genjixyz&quot;</span>,    <span class="comment">// 作者   required</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;lib/index.js&quot;</span>,  <span class="comment">// 入口文件  required</span></span><br><span class="line">  <span class="attr">&quot;files&quot;</span>: [<span class="string">&quot;lib&quot;</span>],        <span class="comment">// 白名单   </span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span>:<span class="string">&quot;MIT&quot;</span>,  <span class="comment">//开源协议</span></span><br><span class="line">  <span class="attr">&quot;repository&quot;</span>: &#123;    <span class="comment">//repo</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;git&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;https://github.com/genjiXYZ/vue-parallax-banner&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;serve&quot;</span>: <span class="string">&quot;vue-cli-service serve&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;build&quot;</span>: <span class="string">&quot;vue-cli-service build&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;core-js&quot;</span>: <span class="string">&quot;^3.6.5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vue&quot;</span>: <span class="string">&quot;^2.6.11&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vue-parallax-banner&quot;</span>: <span class="string">&quot;0.0.63&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@vue/cli-plugin-babel&quot;</span>: <span class="string">&quot;~4.5.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;@vue/cli-service&quot;</span>: <span class="string">&quot;~4.5.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;vue-template-compiler&quot;</span>: <span class="string">&quot;^2.6.11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;browserslist&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;&gt; 1%&quot;</span>,</span><br><span class="line">    <span class="string">&quot;last 2 versions&quot;</span>,</span><br><span class="line">    <span class="string">&quot;not dead&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="npm-publish"><a href="#npm-publish" class="headerlink" title="npm publish"></a>npm publish</h2><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test3-1">1.npm 源</button></li><li class="tab"><button type="button" data-href="#test3-2">2.npm login</button></li><li class="tab"><button type="button" data-href="#test3-3">3.npm pack / npm publish</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><p>确认你的 npm 源 ,想要在哪个源发布就用哪个.<br>   <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">❯ npm config list  </span><br><span class="line">// metrics-registry = <span class="string">&quot;https://registry.npm.taobao.org/&quot;</span></span><br><span class="line"></span><br><span class="line">//我这里用的nrm </span><br><span class="line">❯ nrm ls </span><br><span class="line"></span><br><span class="line">  npm -------- https://registry.npmjs.org/</span><br><span class="line">  yarn ------- https://registry.yarnpkg.com/</span><br><span class="line">  cnpm ------- http://r.cnpmjs.org/</span><br><span class="line">* taobao ----- https://registry.npm.taobao.org/</span><br><span class="line">  nj --------- https://registry.nodejitsu.com/</span><br><span class="line">  npmMirror -- https://skimdb.npmjs.com/registry/</span><br><span class="line">  edunpm ----- http://registry.enpmjs.org/</span><br><span class="line">  </span><br><span class="line">❯ nrm use npm</span><br><span class="line">   Registry has been <span class="built_in">set</span> to: https://registry.npmjs.org/</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p> 登录<br> <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">❯  npm login</span><br><span class="line">Username: genji.xyz</span><br><span class="line">Password:</span><br><span class="line">Email: (this IS public) 895939059@qq.com</span><br><span class="line">Logged <span class="keyword">in</span> as genji.xyz on https://registry.npmjs.org/.</span><br><span class="line"></span><br><span class="line">// 这里可能有很多报错  我遇到了这些 =_=!</span><br><span class="line">---------------------</span><br><span class="line">npm ERR! 402 Payment Required - PUT http://registry.npmjs.org/@genji%2fparallax-banner - You must sign up <span class="keyword">for</span> private packages </span><br><span class="line"></span><br><span class="line">//package.json 中 <span class="string">&quot;private&quot;</span>: <span class="literal">false</span>,    因为你没花钱 不能用私人包</span><br><span class="line"></span><br><span class="line">---------------------</span><br><span class="line">npm ERR! code E404</span><br><span class="line">npm ERR! 404 Not Found - PUT https://registry.npmjs.org/genji-parallax-banner - Not found</span><br><span class="line">npm ERR! 404 </span><br><span class="line">npm ERR! 404  <span class="string">&#x27;genji-parallax-banner@0.0.1&#x27;</span> is not <span class="keyword">in</span> the npm registry.</span><br><span class="line">npm ERR! 404 You should bug the author to publish it (or use the name yourself!)</span><br><span class="line">npm ERR! 404 </span><br><span class="line"></span><br><span class="line">//我没有验证邮箱,  好多都报错404 问题都不一样</span><br><span class="line"></span><br><span class="line">---------------------</span><br><span class="line">npm ERR! code E403</span><br><span class="line">npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/genji-parallax-banner - Forbidden</span><br><span class="line">npm ERR! 403 In most cases, you or one of your dependencies are requesting</span><br><span class="line">npm ERR! 403 a package version that is forbidden by your security policy.</span><br><span class="line">// npm 包名字不能重复</span><br><span class="line"></span><br><span class="line">---------------------</span><br><span class="line">npm ERR! 403 403 Forbidden - PUT https://registry.npmjs.org/vue-paralax-banner - vue-paralax-banner cannot be republished until 24 hours have passed.</span><br><span class="line"></span><br><span class="line">//删除后 24 小时后 才能发布 相同名字的package</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p>pack publish<br>   <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm pack // 本地生成一个压缩包  解压引入 测试用</span><br><span class="line">npm publish  //发布</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h4 id="随手记录下antd-的-dependencies-有好用的-以后可以用"><a href="#随手记录下antd-的-dependencies-有好用的-以后可以用" class="headerlink" title="随手记录下antd 的 dependencies 有好用的 以后可以用."></a>随手记录下antd 的 <code>dependencies</code> 有好用的 以后可以用.</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;@ant-design/icons&quot;: &quot;^2.1.1&quot;,</span><br><span class="line">    &quot;@ant-design/icons-vue&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;@simonwep/pickr&quot;: &quot;~1.7.0&quot;,</span><br><span class="line">    &quot;add-dom-event-listener&quot;: &quot;^1.0.2&quot;,</span><br><span class="line">    &quot;array-tree-filter&quot;: &quot;^2.1.0&quot;,</span><br><span class="line">    &quot;async-validator&quot;: &quot;^3.0.3&quot;,</span><br><span class="line">    &quot;babel-helper-vue-jsx-merge-props&quot;: &quot;^2.0.3&quot;,</span><br><span class="line">    &quot;babel-runtime&quot;: &quot;6.x&quot;,</span><br><span class="line">    &quot;classnames&quot;: &quot;^2.2.5&quot;,</span><br><span class="line">    &quot;component-classes&quot;: &quot;^1.2.6&quot;,</span><br><span class="line">    &quot;dom-align&quot;: &quot;^1.10.4&quot;,</span><br><span class="line">    &quot;dom-closest&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;dom-scroll-into-view&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;enquire.js&quot;: &quot;^2.1.6&quot;,</span><br><span class="line">    &quot;intersperse&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;is-mobile&quot;: &quot;^2.2.1&quot;,</span><br><span class="line">    &quot;is-negative-zero&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;ismobilejs&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;json2mq&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;lodash&quot;: &quot;^4.17.5&quot;,</span><br><span class="line">    &quot;moment&quot;: &quot;^2.21.0&quot;,</span><br><span class="line">    &quot;mutationobserver-shim&quot;: &quot;^0.3.2&quot;,</span><br><span class="line">    &quot;node-emoji&quot;: &quot;^1.10.0&quot;,</span><br><span class="line">    &quot;omit.js&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;raf&quot;: &quot;^3.4.0&quot;,</span><br><span class="line">    &quot;resize-observer-polyfill&quot;: &quot;^1.5.1&quot;,</span><br><span class="line">    &quot;shallow-equal&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;shallowequal&quot;: &quot;^1.0.2&quot;,</span><br><span class="line">    &quot;vue-ref&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;warning&quot;: &quot;^4.0.0&quot;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">    &quot;chalk&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;cheerio&quot;: &quot;^1.0.0-rc.2&quot;,</span><br><span class="line">    &quot;codecov&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;colorful&quot;: &quot;^2.1.0&quot;,</span><br><span class="line">    &quot;commander&quot;: &quot;^4.0.0&quot;,</span><br><span class="line">    &quot;compare-versions&quot;: &quot;^3.3.0&quot;,</span><br><span class="line">    &quot;cross-env&quot;: &quot;^7.0.0&quot;,</span><br><span class="line">    &quot;css-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;deep-assign&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;enquire-js&quot;: &quot;^0.2.1&quot;,</span><br><span class="line">    &quot;eslint&quot;: &quot;^6.8.0&quot;,</span><br><span class="line">    &quot;eslint-config-prettier&quot;: &quot;^6.10.1&quot;,</span><br><span class="line">    &quot;eslint-plugin-html&quot;: &quot;^6.0.0&quot;,</span><br><span class="line">    &quot;eslint-plugin-markdown&quot;: &quot;^2.0.0-alpha.0&quot;,</span><br><span class="line">    &quot;eslint-plugin-vue&quot;: &quot;^6.2.2&quot;,</span><br><span class="line">    &quot;fetch-jsonp&quot;: &quot;^1.1.3&quot;,</span><br><span class="line">    &quot;fs-extra&quot;: &quot;^8.0.0&quot;,</span><br><span class="line">    &quot;glob&quot;: &quot;^7.1.2&quot;,</span><br><span class="line">    &quot;gulp&quot;: &quot;^4.0.1&quot;,</span><br><span class="line">    &quot;gulp-babel&quot;: &quot;^7.0.0&quot;,</span><br><span class="line">    &quot;gulp-strip-code&quot;: &quot;^0.1.4&quot;,</span><br><span class="line">    &quot;html-webpack-plugin&quot;: &quot;^3.2.0&quot;,</span><br><span class="line">    &quot;husky&quot;: &quot;^4.0.0&quot;,</span><br><span class="line">    &quot;istanbul-instrumenter-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;jest&quot;: &quot;^24.0.0&quot;,</span><br><span class="line">    &quot;jest-serializer-vue&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;jest-transform-stub&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;js-base64&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;json-templater&quot;: &quot;^1.2.0&quot;,</span><br><span class="line">    &quot;jsonp&quot;: &quot;^0.2.1&quot;,</span><br><span class="line">    &quot;less&quot;: &quot;^3.9.0&quot;,</span><br><span class="line">    &quot;less-loader&quot;: &quot;^6.0.0&quot;,</span><br><span class="line">    &quot;less-plugin-npm-import&quot;: &quot;^2.1.0&quot;,</span><br><span class="line">    &quot;lint-staged&quot;: &quot;^10.0.0&quot;,</span><br><span class="line">    &quot;marked&quot;: &quot;0.3.18&quot;,</span><br><span class="line">    &quot;merge2&quot;: &quot;^1.2.1&quot;,</span><br><span class="line">    &quot;mini-css-extract-plugin&quot;: &quot;^0.10.0&quot;,</span><br><span class="line">    &quot;minimist&quot;: &quot;^1.2.0&quot;,</span><br><span class="line">    &quot;mkdirp&quot;: &quot;^0.5.1&quot;,</span><br><span class="line">    &quot;mockdate&quot;: &quot;^2.0.2&quot;,</span><br><span class="line">    &quot;nprogress&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;optimize-css-assets-webpack-plugin&quot;: &quot;^5.0.1&quot;,</span><br><span class="line">    &quot;postcss&quot;: &quot;^7.0.6&quot;,</span><br><span class="line">    &quot;postcss-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;prettier&quot;: &quot;^1.18.2&quot;,</span><br><span class="line">    &quot;pretty-quick&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">    &quot;querystring&quot;: &quot;^0.2.0&quot;,</span><br><span class="line">    &quot;raw-loader&quot;: &quot;^4.0.0&quot;,</span><br><span class="line">    &quot;reqwest&quot;: &quot;^2.0.5&quot;,</span><br><span class="line">    &quot;rimraf&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;rucksack-css&quot;: &quot;^1.0.2&quot;,</span><br><span class="line">    &quot;selenium-server&quot;: &quot;^3.0.1&quot;,</span><br><span class="line">    &quot;semver&quot;: &quot;^7.0.0&quot;,</span><br><span class="line">    &quot;style-loader&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;stylelint&quot;: &quot;^13.0.0&quot;,</span><br><span class="line">    &quot;stylelint-config-prettier&quot;: &quot;^8.0.0&quot;,</span><br><span class="line">    &quot;stylelint-config-standard&quot;: &quot;^19.0.0&quot;,</span><br><span class="line">    &quot;terser-webpack-plugin&quot;: &quot;^3.0.3&quot;,</span><br><span class="line">    &quot;through2&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;url-loader&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">    &quot;vue&quot;: &quot;^2.6.11&quot;,</span><br><span class="line">    &quot;vue-antd-md-loader&quot;: &quot;^1.1.0&quot;,</span><br><span class="line">    &quot;vue-clipboard2&quot;: &quot;0.3.1&quot;,</span><br><span class="line">    &quot;vue-draggable-resizable&quot;: &quot;^2.1.0&quot;,</span><br><span class="line">    &quot;vue-eslint-parser&quot;: &quot;^7.0.0&quot;,</span><br><span class="line">    &quot;vue-i18n&quot;: &quot;^8.3.2&quot;,</span><br><span class="line">    &quot;vue-infinite-scroll&quot;: &quot;^2.0.2&quot;,</span><br><span class="line">    &quot;vue-jest&quot;: &quot;^2.5.0&quot;,</span><br><span class="line">    &quot;vue-loader&quot;: &quot;^15.6.2&quot;,</span><br><span class="line">    &quot;vue-router&quot;: &quot;^3.0.1&quot;,</span><br><span class="line">    &quot;vue-server-renderer&quot;: &quot;^2.6.11&quot;,</span><br><span class="line">    &quot;vue-template-compiler&quot;: &quot;^2.6.11&quot;,</span><br><span class="line">    &quot;vue-virtual-scroller&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;vuex&quot;: &quot;^3.1.0&quot;,</span><br><span class="line">    &quot;webpack&quot;: &quot;^4.28.4&quot;,</span><br><span class="line">    &quot;webpack-cli&quot;: &quot;^3.2.1&quot;,</span><br><span class="line">    &quot;webpack-dev-server&quot;: &quot;^3.1.14&quot;,</span><br><span class="line">    &quot;webpack-merge&quot;: &quot;^4.1.1&quot;,</span><br><span class="line">    &quot;webpackbar&quot;: &quot;^4.0.0&quot;,</span><br><span class="line">    &quot;xhr-mock&quot;: &quot;^2.5.1&quot;</span><br></pre></td></tr></table></figure><h4 id="antd-入口文件写法-学习下-读书人的事"><a href="#antd-入口文件写法-学习下-读书人的事" class="headerlink" title="antd  入口文件写法   学习下(读书人的事)"></a>antd  入口文件写法   学习下(读书人的事)</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Object.defineProperty(exports, &quot;__esModule&quot;, &#123;</span><br><span class="line">  value: true</span><br><span class="line">&#125;);</span><br><span class="line">exports.Space = exports.PageHeader ............ = undefined;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var _space = require(&#x27;./space&#x27;);</span><br><span class="line"></span><br><span class="line">var _space2 = _interopRequireDefault(_space);</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line">function _interopRequireDefault(obj) &#123; return obj &amp;&amp; obj.__esModule ? obj : &#123; &#x27;default&#x27;: obj &#125;; &#125;</span><br><span class="line"></span><br><span class="line">var ENV = process.env.NODE_ENV;</span><br><span class="line">if (ENV !== &#x27;production&#x27; &amp;&amp; ENV !== &#x27;test&#x27; &amp;&amp; typeof console !== &#x27;undefined&#x27; &amp;&amp; console.warn &amp;&amp; typeof window !== &#x27;undefined&#x27;) &#123;</span><br><span class="line">  console.warn(&#x27;You are using a whole package of antd, &#x27; + &#x27;please use https://www.npmjs.com/package/babel-plugin-import to reduce app bundle size.&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var components = [_base2[&#x27;default&#x27;], _affix2[&#x27;default&#x27;], _anchor2[&#x27;default&#x27;],...............];</span><br><span class="line"></span><br><span class="line">var install = function install(Vue) &#123;</span><br><span class="line">  components.map(function (component) &#123;</span><br><span class="line">    Vue.use(component);</span><br><span class="line">  &#125;);</span><br><span class="line">  Vue.prototype.$message = _message2[&#x27;default&#x27;];</span><br><span class="line">  Vue.prototype.$notification = _notification2[&#x27;default&#x27;];</span><br><span class="line">  Vue.prototype.$info = _modal2[&#x27;default&#x27;].info;</span><br><span class="line">  Vue.prototype.$success = _modal2[&#x27;default&#x27;].success;</span><br><span class="line">  Vue.prototype.$error = _modal2[&#x27;default&#x27;].error;</span><br><span class="line">  Vue.prototype.$warning = _modal2[&#x27;default&#x27;].warning;</span><br><span class="line">  Vue.prototype.$confirm = _modal2[&#x27;default&#x27;].confirm;</span><br><span class="line">  Vue.prototype.$destroyAll = _modal2[&#x27;default&#x27;].destroyAll;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">if (typeof window !== &#x27;undefined&#x27; &amp;&amp; window.Vue) &#123;</span><br><span class="line">  install(window.Vue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">exports.Base = _base2[&#x27;default&#x27;];</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">exports[&#x27;default&#x27;] = &#123;</span><br><span class="line">  version: _version2[&#x27;default&#x27;],</span><br><span class="line">  install: install</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2020/10/24/%E8%A1%A8%E6%A0%BC/"/>
      <url>2020/10/24/%E8%A1%A8%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p>Array很多方法经常用,自以为很熟悉了.</p><p>今天抽空,每个都去<code>MDN</code>再看下一边. 简单对比下.</p></div><table><thead><tr><th align="center">方法/属性</th><th align="center">参数</th><th align="center">返回值</th><th align="center">是否改变原数组</th><th align="center">call apply</th><th align="center">tip</th></tr></thead><tbody><tr><td align="center">.lenght</td><td align="center">❌</td><td align="center">无符号 32-bit 整数</td><td align="center">✅</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.push()</td><td align="center">Element…</td><td align="center">新数组length</td><td align="center">✅</td><td align="center">✅</td><td align="center"></td></tr><tr><td align="center">.unshfit()</td><td align="center">Element…</td><td align="center">新数组length</td><td align="center">✅</td><td align="center">✅</td><td align="center"><code>arr.unshift([1,2])</code>和<code>arr.unshift(1) arr.unshift(2)</code>不同</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.pop()</td><td align="center">❌</td><td align="center">被移除的元素</td><td align="center">✅</td><td align="center">✅</td><td align="center">数组为空则返回 undefined</td></tr><tr><td align="center">.shift()</td><td align="center">❌</td><td align="center">被移除的元素</td><td align="center">✅</td><td align="center">✅</td><td align="center">数组为空则返回 undefined</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Array.isArray(obj)</td><td align="center">要检测的对象</td><td align="center">T/F</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.concat()</td><td align="center">Element...</td><td align="center">新数组</td><td align="center">❌</td><td align="center"></td><td align="center">浅拷贝</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.slice()</td><td align="center">[start,end)</td><td align="center">新数组</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.splice()</td><td align="center">start,deleteCount,item....</td><td align="center">执行后的数组</td><td align="center">✅</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.join()</td><td align="center">分隔元素</td><td align="center">字符串</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.includes()</td><td align="center">e,fromIndex ||0</td><td align="center">T/F</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.indexOf()</td><td align="center">e,fromIndex ||0</td><td align="center">Index || -1</td><td align="center"></td><td align="center"></td><td align="center">第一个符合</td></tr><tr><td align="center">.lastIndexOf()</td><td align="center">e,fromIndex ||0</td><td align="center">Index || -1</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.find()</td><td align="center">(curE,index,arr),thisArg</td><td align="center">element || undefinded</td><td align="center"></td><td align="center"></td><td align="center">第一个符合</td></tr><tr><td align="center">.findIndex()</td><td align="center">(curE,index,arr),thisArg</td><td align="center">Index || -1</td><td align="center"></td><td align="center"></td><td align="center">第一个符合</td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.every()</td><td align="center">(curE,index,arr),thisArg</td><td align="center">T/F</td><td align="center">❌</td><td align="center"></td><td align="center">[].every() = true</td></tr><tr><td align="center">.some()</td><td align="center">(curE,index,arr),thisArg</td><td align="center">T/F</td><td align="center">❌</td><td align="center"></td><td align="center">[].some() = false</td></tr><tr><td align="center">.forEach()</td><td align="center">(curE,index,arr),thisArg</td><td align="center">undefinded</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.filter</td><td align="center">(curE,index,arr),thisArg</td><td align="center">新数组</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.map</td><td align="center">(curE,index,arr),thisArg</td><td align="center">新数组</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.reduce()</td><td align="center">(acc,cur,index,arr),initialValue</td><td align="center">执行后结果</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.sort</td><td align="center">firstEl,secondEl</td><td align="center">执行后的数组</td><td align="center">✅</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.reverse()</td><td align="center">❌</td><td align="center">执行后的数组</td><td align="center">✅</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.entries()</td><td align="center">❌</td><td align="center">Iterator</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.keys()</td><td align="center">❌</td><td align="center">Iterator</td><td align="center">❌</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.copyWithin()</td><td align="center">target ,[star ||0,end||arr.length)</td><td align="center">新数组</td><td align="center">✅不改变长度</td><td align="center"></td><td align="center">浅拷贝</td></tr><tr><td align="center">.fill()</td><td align="center">value ,[star ||0,end||arr.length)</td><td align="center">新数组</td><td align="center">✅不改变长度</td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">.toLocaleString()</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数组去重||unique||remove duplicates</title>
      <link href="2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_Remove%20Duplicates%20/"/>
      <url>2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_Remove%20Duplicates%20/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><p>去重的几种思路</p><p>只比较了了不同思路, <code>for</code> 一般会<code> filter</code>  性能好.</p><p>写了两个<code>for</code> 然后就 <code>for</code>  不动了 改用<code>filter </code>了.</p><p>如果后期性能要求特别高,把filter 改成for .</p><p>毕竟在不考虑实际情况下谈性能,都是耍流氓.</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//基本测试参数  暂时只考虑 数字 字符串 布尔值</span></span><br><span class="line"><span class="keyword">var</span> arr =  [<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;11&quot;</span>, <span class="string">&quot;22&quot;</span>],</span><br><span class="line">arrs = [],</span><br><span class="line">LOOPS = <span class="number">1000</span>,</span><br><span class="line">LEN = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">while</span>(LEN--)&#123;</span><br><span class="line">arrs = arrs.concat(arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; LOOPS; i++) &#123;</span><br><span class="line">  unique(arrs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;用时(ms)&quot;</span>, (<span class="keyword">new</span> <span class="built_in">Date</span>() - d) / LOOPS)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;res: &quot;</span>, unique(arr));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="双层for-元素对比"><a href="#双层for-元素对比" class="headerlink" title="双层for  元素对比"></a>双层for  元素对比</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> arrNew = [],</span><br><span class="line">    len = arr.length,</span><br><span class="line">    flag = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> eOld = arr[i];</span><br><span class="line">    flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; arrNew.length; j++) &#123;</span><br><span class="line">      <span class="keyword">const</span> eNew = arrNew[j];</span><br><span class="line">      <span class="keyword">if</span> (eOld === eNew) &#123;</span><br><span class="line">        flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    flag &amp;&amp; arrNew.push(eOld);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arrNew;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//0.171</span></span><br></pre></td></tr></table></figure><h1 id="双层for-splice"><a href="#双层for-splice" class="headerlink" title="双层for splice"></a>双层for splice</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> i  = <span class="number">1</span>,</span><br><span class="line">j =<span class="number">0</span> ,</span><br><span class="line">len = arr.length</span><br><span class="line">arr2 = arr</span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>( j = <span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(arr2[i]===arr2[j])&#123;</span><br><span class="line">arr2.splice(i,<span class="number">1</span>);</span><br><span class="line">i--</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> arr2</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//0.122</span></span><br></pre></td></tr></table></figure><h1 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span>arr.filter(<span class="function">(<span class="params">item, pos, self</span>) =&gt;</span> self.indexOf(item) == pos)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0.184</span></span><br></pre></td></tr></table></figure><h1 id="includes-reduce"><a href="#includes-reduce" class="headerlink" title="includes reduce"></a>includes reduce</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span>arr.reduce(<span class="function">(<span class="params">pre,cur,index</span>)=&gt;</span>pre.includes( cur )? pre:pre.concat(cur),[])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//0.292</span></span><br></pre></td></tr></table></figure><h1 id="sort-前后对比"><a href="#sort-前后对比" class="headerlink" title="sort 前后对比"></a>sort 前后对比</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arr.sort().filter(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, ary</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !index || item != ary[index - <span class="number">1</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//0.366</span></span><br></pre></td></tr></table></figure><h1 id="对象-哈希表"><a href="#对象-哈希表" class="headerlink" title="对象(哈希表)"></a>对象(哈希表)</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> arr.filter(<span class="function"><span class="params">item</span> =&gt;</span> obj.hasOwnProperty(item) ? <span class="literal">false</span> : (obj[item] = <span class="literal">true</span>)</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//0.226</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uniq = [...new <span class="built_in">Set</span>(array)]</span><br><span class="line"><span class="comment">//0.117</span></span><br></pre></td></tr></table></figure><h1 id="区分-type"><a href="#区分-type" class="headerlink" title="区分 type"></a>区分 type</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unique</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> prims = &#123; <span class="attr">boolean</span>: &#123;&#125;, <span class="attr">number</span>: &#123;&#125;, <span class="attr">string</span>: &#123;&#125; &#125;,</span><br><span class="line">    objs = [];</span><br><span class="line">  a.forEach(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> type = <span class="keyword">typeof</span>(e);</span><br><span class="line">    <span class="keyword">if</span> (type <span class="keyword">in</span> prims) &#123;</span><br><span class="line">      !prims[type].hasOwnProperty(e) &amp;&amp; (prims[type][e] = <span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      objs.indexOf(e) &lt; <span class="number">0</span> &amp;&amp; objs.push(e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> &#123; prims, objs &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>find findIndex indexOf includes</title>
      <link href="2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_find_indexOf_findIndex_some_includes/"/>
      <url>2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_find_indexOf_findIndex_some_includes/</url>
      
        <content type="html"><![CDATA[<h1 id="Array-find"><a href="#Array-find" class="headerlink" title="Array.find()"></a>Array.find()</h1><div class="note info no-icon flat"><p>arr.find(callback[, thisArg])</p><p>callback(curElement,index,arry )</p></div><div class="note warning no-icon flat"><p>返回第一个符合条件的 <code>元素</code>的<code>值 </code> ,否则返回 undefined</p><p>不改变原数组</p></div><p>基本不说了看下 thiArg</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name) &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.id = Person.nextId++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person.nextId = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> jamie = <span class="keyword">new</span> Person(<span class="string">&quot;Jamie&quot;</span>),</span><br><span class="line">      juliet = <span class="keyword">new</span> Person(<span class="string">&quot;Juliet&quot;</span>),</span><br><span class="line">      peter = <span class="keyword">new</span> Person(<span class="string">&quot;Peter&quot;</span>),</span><br><span class="line">  jay = <span class="keyword">new</span> Person(<span class="string">&quot;Jay&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = [jamie, juliet, peter, jay];</span><br><span class="line"><span class="keyword">const</span> obj = &#123;<span class="attr">name</span>:<span class="string">&quot;football&quot;</span>,<span class="attr">ownerID</span>:<span class="number">3</span>&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// option 2: using &quot;this&quot; arg:</span></span><br><span class="line"><span class="keyword">let</span> a = arr.find(<span class="function"><span class="keyword">function</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> p.id === <span class="built_in">this</span>.ownerID;</span><br><span class="line">&#125;, obj); </span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a)</span><br><span class="line"><span class="comment">//Person &#123; name: &#x27;Jay&#x27;, id: 3 &#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Array-findIndex"><a href="#Array-findIndex" class="headerlink" title="Array.findIndex()"></a>Array.findIndex()</h1><div class="note info no-icon flat"><p>arr.findIndex(callback[, thisArg])</p><p>callback(curElement,index,arry )</p></div><p>和 find  一样 只不过是返回 符合条件第一个<code>元素</code>的<code>索引 </code>否则 返回 <code>=1</code></p><hr><h1 id="Arry-String-indexOf-includes"><a href="#Arry-String-indexOf-includes" class="headerlink" title="Arry/String   .indexOf()  .includes()"></a>Arry/String   .indexOf()  .includes()</h1><p>这两方法适用 <code>数组</code> 和<code>字符串</code>.</p><div class="note info no-icon flat"><p>arr.includes( value/stringToFind [, fromIndex])</p><p>str.indexOf(searchValue [, fromIndex])</p></div><p>fromIndex 开始查找位置   负数 就是从后查找</p><p>fromIndex 大于数组或者字符串长度 返回-1</p><p>indeOf  返回 <code>索引</code>  没有返回<code>-1</code>  且只返回第一个</p><p>includes 返回 <code>true</code> of <code>false</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">2</span>, <span class="number">5</span>, ,<span class="number">2</span>,<span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> arrStr = [ <span class="string">&quot;apple&quot;</span>,<span class="string">&quot;banana&quot;</span>,<span class="string">&quot;lemon&quot;</span>]</span><br><span class="line">array.indexOf(<span class="number">2</span>);     <span class="comment">// 0</span></span><br><span class="line">array.indexOf(<span class="number">7</span>);        <span class="comment">// -1</span></span><br><span class="line">array.indexOf(<span class="number">9</span>, <span class="number">2</span>);     <span class="comment">// 2</span></span><br><span class="line">array.includes(<span class="number">2</span>)         <span class="comment">//true</span></span><br><span class="line">array.includes(<span class="number">7</span>)        <span class="comment">//false</span></span><br><span class="line">array.includes(<span class="number">9</span>,<span class="number">2</span>)         <span class="comment">//true</span></span><br><span class="line">arrStr.indexOf(<span class="string">&#x27;banana&#x27;</span>)    <span class="comment">//1</span></span><br><span class="line">arrStr.includes(<span class="string">&#x27;banana&#x27;</span>)    <span class="comment">//true</span></span><br><span class="line"><span class="keyword">var</span> string = <span class="string">&quot;banana&quot;</span></span><br><span class="line">string.indexOf(<span class="string">&quot;a&quot;</span>);        <span class="comment">//1  </span></span><br><span class="line">string.includes(<span class="string">&quot;a&quot;</span>);       <span class="comment">//true</span></span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>.includes()  和.some() 是有点类似的</p><p>比如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> userForm = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">userForm.includes(<span class="number">4</span>) <span class="comment">//true</span></span><br><span class="line">userForm.some(<span class="function"><span class="params">e</span>=&gt;</span>e ===<span class="number">4</span> ) <span class="comment">//true</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>filter forEach every some reduce</title>
      <link href="2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_loop/"/>
      <url>2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_loop/</url>
      
        <content type="html"><![CDATA[<h1 id="table"><a href="#table" class="headerlink" title="table"></a>table</h1><p>这些虽然经常用,但还是又认真看了下MDN </p><p>放一张 有意思的图哈哈</p><p><img src="https://picgo.genji.xyz/blog/posts/f18b33adf235b721b009eddbc00645e9_720w.jpg" alt="img"></p><table><thead><tr><th>方法</th><th>参数</th><th>返回值</th><th align="left">改变原数组</th><th>tip</th><th></th></tr></thead><tbody><tr><td>.every()</td><td>(curE,index,arr),thisArg</td><td>T/F</td><td align="left">❌</td><td>[].every() = true</td><td></td></tr><tr><td>.some()</td><td>(curE,index,arr),thisArg</td><td>T/F</td><td align="left">❌</td><td>[].some() = false</td><td></td></tr><tr><td>.forEach()</td><td>(curE,index,arr),thisArg</td><td>undefinded</td><td align="left">❌</td><td></td><td></td></tr><tr><td>.filter</td><td>(curE,index,arr),thisArg</td><td>新数组</td><td align="left">❌</td><td></td><td></td></tr><tr><td>.map</td><td>(curE,index,arr),thisArg</td><td>新数组</td><td align="left">❌</td><td></td><td></td></tr><tr><td>.reduce()</td><td>(acc,cur,index,arr),initialValue</td><td>执行后结果</td><td align="left">❌</td><td></td><td></td></tr></tbody></table><h1 id="Array-filter"><a href="#Array-filter" class="headerlink" title="Array.filter()"></a>Array.filter()</h1><p>比较万能</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;grapes&#x27;</span>, <span class="string">&#x27;mango&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> filterItems = <span class="function">(<span class="params">query</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> fruits.filter(<span class="function">(<span class="params">el</span>) =&gt;</span></span><br><span class="line">    el.toLowerCase().includes(query.toLowerCase())</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filterItems(<span class="string">&#x27;an&#x27;</span>)       <span class="comment">//[&#x27;banana&#x27;, &#x27;mango&#x27;, &#x27;orange&#x27;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Array-forEach"><a href="#Array-forEach" class="headerlink" title="Array.forEach()"></a>Array.forEach()</h1><p>记三个比较特别的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>,<span class="number">2</span>,,<span class="number">7</span>];</span><br><span class="line"><span class="comment">//2-7 中间空的 不会被forEach()调用</span></span><br><span class="line">arr.forEach(<span class="function">(<span class="params">e</span>)=&gt;</span>&#123;<span class="built_in">console</span>.log(e)&#125;)</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> words = [<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;four&#x27;</span>];</span><br><span class="line">words.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">word</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(word);</span><br><span class="line">  <span class="keyword">if</span> (word === <span class="string">&#x27;two&#x27;</span>) &#123;</span><br><span class="line">    words.shift();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// one</span></span><br><span class="line"><span class="comment">// two</span></span><br><span class="line"><span class="comment">// four</span></span><br><span class="line"><span class="comment">//个人理解 执行到 word = &#x27;two&#x27;然后 删除了第一项 four 就提前了 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//promise 或 async 最好对造成的执行顺序影响多加考虑，否则容易出现错误。</span></span><br><span class="line"><span class="keyword">let</span> ratings = [<span class="number">5</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> sumFunction = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125; </span><br><span class="line">ratings.forEach(<span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">rating</span>) </span>&#123;</span><br><span class="line">    sum = <span class="keyword">await</span> sumFunction(sum, rating);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(sum)   <span class="comment">//0</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(sum);</span><br><span class="line">&#125;, <span class="number">2000</span>);    <span class="comment">//5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Arry-every"><a href="#Arry-every" class="headerlink" title="Arry.every()"></a>Arry.every()</h1><p> 有false =&gt;false    全true =&gt;true   串联</p><div class="note warning no-icon flat"><p>空数组 都返回true </p><p><code>callback</code> 只会为那些已经被赋值的索引调用。不会为那些被删除或从未被赋值的索引调用。  </p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>].every(<span class="function"><span class="params">x</span> =&gt;</span> x &gt;= <span class="number">10</span>) <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> res = [<span class="number">12</span>, <span class="number">15</span>, <span class="number">18</span>, ,<span class="number">44</span>].every(<span class="function">(<span class="params">x,index</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;index: &#x27;</span>, index);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> x &gt;= <span class="number">10</span></span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(res)   </span><br><span class="line"><span class="comment">//index:  0</span></span><br><span class="line"><span class="comment">//index:  1</span></span><br><span class="line"><span class="comment">//index:  2</span></span><br><span class="line"><span class="comment">//index:  4</span></span><br><span class="line"><span class="comment">//res  true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Arry-some"><a href="#Arry-some" class="headerlink" title="Arry.some()"></a>Arry.some()</h1><p>和ever 类似</p><h1 id="map"><a href="#map" class="headerlink" title="map"></a>map</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">res.map(item,index,<span class="function"><span class="params">ary</span>=&gt;</span> &#123;<span class="attr">name</span>:item.name,</span><br><span class="line">                         avatar:item.avatar</span><br><span class="line">                          sex:item.sex</span><br><span class="line">                         &#125; )</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Array-reduce"><a href="#Array-reduce" class="headerlink" title="Array.reduce()"></a>Array.reduce()</h1><div class="note info no-icon flat"><p>arr.reduce(callback[accumulator, currentValue, currentIndex, array], initialValue)</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">callback （执行数组中每个值的函数，包含四个参数）</span><br><span class="line">1、previousValue （上一次调用回调返回的值，或者是提供的初始值（initialValue））</span><br><span class="line">    2、currentValue （数组中当前被处理的元素）</span><br><span class="line">    3、index （当前元素在数组中的索引）</span><br><span class="line">    4、array （调用 reduce 的数组）</span><br><span class="line"></span><br><span class="line">initialValue （作为第一次调用 callback 的第一个参数。）可以使数字也可以是&#123;&#125;  []</span><br><span class="line"></span><br><span class="line">** 不改变原数组</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>对空数组使用 <code>reduce</code> 会报错,但是设置了 <code>初始值</code>就不会报错了.</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  arr = [];</span><br><span class="line"><span class="keyword">var</span> sum = arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">prev, cur, index, arr</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(prev, cur, index);</span><br><span class="line">    <span class="keyword">return</span> prev + cur;</span><br><span class="line">&#125;，<span class="number">0</span>)</span><br><span class="line"><span class="built_in">console</span>.log(arr, sum); <span class="comment">// [] 0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">所以当 数组不能确定时,或者有可能是空数组 最好设定初始值 可以是<span class="number">0</span> 可以是[]</span><br></pre></td></tr></table></figure><p>转载 MDN 关于初始值的说明</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> maxCallback = <span class="function">(<span class="params"> acc, cur </span>) =&gt;</span> <span class="built_in">Math</span>.max( acc.x, cur.x );</span><br><span class="line"><span class="keyword">var</span> maxCallback2 = <span class="function">(<span class="params"> max, cur </span>) =&gt;</span> <span class="built_in">Math</span>.max( max, cur );</span><br><span class="line"></span><br><span class="line"><span class="comment">// reduce() without initialValue</span></span><br><span class="line">[ &#123; <span class="attr">x</span>: <span class="number">22</span> &#125;, &#123; <span class="attr">x</span>: <span class="number">42</span> &#125; ].reduce( maxCallback ); <span class="comment">// 42</span></span><br><span class="line">[ &#123; <span class="attr">x</span>: <span class="number">22</span> &#125;            ].reduce( maxCallback ); <span class="comment">// &#123; x: 22 &#125;</span></span><br><span class="line">[                      ].reduce( maxCallback ); <span class="comment">// TypeError</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// map/reduce; better solution, also works for empty or larger arrays</span></span><br><span class="line">[ &#123; <span class="attr">x</span>: <span class="number">22</span> &#125;, &#123; <span class="attr">x</span>: <span class="number">42</span> &#125; ].map( <span class="function"><span class="params">el</span> =&gt;</span> el.x )</span><br><span class="line">                        .reduce( maxCallback2, -<span class="literal">Infinity</span> );</span><br></pre></td></tr></table></figure><h2 id="一些简单用法"><a href="#一些简单用法" class="headerlink" title="一些简单用法"></a>一些简单用法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> Sum = arr.reduce( <span class="function">(<span class="params">a,b</span>) =&gt;</span> a + b ) <span class="comment">// 求和</span></span><br><span class="line"><span class="keyword">var</span> Quadratic = arr.reduce( <span class="function">(<span class="params">a,b</span>) =&gt;</span> a * b ) <span class="comment">//乘积</span></span><br><span class="line"><span class="keyword">var</span> QuadraticSum = arr.reduce( <span class="function">(<span class="params">a,b</span>)=&gt;</span>a + b*b) <span class="comment">//平方和</span></span><br><span class="line"><span class="keyword">var</span> obj = [&#123;<span class="attr">num</span>:<span class="number">22</span>&#125;,&#123;<span class="attr">num</span>:<span class="number">33</span>&#125;,&#123;<span class="attr">num</span>:<span class="number">24</span>&#125;]</span><br><span class="line"><span class="keyword">var</span> Max = arr.reduce( <span class="function">(<span class="params">a,b</span>)=&gt;</span> <span class="built_in">Math</span>.max(a.num,b.num) )</span><br></pre></td></tr></table></figure><h2 id="一些好用的"><a href="#一些好用的" class="headerlink" title="一些好用的"></a>一些好用的</h2><p>元素出现次数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fruit = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;lemon&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;bear&#x27;</span>,<span class="string">&#x27;lemon&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fruitNum = fruit.reduce( <span class="function">(<span class="params">pre,cur</span>) =&gt;</span>&#123;</span><br><span class="line">  cur <span class="keyword">in</span> pre ? pre[cur]++ :pre[cur] = <span class="number">1</span> </span><br><span class="line">  <span class="keyword">return</span> pre <span class="comment">//千万别忘了 return</span></span><br><span class="line">&#125; ,&#123;&#125;)<span class="comment">//这里的初始值就是&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///fruitNum &#123; apple: 2, banana: 1, orange: 1, lemon: 2, bear: 1 &#125;</span></span><br></pre></td></tr></table></figure><p>数组去重</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fruit = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;lemon&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;bear&#x27;</span>,<span class="string">&#x27;lemon&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> newFruit = fruit.reduce( <span class="function">(<span class="params">pre,cur</span>) =&gt;</span></span><br><span class="line">pre.includes( cur ) ?pre:pre.concat(cur)</span><br><span class="line">                            </span><br><span class="line"> ,[])</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;newFruit&quot;</span>, newFruit)</span><br><span class="line"></span><br><span class="line"><span class="comment">//就一行  省略了&#123; &#125;和 return</span></span><br></pre></td></tr></table></figure><div class="note warning flat"><p>​        <code>pre.includes( cur ) ?pre:pre.concat(cur)</code></p><p>注意这里你把 concat 换成push 就会报错</p><p>要用push 得这么写,因为啊push() return 的数组的length</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> newFruit = fruit.reduce( <span class="function">(<span class="params">pre,cur</span>) =&gt;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(pre.includes(cur))&#123;</span><br><span class="line"><span class="keyword">return</span> pre</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">pre.push(cur)</span><br><span class="line"><span class="keyword">return</span> pre</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> ,[])</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;newFruit&quot;</span>, newFruit)</span><br></pre></td></tr></table></figure></div><p>二维数组 转一维</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [[<span class="number">0</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>]]</span><br><span class="line"><span class="keyword">let</span> newArr = arr.reduce(<span class="function">(<span class="params">pre,cur</span>)=&gt;</span>pre.concat(cur),[])</span><br><span class="line"><span class="built_in">console</span>.log(newArr); </span><br><span class="line"></span><br><span class="line">当然 你可以用es6的flat</span><br><span class="line"><span class="keyword">let</span> newArr = arr.flat()</span><br><span class="line">也可以用apply</span><br><span class="line"><span class="keyword">let</span> newArr = [].concat.apply([],arr)</span><br><span class="line">split 方法 特别适用超级多维</span><br><span class="line"><span class="keyword">let</span>  newArr = (arr + <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(lists.map(<span class="built_in">Number</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对象 value 处理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res = [ &#123;<span class="attr">name</span>:<span class="string">&#x27;lili&#x27;</span>,<span class="attr">like</span>:<span class="string">&#x27;read&#x27;</span>&#125;,  &#123;<span class="attr">name</span>:<span class="string">&#x27;hah&#x27;</span>,<span class="attr">like</span>:<span class="string">&#x27;play&#x27;</span>&#125;,</span><br><span class="line">            &#123;<span class="attr">name</span>:<span class="string">&#x27;ligang&#x27;</span>,<span class="attr">like</span>:<span class="string">&#x27;run&#x27;</span>&#125;]</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = res.reduce( <span class="function">(<span class="params">a,b</span>)=&gt;</span> a.concat(b.like),[])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Js Array.sort()</title>
      <link href="2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_sort/"/>
      <url>2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_Arr_sort/</url>
      
        <content type="html"><![CDATA[<h1 id="Array-sort"><a href="#Array-sort" class="headerlink" title="Array.sort()"></a>Array.sort()</h1><div class="note info no-icon flat"><p>arr.sort([compareFunction])</p></div><div class="note warning no-icon flat"><p>在原数组上进行排序,会改变原数组的值.如果有需求最好深拷贝一份在处理.</p><p>默认的是根据 unicode 编码进行排序!</p></div><h2 id="数组大小排序"><a href="#数组大小排序" class="headerlink" title="数组大小排序"></a>数组大小排序</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers. = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line">numbers.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span> a-b ) <span class="comment">//1-5   </span></span><br><span class="line">numbers.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span> b-a ) <span class="comment">//5-1  </span></span><br></pre></td></tr></table></figure><h2 id="随机排序"><a href="#随机排序" class="headerlink" title="随机排序"></a>随机排序</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers. = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>];</span><br><span class="line">numbers.sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span> <span class="built_in">Math</span>.random()- <span class="number">0.5</span> )   </span><br></pre></td></tr></table></figure><div class="note warning no-icon flat"><p>好像旧版本 chorme 对sort 支持有点问题 </p><p><a href="https://hufangyun.com/2017/sort-array/">https://hufangyun.com/2017/sort-array/</a></p></div>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奇淫的火箭</title>
      <link href="2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_%E5%A5%87%E6%B7%AB%E7%9A%84%E9%A2%98/"/>
      <url>2020/09/02/%E5%89%8D%E7%AB%AF/js/2020-10-22_Web_JS_%E5%A5%87%E6%B7%AB%E7%9A%84%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Object-push"><a href="#Object-push" class="headerlink" title="Object.push()"></a>Object.push()</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  push: <span class="function"><span class="keyword">function</span> <span class="title">push</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  [].push.call(<span class="built_in">this</span>, e )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//简写</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  push:[].push</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj) <span class="comment">//&#123; push: [Function: push] &#125;</span></span><br><span class="line">obj.push(&#123;<span class="attr">name</span>:<span class="string">&quot;genji&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj)  <span class="comment">//&#123; &#x27;0&#x27;: &#123; name: &#x27;genji&#x27; &#125;, push: [Function: push], length: 1 &#125;</span></span><br><span class="line"></span><br><span class="line">可以看出多个length</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line"><span class="string">&quot;2&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line"><span class="string">&quot;3&quot;</span>: <span class="string">&quot;b&quot;</span>,</span><br><span class="line"><span class="string">&quot;length&quot;</span>: <span class="number">1</span>,</span><br><span class="line"><span class="string">&quot;push&quot;</span>: <span class="built_in">Array</span>.prototype.push</span><br><span class="line">  &#125;</span><br><span class="line">  obj.push(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">  obj.push(<span class="string">&quot;d&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(obj)  <span class="comment">//&#123; &#x27;1&#x27;: &#x27;c&#x27;, &#x27;2&#x27;: &#x27;d&#x27;, &#x27;3&#x27;: &#x27;b&#x27;, length: 3, push: [Function: push] &#125;</span></span><br><span class="line"></span><br><span class="line">length 是几就下哪push  没有length  从<span class="number">0</span> 开始</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>console.</title>
      <link href="2020/09/02/%E5%89%8D%E7%AB%AF/js/console/"/>
      <url>2020/09/02/%E5%89%8D%E7%AB%AF/js/console/</url>
      
        <content type="html"><![CDATA[<ul><li>console.log</li><li>console.dir</li><li>console.table()</li><li>console.trace</li><li>console.error() console.warn()</li><li>console.time()和 console.timeEnd()</li><li>console.group() console.groupEnd()</li><li>console.count()</li><li>console.clear()</li><li>自定义样式</li></ul><h2 id="console-log"><a href="#console-log" class="headerlink" title="console.log()"></a>console.log()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//没啥说的</span></span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;genji&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;name : &quot;</span>, name);</span><br><span class="line"></span><br><span class="line"><span class="comment">// name :  genji</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//tips</span></span><br><span class="line"><span class="built_in">console</span>.log([object]);</span><br></pre></td></tr></table></figure><h2 id="console-dir"><a href="#console-dir" class="headerlink" title="console.dir()"></a>console.dir()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tips</span></span><br><span class="line"><span class="built_in">console</span>.dir(object, &#123;<span class="attr">depth</span>:<span class="literal">null</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="console-table"><a href="#console-table" class="headerlink" title="console.table()"></a>console.table()</h2><p>一开始没觉得很好用,直到有一天</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> animal = &#123;</span><br><span class="line">  dog: &#123; <span class="attr">name</span>: <span class="string">&quot;haha&quot;</span>, <span class="attr">like</span>: <span class="string">&quot;shit&quot;</span>, <span class="attr">about</span>: <span class="string">&quot;123&quot;</span> &#125;,</span><br><span class="line">  cat: &#123; <span class="attr">name</span>: <span class="string">&quot;lili&quot;</span>, <span class="attr">like</span>: <span class="string">&quot;wool&quot;</span>, <span class="attr">about</span>: <span class="string">&quot;4523523&quot;</span> &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.table(animal, [<span class="string">&quot;name&quot;</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://picgo.genji.xyz/blog/posts/image-20201128144734279.png" alt="image-20201128144734279"></p><p>可是筛选,可以排序.</p><p>有些请求的数据,有很多东西是你不用的,这样一筛选,很清晰了</p><p>换成数组试试.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> animal = [</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">&quot;lili&quot;</span>, <span class="attr">email</span>: <span class="string">&quot;haha@qq.com&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">&quot;lala&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">name</span>: <span class="string">&quot;wang&quot;</span>, <span class="attr">email</span>: <span class="string">&quot;123@qq.com&quot;</span> &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="built_in">console</span>.table(animal, <span class="string">&quot;email&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://picgo.genji.xyz/blog/posts/image-20201128145644045.png" alt="image-20201128145644045"></p><p>可以清晰看到, 数组哪个对象的<code>key</code>是不存在的.并且能清晰的看到 index</p><p>要不你还得</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animal.forEach(<span class="function">(<span class="params">e, i</span>) =&gt;</span> <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;i&#125;</span>----<span class="subst">$&#123;e.email&#125;</span>`</span>));</span><br></pre></td></tr></table></figure><p><img src="https://picgo.genji.xyz/blog/posts/image-20201128145939043.png" alt="image-20201128145939043"></p><p>各有利弊,适当选择.我觉得有时候挺香的,有时候没那么香.</p><h2 id="console-error-console-warn"><a href="#console-error-console-warn" class="headerlink" title="console.error() console.warn()"></a>console.error() console.warn()</h2><p>我就是当高亮 来用!</p><p><img src="/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/%E5%89%8D%E7%AB%AF/js/image-20201128151533877.png" alt="image-20201128151533877"></p><h2 id="console-trace"><a href="#console-trace" class="headerlink" title="console.trace()"></a>console.trace()</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;fn1()&quot;</span>&gt;</span>跟踪函数运行<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">    fn2();</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.trace();</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">/// console.trace fn2 fn1 onclick</span><br></pre></td></tr></table></figure><h2 id="console-group-console-groupEnd"><a href="#console-group-console-groupEnd" class="headerlink" title="console.group() console.groupEnd()"></a>console.group() console.groupEnd()</h2><p>就是分下组. 更有层次吧</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.group(<span class="string">&quot;post请求&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;res = &#123;data:&#x27;hello&#x27;&#125;&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.groupEnd();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;执行下一个个命令&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/%E5%89%8D%E7%AB%AF/js/image-20201128140913499.png" alt="image-20201128140913499"></p><h2 id="console-time-和-console-timeEnd"><a href="#console-time-和-console-timeEnd" class="headerlink" title="console.time()和 console.timeEnd()"></a>console.time()和 console.timeEnd()</h2><p>我主要是计时比较下性能,</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.time();</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.timeEnd();</span><br></pre></td></tr></table></figure><h2 id="console-count-console-clear"><a href="#console-count-console-clear" class="headerlink" title="console.count() console.clear()"></a>console.count() console.clear()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">console</span>.count(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// name: 1</span></span><br><span class="line"><span class="comment">// name: 2</span></span><br><span class="line"><span class="comment">// name: 3</span></span><br><span class="line"><span class="comment">// name: 4</span></span><br><span class="line"><span class="comment">// name: 5</span></span><br><span class="line"><span class="comment">// name: 6</span></span><br><span class="line"><span class="comment">// name: 7</span></span><br><span class="line"><span class="comment">// name: 8</span></span><br><span class="line"><span class="comment">// name: 9</span></span><br><span class="line">就是个计数的 从<span class="number">1</span> 开始</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.clear()  <span class="comment">// 清空</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="console-profile-console-profileEnd"><a href="#console-profile-console-profileEnd" class="headerlink" title="console.profile console.profileEnd"></a>console.profile console.profileEnd</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.profile(<span class="string">&#x27;性能分析器&#x27;</span>);</span><br><span class="line">fn();</span><br><span class="line"><span class="built_in">console</span>.profileEnd();</span><br></pre></td></tr></table></figure><p><img src="/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/%E5%89%8D%E7%AB%AF/js/image-20201128140338413.png" alt="image-20201128140338413"></p><h2 id="自定义内容"><a href="#自定义内容" class="headerlink" title="自定义内容"></a>自定义内容</h2><table><thead><tr><th>占位符</th><th>作用</th></tr></thead><tbody><tr><td>%s</td><td>字符串</td></tr><tr><td>%d or %i</td><td>整数</td></tr><tr><td>%f</td><td>浮点数</td></tr><tr><td>%o</td><td>可展开的DOM</td></tr><tr><td>%O</td><td>列出DOM的属性</td></tr><tr><td>%c</td><td>根据提供的css样式格式化字符串</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 格式成可展开的的DOM，像在开发者工具Element面板那样可展开 </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%o&#x27;</span>,<span class="built_in">document</span>.body.firstElementChild); </span><br><span class="line"><span class="comment">// 像JS对象那样访问DOM元素，可查看DOM元素的属性 </span></span><br><span class="line"><span class="comment">// 等同于console.dir(document.body.firstElementChild) </span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;%O&#x27;</span>,<span class="built_in">document</span>.body.firstElementChild);</span><br></pre></td></tr></table></figure><p><img src="/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/%E5%89%8D%E7%AB%AF/js/image-20201128160732266.png" alt="image-20201128160732266"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">  <span class="string">&quot; ________   ____    \n/\\_____  \\ /&#x27;___\\   \n\\/___//&#x27;/&#x27;/\\ \\__/   \n    /&#x27; /&#x27; \\ \\  _``\\ \n  /&#x27; /&#x27;    \\ \\ \\L\\ \\\n /\\_/       \\ \\____/\n \\//         \\/___/ \n&quot;</span></span><br><span class="line">),</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;%c 送我杯咖啡 &quot;</span>, <span class="string">&quot;color:orange;font-size:16px&quot;</span>),</span><br><span class="line">  <span class="built_in">console</span>.log(</span><br><span class="line">    <span class="string">&quot;%c &quot;</span>,</span><br><span class="line">    <span class="string">&quot;background: url(http://picgo.genji.xyz/zanshangma.jpeg) no-repeat center;padding:100px;border-radius:20px;background-size: cover;&quot;</span></span><br><span class="line">  ),</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;%c 前端小菜鸟,欢迎您来找 &quot;</span>, <span class="string">&quot;color:orange;font-size:24px&quot;</span>),</span><br><span class="line">  <span class="built_in">console</span>.log(</span><br><span class="line">    <span class="string">&quot;%c &quot;</span>,</span><br><span class="line">    <span class="string">&quot;background: url(http://pic.genji.xyz/images/2020/03/15/WechatIMG3.jpg) no-repeat center;padding:100px;background-size: cover;&quot;</span></span><br><span class="line">  );</span><br></pre></td></tr></table></figure><p>76 是怎么弄得 </p><p>字</p><p><a href="http://www.network-science.de/ascii/">http://www.network-science.de/ascii/</a></p><p><a href="http://www.figlet.org/examples.html">http://www.figlet.org/examples.html</a></p><p>图</p><p><a href="https://www.degraeve.com/img2txt.php">https://www.degraeve.com/img2txt.php</a></p><p>或者google pic2ascii</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>awtrix</title>
      <link href="2020/09/02/Diy/awtrix/"/>
      <url>2020/09/02/Diy/awtrix/</url>
      
        <content type="html"><![CDATA[<h1 id="awtrix"><a href="#awtrix" class="headerlink" title=" awtrix"></a><i class="fas fa-dog"></i> awtrix</h1><div class="note success no-icon flat"><p>最开始是在YouTube看到的这个项目,当时这个项目还是 version 1.0<br>现在都有<code>pro</code>了!  闲着没事更新一下</p></div><h2 id="硬件功能删减"><a href="#硬件功能删减" class="headerlink" title="硬件功能删减"></a>硬件功能删减</h2><p>我决定只保留基本的功能,</p><p>因为其他的功能都不太好用(不是云玩家,当时测试了一个月)  </p><ul><li><p>自动调节亮度(添加光敏电阻)   不稳定</p></li><li><p>播放器功能 (DFplayer)  鸡肋</p></li><li><p>手势功能  用不上几次</p></li><li><p>温度   用小米挺香  </p></li></ul><h2 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h2><p>这里只写了最精简的配件,如果需要其他功能请去 <a href="https://awtrixdocs.blueforcer.de/#/">官方文档</a></p><table><thead><tr><th>No</th><th>Name</th></tr></thead><tbody><tr><td>1</td><td>32*8 的矩阵屏幕</td></tr><tr><td>2</td><td>Wemos  D1mini</td></tr><tr><td>3</td><td>电源用usb 线代替(后面会说明)</td></tr><tr><td>4</td><td>导线</td></tr><tr><td>5</td><td>焊锡 ( 你有面包板也行)</td></tr><tr><td>6</td><td>白纸一张</td></tr><tr><td>7</td><td>半透明 黑色 亚克力板 (淘宝10元包邮 定制)</td></tr><tr><td>8</td><td>不透光 光栅 (咸鱼 20元收)</td></tr></tbody></table><h2 id="改造"><a href="#改造" class="headerlink" title="改造"></a>改造</h2><p>当时<code>1.0版本</code> 使用了什么板子 我给忘了反正是没有办法直接供电 </p><p>现在这个板 <code>d1 mini</code> 可以用usb 直接供电 (5v 1A)  虽然达不到额定功率(亮度高的时候 矩阵屏幕会不稳定),但是亮度调低点就好了</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200929003524665.png" alt="image-20200929003524665">   </p><h2 id="祖传的焊接手艺"><a href="#祖传的焊接手艺" class="headerlink" title="祖传的焊接手艺"></a>祖传的焊接手艺</h2><p><img src="https://picgo.genji.xyz/blog/posts/WeChata7c1ef3090104df97ddc594c9beaa126.png" alt="WeChata7c1ef3090104df97ddc594c9beaa126"></p><p>看图连线时间.</p><p>好像有焊接好板 能直接插 贵一点.  </p><h2 id="客户端-Flash-Wifi"><a href="#客户端-Flash-Wifi" class="headerlink" title="客户端 Flash  / Wifi"></a>客户端 Flash  / Wifi</h2><div class="note default flat"><p>之前是用 vscode <code>platformIO</code> 这个插件写入 ,而且需要自己修改配置文件,修改wifi什么的.</p><p>现在有 打包好的 flash 包, wifi 连接也更方便了,</p><p><a href="https://github.com/tzapu/WiFiManager">新版用了这个开源的包 esp8266 wifi Manager</a></p></div> <p><a href="https://awtrixdocs.blueforcer.de/#/en-en/controller">写入/wifi 步骤点此链接</a></p><p> 我用的macOS,window更方便 注意下 com 端口 即可</p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>想用把服务端 放在 软路由的<code>docker</code>里 奈何 N1是 armv8架构 </p><p>现有的docker镜像 只支持 arm,arm64</p><p>所以放到了 <code>阿里云</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run --name AwTriX2 -p 7000:7000 -p 7001:7001 -p 5568:5568/udp --restart always -e TZ=Asia/Shanghai whyet/awtrix2:latest</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## TZ time zone 时区 </span></span><br><span class="line">Asia/Shanghai</span><br><span class="line"></span><br><span class="line">7000 端口是 服务端面板</span><br><span class="line">7001 才是你连wifi 时需要设置的端口</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><p>咸鱼买了个 <code>半透明茶色 亚克力板 </code> 瞬间变得 ,清晰, 有质感.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930135226606.png" alt="image-20200930135226606"></p><h2 id="显示内容"><a href="#显示内容" class="headerlink" title="显示内容"></a>显示内容</h2><p>服务端 里面有个 <code>App Store</code></p><p>提供了很多功能: <code>天气</code> ,<code>温度</code>,<code>bilibili/youtube粉丝数</code>,<code>日出日落</code>等等…….</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930140137536.png" alt="image-20200930140137536"></p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p><a href="https://awtrixdocs.blueforcer.de/#/en-en/api">https://awtrixdocs.blueforcer.de/#/en-en/api</a></p><p>作者提供了很多API ,</p><p>之前用vue 写过一个类似遥控器的单屏网页 , 现在好像弄丢了….</p><p>比如你可以这样,显示一些文字 </p><div class="note flat"><p>当某个客人要来你家时候,你用手机提前设置好,也挺好玩的</p><p>Hello  XXX !</p></div><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930140531153.png" alt="image-20200930140531153"></p><h2 id="最后-这玩意多数时间还是当个-表-和-日历-来用-…-过年了-开一开-平时吃灰"><a href="#最后-这玩意多数时间还是当个-表-和-日历-来用-…-过年了-开一开-平时吃灰" class="headerlink" title="最后 这玩意多数时间还是当个 表 和 日历 来用 …  过年了 开一开 平时吃灰"></a>最后 这玩意多数时间还是当个 <code>表</code> 和 <code>日历</code> 来用 …  过年了 开一开 平时吃灰</h2>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> awtrix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N1 刷 openWrt</title>
      <link href="2020/09/02/Diy/openwrt_n1/"/>
      <url>2020/09/02/Diy/openwrt_n1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://picgo.genji.xyz/blog/posts/image-20201010162139035.png" alt="image-20201010162139035"></p><h2 id="只mark帖子-没有教程"><a href="#只mark帖子-没有教程" class="headerlink" title="只mark帖子 没有教程"></a>只mark帖子 没有教程</h2><p>固件: <a href="https://www.right.com.cn/forum/thread-981406-1-1.html">恩山  flippy 更新很快</a>    </p><p>DockerUI: </p><ul><li><a href="https://github.com/lisaac/luci-app-dockerman">luci-app-dockerman github</a>  当然你也可以用 </li><li><a href="https://github.com/portainer/portainer">portainer github</a>      </li></ul><p>DDNS: 自带的 ddns 不支持 token 所以换了一个</p><ul><li><a href="https://github.com/NewFuture/DDNS">ddns github </a></li><li>如何配置   <a href="https://blog.genji.xyz/2020/01/05/2020-01-06_Net_ddns/">我的文章-ddns</a></li><li>*/5 * * * * cd /mnt/mmcblk1p3/ddns &amp;&amp; python ./run.py</li></ul><p>作为旁路由如何组网:</p><ul><li><a href="https://www.youtube.com/watch?v=jTs3VEaKFCw&t=1022s"> youtube </a></li><li>我选择的方案如下图</li></ul><p><img src="https://picgo.genji.xyz/blog/posts/image-20201010163852516.png" alt="image-20201010163852516"></p><p>连旁路由的wifi 出国</p><p>连主路由 国内</p><p>在电脑端我直接clash </p><p>在手机端我直接设置代理加端口</p><p>但是在电视上,操作累死个人,所以选择连接 出国</p><p>救砖:</p><ul><li><a href="https://www.bilibili.com/video/BV19J411c7Zf?from=search&seid=11516956421474620448">救砖视频 bilibili</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旁路由 </tag>
            
            <tag> openwrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openWrt SmartDns</title>
      <link href="2020/09/02/Diy/smartDns/"/>
      <url>2020/09/02/Diy/smartDns/</url>
      
        <content type="html"><![CDATA[<h1 id="SmartDns"><a href="#SmartDns" class="headerlink" title="SmartDns"></a>SmartDns</h1><div class="note info flat"><p><a href="https://github.com/pymumu/smartdns">SmartDNS github 仓库</a></p><p>我用的小米ax3600,好像只支持两个dns服务商,而且返回的ip,有的又是随机选择.  </p><p>SmartDns能从多个上游服务商获取dns结果,并且放回访问速度最快的给客服端.</p></div><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="安装-略过"><a href="#安装-略过" class="headerlink" title="安装(略过)"></a>安装(略过)</h2><p>github仓库说的特别清晰 ,中文!</p><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p><img src="https://picgo.genji.xyz/blog/posts/image-20201010153519938.png" alt="image-20201010153519938"></p><p>这里需要说的是</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201010153544699.png" alt="image-20201010153544699"></p><p>首先需要了解下</p><p>openwrt &gt; 网络 &gt; DHCP/DNS  (Dnsmasq)</p><p><img src="/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20201010153727280.png" alt="image-20201010153727280"></p><p><code>作为上游 </code>, 就是自动帮你设置的dns 转发.</p><p><code>重定向53端口</code>就是代替Dnsmasq 接管 53 端口</p><p>53端口:就是提供dns解析的端口</p><p>建议:使用上游</p><hr><h2 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h2><p>如果你 <code>openwrt</code> 安装了<code>openclash</code></p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201010154125803.png" alt="image-20201010154125803"></p><p>这里有个本地dns劫持 ,如果你开启的话</p><p>smartdns中的设置就会不生效,保存后Dnsmasq仍恢复设置</p><p>我自己是直接 <code>停用</code>然后 重启设备.</p><h2 id="添加dns服务器商"><a href="#添加dns服务器商" class="headerlink" title="添加dns服务器商"></a>添加dns服务器商</h2><p><a href="https://dns.ip.cn/">https://dns.ip.cn/   这是一个列出了常用dns 服务商的网站</a></p><p>我个人的配置</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201010154715193.png" alt="image-20201010154715193"></p><p>注意udp tcp tls.</p><p>在右侧的<code>修改</code>,你还可以添加分组,区分国内过外.</p><p>我自己是没有设置. </p><h2 id="路由器设置"><a href="#路由器设置" class="headerlink" title="路由器设置"></a>路由器设置</h2><p>由于我是旁路由 ,所以需要在主路由(小米ax3600)中设置dns ,指向我的旁路由(openwrt)的IP.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201010155057835.png" alt="image-20201010155057835"></p><h2 id="验证配置正确"><a href="#验证配置正确" class="headerlink" title="验证配置正确"></a>验证配置正确</h2><p>正常连接主路由的网络,终端输入: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">❯ nslookup -querytype=ptr smartdns</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server:192.168.3.1</span><br><span class="line">Address:192.168.3.1<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">smartdnsname = OpenWrt.</span><br><span class="line"></span><br><span class="line">Authoritative answers can be found from:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有如下显示为正确配置.</p><p>若没有<code>smartdns    name = OpenWrt.</code>就是没有配置上</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 用119.29.29.29 dnsPod服务商 解析www.iqiyi.com</span></span><br><span class="line"><span class="comment">## 返回来5个ip</span></span><br><span class="line"><span class="comment">## 电脑会随机选一个来用</span></span><br><span class="line">&gt; nslookup www.iqiyi.com 119.29.29.29</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server:119.29.29.29</span><br><span class="line">Address:119.29.29.29<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">www.iqiyi.comcanonical name = ipv6-static.dns.iqiyi.com.</span><br><span class="line">Name:ipv6-static.dns.iqiyi.com</span><br><span class="line">Address: 121.9.221.82</span><br><span class="line">Name:ipv6-static.dns.iqiyi.com</span><br><span class="line">Address: 121.9.221.83</span><br><span class="line">Name:ipv6-static.dns.iqiyi.com</span><br><span class="line">Address: 121.9.221.84</span><br><span class="line">Name:ipv6-static.dns.iqiyi.com</span><br><span class="line">Address: 121.9.221.100</span><br><span class="line">Name:ipv6-static.dns.iqiyi.com</span><br><span class="line">Address: 121.9.221.81</span><br></pre></td></tr></table></figure><p>用smartdns</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 后面走的是我路由器</span></span><br><span class="line">❯ nslookup www.iqiyi.com 192.168.3.1</span><br><span class="line">Server:192.168.3.1</span><br><span class="line">Address:192.168.3.1<span class="comment">#53</span></span><br><span class="line"></span><br><span class="line">Non-authoritative answer:</span><br><span class="line">www.iqiyi.comcanonical name = ipv6-static.dns.iqiyi.com.</span><br><span class="line">Name:ipv6-static.dns.iqiyi.com</span><br><span class="line">Address: 121.9.221.100</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>只返回个你最快的..</p><p>这里没有用 我旁路由的ip( 192.168.3.100 )</p><p>是因为我在主路由( 192.168.3.100 )设置了dns 指向192.168.3.1 </p><p>用谁都一样. </p><h2 id="尾巴"><a href="#尾巴" class="headerlink" title="尾巴"></a>尾巴</h2><p>作用是有的,但是程度有限.</p><p>我用他主要是解决有的网站图片打不开,换个dns 就好了的问题.</p><p>用它帮我选个好用的ip,省的我重新设置dns.</p>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openwrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 一些写法记录</title>
      <link href="2020/09/02/%E5%89%8D%E7%AB%AF/js/js%E5%A5%BD%E7%9A%84%E5%86%99%E6%B3%95/"/>
      <url>2020/09/02/%E5%89%8D%E7%AB%AF/js/js%E5%A5%BD%E7%9A%84%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;id = <span class="number">5</span> &#125; =&#123;<span class="attr">id</span>:<span class="number">88</span>, <span class="attr">name</span>:<span class="string">&#x27;nihao&#x27;</span>,<span class="attr">like</span>:<span class="string">&#x27;sing&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">console</span>.log(id) <span class="comment">//88</span></span><br><span class="line"><span class="keyword">const</span> &#123;id = <span class="number">5</span> &#125; =&#123; <span class="attr">name</span>:<span class="string">&#x27;nihao&#x27;</span>,<span class="attr">like</span>:<span class="string">&#x27;sing&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">console</span>.log(id)  <span class="comment">// 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//很类似那个默认传参</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">def</span>(<span class="params">x =<span class="number">3</span></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(x)</span><br><span class="line">&#125;</span><br><span class="line">def() <span class="comment">//3</span></span><br><span class="line"><span class="keyword">let</span> x = <span class="number">100</span></span><br><span class="line">def(x) <span class="comment">//100</span></span><br></pre></td></tr></table></figure><h1 id="取整"><a href="#取整" class="headerlink" title="取整"></a>取整</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = ~~<span class="number">2.33</span>   ----&gt; <span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">2.33</span> | <span class="number">0</span>   ----&gt; <span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">2.33</span> &gt;&gt; <span class="number">0</span>   ----&gt; <span class="number">2</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="built_in">Math</span>.floor(a) ----&gt; <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="连续判断-includes"><a href="#连续判断-includes" class="headerlink" title="连续判断 includes"></a>连续判断 includes</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不清晰</span></span><br><span class="line"><span class="keyword">var</span> role = <span class="string">&quot;user&quot;</span></span><br><span class="line"><span class="keyword">if</span>(role === <span class="string">&quot;admin&quot;</span>||role === <span class="string">&quot;superuser&quot;</span>||role === <span class="string">&quot;editor&quot;</span>)&#123;</span><br><span class="line">  <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( [<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;editer&quot;</span>,<span class="string">&quot;superuser&quot;</span>].includes(role))&#123;</span><br><span class="line">  <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="amp-amp"><a href="#amp-amp" class="headerlink" title="|| &amp;&amp;"></a>|| &amp;&amp;</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a || []</span><br><span class="line">states || <span class="built_in">console</span>.log(<span class="string">&#x27;niubi&#x27;</span>)</span><br><span class="line">states &amp;&amp; <span class="built_in">console</span>.log(<span class="string">&#x27;niubi&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="多个状态选择"><a href="#多个状态选择" class="headerlink" title="多个状态选择"></a>多个状态选择</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> actions = <span class="keyword">new</span> <span class="built_in">Map</span>([</span><br><span class="line">  [<span class="number">1</span>, [<span class="string">&#x27;processing&#x27;</span>,<span class="string">&#x27;IndexPage&#x27;</span>]],</span><br><span class="line">  [<span class="number">2</span>, [<span class="string">&#x27;fail&#x27;</span>,<span class="string">&#x27;FailPage&#x27;</span>]],</span><br><span class="line">  [<span class="number">3</span>, [<span class="string">&#x27;fail&#x27;</span>,<span class="string">&#x27;FailPage&#x27;</span>]],</span><br><span class="line">  [<span class="number">4</span>, [<span class="string">&#x27;success&#x27;</span>,<span class="string">&#x27;SuccessPage&#x27;</span>]],</span><br><span class="line">  [<span class="number">5</span>, [<span class="string">&#x27;cancel&#x27;</span>,<span class="string">&#x27;CancelPage&#x27;</span>]],</span><br><span class="line">  [<span class="string">&#x27;default&#x27;</span>, [<span class="string">&#x27;other&#x27;</span>,<span class="string">&#x27;Index&#x27;</span>]]</span><br><span class="line">])</span><br><span class="line"><span class="keyword">const</span> onButtonClick = <span class="function">(<span class="params">status</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> action = actions.get(status) || actions.get(<span class="string">&#x27;default&#x27;</span>)</span><br><span class="line">  sendLog(action[<span class="number">0</span>])</span><br><span class="line">  jumpTo(action[<span class="number">1</span>])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Map 和 Object</span></span><br><span class="line"><span class="comment">//Object 一般都有prototype</span></span><br><span class="line"><span class="comment">//Object 键只能是字符串或者Symbols Map的键可以是任意值。</span></span><br><span class="line"><span class="comment">//可以通过size属性很容易地得到一个Map的键值对个数</span></span><br><span class="line">actions.size<span class="comment">// =&gt;6</span></span><br></pre></td></tr></table></figure><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><p>在用 chart.js ,获取的数据需要处理下</p><p>对象数组 处理. –解构赋值 map</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有一段get 到的数据 [&#123;&#125;,&#123;&#125;]</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    date: <span class="number">20201021</span>,</span><br><span class="line">    states: <span class="number">56</span>,</span><br><span class="line">    positive: <span class="number">8289661</span>,</span><br><span class="line">    negative: <span class="number">110646725</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    date: <span class="number">20201020</span>,</span><br><span class="line">    states: <span class="number">56</span>,</span><br><span class="line">    positive: <span class="number">8232367</span>,</span><br><span class="line">    negative: <span class="number">109964576</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  ...and so on</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//js</span></span><br><span class="line"><span class="keyword">let</span> arrPositive = []</span><br><span class="line"><span class="keyword">let</span> arrStates = []</span><br><span class="line">data.forEach(<span class="function"><span class="params">d</span>=&gt;</span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span>&#123; date,states,positive,negative&#125; = d</span><br><span class="line">  arrPositive.push(&#123;date , <span class="attr">total</span> : positive&#125;)</span><br><span class="line">  arrStates.push(&#123;date , <span class="attr">total</span> : states&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//注意map  =&gt;  和 ()=&gt;&#123;return&#125; 和 function()&#123;&#125;区别</span></span><br><span class="line">arrStates.map(<span class="function"><span class="params">d</span>=&gt;</span>d.date).reverse()</span><br><span class="line">arrStates.map(<span class="function"><span class="params">d</span>=&gt;</span>d.total).reverse()</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = [&#123;</span><br><span class="line">    name: <span class="string">&#x27;Stark&#x27;</span>,</span><br><span class="line">    age: <span class="number">21</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    name: <span class="string">&#x27;Jarvis&#x27;</span>,</span><br><span class="line">    age: <span class="number">20</span></span><br><span class="line">&#125;,&#123;</span><br><span class="line">    name: <span class="string">&#x27;Pepper&#x27;</span>,</span><br><span class="line">    age: <span class="number">16</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = foo.filter(<span class="function"><span class="params">person</span> =&gt;</span> person.age &gt; <span class="number">16</span>)</span><br><span class="line">.map(<span class="function"><span class="params">person</span> =&gt;</span> (&#123;<span class="attr">person</span>: person,<span class="attr">friends</span>: []</span><br><span class="line">    &#125;))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>类数组转数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="reduce-求和-计算"><a href="#reduce-求和-计算" class="headerlink" title="reduce 求和 计算"></a>reduce 求和 计算</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b); <span class="comment">// =&gt; 15</span></span><br></pre></td></tr></table></figure><h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uniqueItems = [...new <span class="built_in">Set</span>(items)]</span><br><span class="line">arr.filter(<span class="function">(<span class="params">item,index,ary</span>)=&gt;</span> ary.indexOf(item) === index)</span><br><span class="line">arr.reduce(<span class="function">(<span class="params">pre,cur,index</span>)=&gt;</span>pre.includes( cur )? pre:pre.concat(cur),[])</span><br></pre></td></tr></table></figure><h1 id="转换类型"><a href="#转换类型" class="headerlink" title="转换类型"></a>转换类型</h1><h2 id="数字转字符串"><a href="#数字转字符串" class="headerlink" title="数字转字符串"></a>数字转字符串</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> converted_number = <span class="number">5</span> + <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(converted_number);</span><br><span class="line"><span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> converted_number); </span><br><span class="line"><span class="comment">// string</span></span><br></pre></td></tr></table></figure><h2 id="字符串转数字"><a href="#字符串转数字" class="headerlink" title="字符串转数字"></a>字符串转数字</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">the_string = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(+the_string);</span><br><span class="line"><span class="comment">// 123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> the_string = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> the_num = +the_string </span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>( the_string),<span class="keyword">typeof</span>( the_num) )</span><br><span class="line"><span class="comment">//string number</span></span><br></pre></td></tr></table></figure><h1 id="dongtai对象"><a href="#dongtai对象" class="headerlink" title="dongtai对象"></a>dongtai对象</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dynamic = <span class="string">&#x27;flavour&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> item = &#123;</span><br><span class="line">    name: <span class="string">&#x27;Coke&#x27;</span>,</span><br><span class="line">    [dynamic]: <span class="string">&#x27;Cherry&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(item); </span><br><span class="line"><span class="comment">// &#123; name: &quot;Coke&quot;, flavour: &quot;Cherry&quot; &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> Mark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滚动视差 scroll parallax js and css</title>
      <link href="2020/05/01/%E5%89%8D%E7%AB%AF/css/%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%B7%AE%20scroll%20parallax/"/>
      <url>2020/05/01/%E5%89%8D%E7%AB%AF/css/%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%B7%AE%20scroll%20parallax/</url>
      
        <content type="html"><![CDATA[<h1 id="滚动视差-scroll-parallax"><a href="#滚动视差-scroll-parallax" class="headerlink" title="滚动视差 scroll parallax"></a>滚动视差 scroll parallax</h1><h2 id="说点没用的"><a href="#说点没用的" class="headerlink" title="说点没用的"></a>说点没用的</h2><p>滚动视差 似乎在 5 年前很火!</p><p>我个人很喜欢,我喜欢这种沉浸,交互的感觉,但是相反网页展示的信息量要比正常网站少了一点.而且有的垃圾电脑还卡!</p><p>在这个 demo 没有优化的时候!</p><p>用家里没有显卡的老古董打开 ==&gt;&gt; 卡的一逼</p><p>用 nuci7 核显 2k ==&gt; 流畅</p><p>用 nuci7 核显 4k ==&gt; 也有点卡</p><p>不过优化后 效果明显好多了!</p><hr><h2 id="两种控制方法"><a href="#两种控制方法" class="headerlink" title="两种控制方法"></a>两种控制方法</h2><h3 id="js-与-css"><a href="#js-与-css" class="headerlink" title="js 与 css"></a>js 与 css</h3><ul><li><p>Js : 监听 scroll 更改 transition</p></li><li><p>Css : 设置<code>perspective</code> <code>transform-style: preserve-3d;</code> <code>translate Z</code> 很好理解 <code>近大远小</code> <code>近快远慢</code></p></li></ul><h3 id="优缺点-仅个人不完全的认为"><a href="#优缺点-仅个人不完全的认为" class="headerlink" title="优缺点(仅个人不完全的认为)"></a>优缺点(仅个人不完全的认为)</h3><ul><li>Js : 更灵活 , 而且还能 左右移动 , 透明度 , 添加些 class 来实现动画啊, 颜色之类的. 效果更好</li><li>css : 更方便 设置 css 即可实现.性能更好. 效果感觉像是一个平面</li></ul><h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parallax = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.parallax&quot;</span>),</span><br><span class="line">  Top = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.top&quot;</span>),</span><br><span class="line">  Center = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.center&quot;</span>),</span><br><span class="line">  Bottom = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.bottom&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> scrolled_px = <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">  <span class="comment">//已经滚动了的 像素</span></span><br><span class="line">  <span class="keyword">let</span> scrolled_per =</span><br><span class="line">    scrolled_px /</span><br><span class="line">    (<span class="built_in">document</span>.documentElement.scrollHeight -</span><br><span class="line">      <span class="built_in">document</span>.documentElement.clientHeight);</span><br><span class="line">  <span class="comment">//滚动的百分比  已经滚动的了像素 /(滚动条总长度 -  当前窗口的高度)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//判断 parallax 是否还是视口</span></span><br><span class="line">  <span class="keyword">if</span> (scrolled_px &lt;= parallax.offsetHeight) &#123;</span><br><span class="line">    Top.style.transform = <span class="string">`translateY(<span class="subst">$&#123;scrolled_px *</span></span></span><br><span class="line"><span class="string"><span class="subst">      <span class="number">0.8</span>&#125;</span>px) scale(<span class="subst">$&#123;scrolled_per * <span class="number">0.5</span> + <span class="number">1</span>&#125;</span> )`</span>;</span><br><span class="line">    Center.style.transform = <span class="string">`translateY(<span class="subst">$&#123;scrolled_px *</span></span></span><br><span class="line"><span class="string"><span class="subst">      <span class="number">0.7</span>&#125;</span>px) scale(<span class="subst">$&#123;scrolled_per * <span class="number">1</span> + <span class="number">1</span>&#125;</span> )`</span>;</span><br><span class="line">    Bottom.style.transform = <span class="string">`translateY(<span class="subst">$&#123;scrolled_px *</span></span></span><br><span class="line"><span class="string"><span class="subst">      <span class="number">0.05</span>&#125;</span>px) scale(<span class="subst">$&#123;scrolled_per * <span class="number">1</span> + <span class="number">1</span>&#125;</span> )`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我没有确切计算, 随便地根据效果设置的 <code>translateY</code> <code>scale</code>.</p><p>我见过那种计算的特别精确的, 滚动后图片之间的线还能连上. 应该是用矩阵算的.(找了一个月都找不到那个网站了) </p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>现在这几行代码,我 2k 分辨率不卡 4k 就有点卡了.</p><p>scroll 触发频率很高的 ,而且,我还安装平滑滚动的软件 <code>Mos</code>,就触发的更频繁了.</p><p>搞个节流试试</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> scrolled_px = <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">  <span class="keyword">let</span> scrolled_per =</span><br><span class="line">    scrolled_px /</span><br><span class="line">    (<span class="built_in">document</span>.documentElement.scrollHeight -</span><br><span class="line">      <span class="built_in">document</span>.documentElement.clientHeight);</span><br><span class="line">  Top.style.transform = <span class="string">`translateY(<span class="subst">$&#123;scrolled_px *</span></span></span><br><span class="line"><span class="string"><span class="subst">    <span class="number">0.8</span>&#125;</span>px) scale(<span class="subst">$&#123;scrolled_per * <span class="number">0.5</span> + <span class="number">1</span>&#125;</span> )`</span>;</span><br><span class="line">  Center.style.transform = <span class="string">`translateY(<span class="subst">$&#123;scrolled_px *</span></span></span><br><span class="line"><span class="string"><span class="subst">    <span class="number">0.7</span>&#125;</span>px) scale(<span class="subst">$&#123;scrolled_per * <span class="number">1</span> + <span class="number">1</span>&#125;</span> )`</span>;</span><br><span class="line">  Bottom.style.transform = <span class="string">`translateY(<span class="subst">$&#123;scrolled_px *</span></span></span><br><span class="line"><span class="string"><span class="subst">    <span class="number">0.05</span>&#125;</span>px) scale(<span class="subst">$&#123;scrolled_per * <span class="number">1</span> + <span class="number">1</span>&#125;</span> )`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> canRun = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!canRun) <span class="keyword">return</span>;</span><br><span class="line">    canRun = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      fn.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">      canRun = <span class="literal">true</span>;</span><br><span class="line">    &#125;, delay);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, throttle(move, <span class="number">16</span>));</span><br></pre></td></tr></table></figure><p>换成 requestAnimationFrame 试试</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> canRun = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!canRun) <span class="keyword">return</span>;</span><br><span class="line">    canRun = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      fn.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">      canRun = <span class="literal">true</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, throttle(move));</span><br></pre></td></tr></table></figure><p>再添加个 will change</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parallax</span> &#123;</span><br><span class="line">  <span class="attribute">will-change</span>: transform;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单的看看</p><p><img src="/Users/liulingyue/Desktop/image-20201202004002303.png" alt="image-20201202004002303"></p><p>滚动的时候 帧率也比较稳定 60</p><p><img src="/Users/liulingyue/Desktop/image-20201202004127764.png" alt="image-20201202004127764"></p><p>帧率下来的区域是我没有滚动 哦!不是卡顿.</p><p>再添加个 IntersectionObserver 来 addEventListener 和 removeEventListener</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// window.addEventListener(&quot;scroll&quot;,throttle(move));  替换成</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> io = <span class="keyword">new</span> IntersectionObserver(<span class="function">(<span class="params">entries</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> flag = entries[<span class="number">0</span>].isIntersecting;</span><br><span class="line">  <span class="built_in">console</span>.log(flag);</span><br><span class="line">  <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;scroll&quot;</span>, throttle);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;scroll&quot;</span>, throttle(move));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">io.observe(parallax);</span><br></pre></td></tr></table></figure><p>省的计算是不是在可视区域了.</p><p>完整代码 <strong><em>codepen</em></strong></p><iframe height="265" style="width: 100%;" scrolling="no" title="scroll parallax js" src="https://codepen.io/895939059/embed/yLYWQaq?height=265&theme-id=dark&default-tab=js,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/895939059/pen/yLYWQaq'>scroll parallax js</a> by Liu ling yue   (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><p><img src="/Users/liulingyue/Desktop/image-20201202011155725.png" alt="image-20201202011155725"></p><p>就是 translate Z</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><iframe height="265" style="width: 100%;" scrolling="no" title="scroll parallax css" src="https://codepen.io/895939059/embed/poEJmJO?height=265&theme-id=dark&default-tab=css,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/895939059/pen/poEJmJO'>scroll parallax css</a> by Liu ling yue   (<a href='https://codepen.io/895939059'>@895939059</a>) on <a href='https://codepen.io'>CodePen</a>.</iframe><p><strong><em>和js 的效果还是有差别的</em></strong></p><p>注意几个点</p><p><code>perspective: 1px;</code><br><code>perspective-origin: 0 0;</code><br><code>transform-style: preserve-3d;</code></p><p><code>transform: translateZ(-20px) scale(21);</code></p><h2 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h2><p>加上一个 scale() , 效果更好</p><p>至于 scale 放大多大才能完美匹配呢</p><p>这有个计算公式</p><p><code>1 + (translateZ * -1) / perspective</code></p><p><img src="/Users/liulingyue/Desktop/image-20201202012244471.png" alt="image-20201202012244471"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> parallax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mongoDB</title>
      <link href="2020/04/01/DB/2020-04-01_DB_mongoDB/"/>
      <url>2020/04/01/DB/2020-04-01_DB_mongoDB/</url>
      
        <content type="html"><![CDATA[<h1 id="MongoDB安装"><a href="#MongoDB安装" class="headerlink" title="MongoDB安装"></a>MongoDB安装</h1><div class="note info flat"><p>Mongodb  操作方式 和js  挺像的.省事.</p><p><a href="https://zhuanlan.zhihu.com/p/86777551">redis 和 mongoDB区别</a></p><p><a href="https://docs.mongodb.com/">mongodb 官方文档</a></p><p><a href="https://docs.mongoing.com/">mongodb 官方文档中文版</a></p></div><h2 id="Homebrew安装-我懒所以…"><a href="#Homebrew安装-我懒所以…" class="headerlink" title="Homebrew安装 (我懒所以…)"></a>Homebrew安装 (我懒所以…)</h2><p>慢就换源,或者终端开代理.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 切换库</span></span><br><span class="line">brew tap mongodb/brew</span><br><span class="line"></span><br><span class="line"><span class="comment">##搜索 看版本</span></span><br><span class="line">brew search mongodb</span><br><span class="line"></span><br><span class="line"><span class="comment">##安装 </span></span><br><span class="line">brew install mongodb-community</span><br></pre></td></tr></table></figure><ul><li>配置文件：**/usr/local/etc/mongod.conf**</li><li>日志文件路径：**/usr/local/var/log/mongodb**</li><li>数据存放路径：**/usr/local/var/mongodb**</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 切换数据库目录</span><br><span class="line">mongod --dbpath &#x2F;Users&#x2F;liulingyue&#x2F;mongodata&#x2F;data</span><br><span class="line"></span><br><span class="line">## 使用 brew 命令启动服务。</span><br><span class="line">brew services start mongodb-community</span><br><span class="line">brew services stop mongodb-community</span><br></pre></td></tr></table></figure><hr><h1 id="数据库转移"><a href="#数据库转移" class="headerlink" title="数据库转移"></a>数据库转移</h1><p>把本地的数据 转移到 服务器.</p><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 在当前文件夹生成 dump 文件</span><br><span class="line">mongodump -d 数据库名 </span><br></pre></td></tr></table></figure><h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><p>复制<code>dump</code>到服务器,在<code>dump</code>当前目录执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongorestore </span><br></pre></td></tr></table></figure><hr><h1 id="可视化工具"><a href="#可视化工具" class="headerlink" title="可视化工具"></a>可视化工具</h1><p><a href="https://robomongo.org/">Robo 3T</a>     <strong>注意不是studio 3T,那个是花钱的.</strong></p><p><a href="https://www.mongodb.com/products/compass">MongoDB Compass</a>  <strong>官方社区的</strong></p><p> 感觉这俩都差不多,但是 3T 那行命令是显示出来的,自己可以写很多map,替换啊 ,正则的操作. </p><p><del>compass  没有找到在哪写 ,可能有 ,但是我没找到…</del></p><p>找到了也还挺好用.哈哈都差不多.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201008094014627.png" alt="image-20201008094014627"></p><hr><h1 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h1><ol><li><p>本地连本地</p><p>可视化工具链接:   localhost:27017 直接填就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;node</span><br><span class="line">## mongoose</span><br><span class="line">module.exports &#x3D; app&#x3D;&gt;&#123;</span><br><span class="line">const mongoose &#x3D; require(&#39;mongoose&#39;)</span><br><span class="line">mongoose.connect(&quot;mongodb:&#x2F;&#x2F;127.0.0.1:27017&#x2F;name&quot;,&#123;</span><br><span class="line">useNewUrlParser:true,</span><br><span class="line">useUnifiedTopology:true,</span><br><span class="line">useCreateIndex:true</span><br><span class="line">&#125;).then(() &#x3D;&gt; &#123;</span><br><span class="line">console.log(&quot;本地  连接数据库成功&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(err &#x3D;&gt; &#123;</span><br><span class="line">console.log(&quot;连接数据库失败&quot;);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## node </span><br><span class="line">const &#123; MongoClient &#125; &#x3D; require(&quot;mongodb&quot;);</span><br><span class="line">const uri &#x3D; &#39;mongodb:&#x2F;&#x2F;localhost:27017&#39;;  </span><br><span class="line">(async function() &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    const client &#x3D; await MongoClient.connect(uri,&#123; useNewUrlParser: true &#125;);</span><br><span class="line">    &#x2F;&#x2F; ... anything</span><br><span class="line"></span><br><span class="line">    client.close();</span><br><span class="line">  &#125; catch(e) &#123;</span><br><span class="line">    console.error(e)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 这些我了解的不是特别清晰 </span><br><span class="line">useNewUrlParser:true,</span><br><span class="line">useUnifiedTopology:true,</span><br><span class="line">useCreateIndex:true</span><br><span class="line">报警 添上就对了... 应该是允许某些规则...</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>连接云数据库</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 一般都会给你个链接 添上你数据库密码 和 dbname 即可</span></span><br><span class="line">srv://&lt;username&gt;:&lt;password&gt;@&lt;ip/domain&gt;&lt;:port&gt;/&lt;dbname&gt;?&lt;options&gt;</span><br></pre></td></tr></table></figure></li><li><p>可视化工具连服务器 </p><p>等于ssh登录,再连本地.</p><p> <img src="https://picgo.genji.xyz/blog/posts/image-20201008220836636.png" alt="image-20201008220836636"></p><p> <img src="https://picgo.genji.xyz/blog/posts/image-20201008220812468.png" alt="image-20201008220812468"></p></li><li><p>连接需要  authentication 的 </p><p>先创建需要验证的 username</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mongo </span><br><span class="line">use admin</span><br><span class="line">## 最高权限</span><br><span class="line">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&quot;root&quot;]&#125;) </span><br><span class="line">## 指定数据库权限</span><br><span class="line">db.createUser(&#123;user:&quot;username&quot;,pwd:&quot;password&quot;,roles:[&#123;role:&quot;dbOwner&quot;,db:&quot;数据库名&quot;&#125;]&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改mongod.conf文件 开启验证</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">  destination: file</span><br><span class="line">  path: /usr/local/var/log/mongodb/mongo.log</span><br><span class="line">  logAppend: true</span><br><span class="line">storage:</span><br><span class="line"> dbPath: /usr/local/var/mongodb</span><br><span class="line">net:</span><br><span class="line"> port: 27017</span><br><span class="line"><span class="deletion">-  bindIp: 127.0.0.1</span></span><br><span class="line"><span class="addition">+  bindIp: 0.0.0.0</span></span><br><span class="line">security:</span><br><span class="line"><span class="deletion">-  authorization: disabled</span></span><br><span class="line"><span class="addition">+  authorization: enabled</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><div class="note warning simple"><p>别忘了 防火墙 和 安全组 开放 你设置的端口!!!!</p></div><p>重启</p><p>node 方连接方式  同理连接 云数据库.</p><p>写下可视化工具连接. </p><p>这里<code>Database</code> 写admin 就好了 ,<strong>别写你要连接的数据库</strong>.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201008220457323.png" alt="image-20201008220457323"></p><h4 id="roles-如下："><a href="#roles-如下：" class="headerlink" title="roles 如下："></a>roles 如下：</h4><p><strong>数据库用户角色（Database User Roles)</strong></p><ul><li>read : 授权User只读数据的权限，允许用户读取指定的数据库</li><li>readWrite 授权User读/写数据的权限，允许用户读/写指定的数据库</li></ul><p><strong>数据库管理角色（Database Admininstration Roles)</strong></p><ul><li>dbAdmin：在当前的数据库中执行管理操作，如索引的创建、删除、统计、查看等</li><li>dbOwner：在当前的数据库中执行任意操作，增、删、改、查等</li><li>userAdmin ：在当前的数据库中管理User<strong>，</strong>创建、删除和管理用户。</li></ul><p><strong>备份和还原角色（Backup and Restoration Roles)</strong></p><ul><li>backup</li><li>restore</li></ul><p><strong>跨库角色（All-Database Roles)</strong></p><ul><li>readAnyDatabase：授权在所有的数据库上读取数据的权限，只在admin 中可用</li><li>readWriteAnyDatabase：授权在所有的数据库上读写数据的权限，只在admin 中可用</li><li>userAdminAnyDatabase：授权在所有的数据库上管理User的权限，只在admin中可用</li><li>dbAdminAnyDatabase： 授权管理所有数据库的权限，只在admin 中可用</li></ul><p><strong>集群管理角色（Cluster Administration Roles)</strong></p><ul><li>clusterAdmin：授权管理集群的最高权限，只在admin中可用</li><li>clusterManager：授权管理和监控集群的权限</li><li>clusterMonoitor：授权监控集群的权限，对监控工具具有readonly的权限</li><li>hostManager：管理server</li></ul><p><strong>超级角色（super master  Roles)</strong></p><ul><li>root ：超级账户和权限，只在admin中可用le</li></ul><h1 id="mongodb-常用命令"><a href="#mongodb-常用命令" class="headerlink" title="mongodb 常用命令"></a>mongodb 常用命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"># 连接格式 有的需要srv 有的不需要验证直接连不用username</span><br><span class="line">mongodb:&#x2F;&#x2F;[username:password@]host1[:port1][,...hostN[:portN]]][&#x2F;[database][?options]]</span><br><span class="line"></span><br><span class="line"># 查看db 运行ip 和 端口信息</span><br><span class="line">db.getMongo()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 创建超级管理员</span><br><span class="line">db.createUser(&#123;user:&quot;root&quot;,pwd:&quot;123456&quot;,roles:[&quot;root&quot;]&#125;)</span><br><span class="line"></span><br><span class="line"># mongo </span><br><span class="line"># use admin </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 更改数据库 </span><br><span class="line">&#123;</span><br><span class="line"> &quot;_id&quot;:ObjectId(),</span><br><span class="line"> &quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;fdjfiejifejfe.png&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.getCollection(&#39;collections&#39;).find(&#123;&#125;).map(doc &#x3D;&gt; &#123;</span><br><span class="line">doc.icon &#x3D; doc.icon ? doc.icon.replace(&#39;localhost:3000&#39;,&#39;yourDomain.com&#39;) : null</span><br><span class="line">return doc</span><br><span class="line">db.collectionName.save(doc)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 更改嵌套</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot;:ObjectId(),</span><br><span class="line">&quot;items&quot;:[</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot;:ObjectId(),</span><br><span class="line">&quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;fdjfiejifejfe.png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;_id&quot;:ObjectId(),</span><br><span class="line">&quot;icon&quot;:&quot;https:&#x2F;&#x2F;localhost:3000&#x2F;upload&#x2F;12323123.png&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.getCollection(&#39;collections&#39;).find(&#123;&#125;).map(doc &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line"># 这里没用doc.items &#x3D; doc.items.map()   因为更改的是个对象 改地址等于改本身</span><br><span class="line">doc.items.map( item &#x3D;&gt; &#123;</span><br><span class="line">item.icon &#x3D; item.icon ?item.icon.replace(&#39;localhost:3000&#39;,&#39;yourDomain.com&#39;) : null</span><br><span class="line">return item</span><br><span class="line">&#125;)</span><br><span class="line">return doc</span><br><span class="line">db.collectionName.save(doc)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>intel nuc8i5 黑苹果</title>
      <link href="2020/03/04/Diy/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
      <url>2020/03/04/Diy/%E9%BB%91%E8%8B%B9%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="需要"><a href="#需要" class="headerlink" title="需要"></a>需要</h1><table><thead><tr><th>配件</th><th>详细</th><th>价格</th></tr></thead><tbody><tr><td>海盗船 ddr4 2666 *2</td><td>16g*2</td><td>¥938</td></tr><tr><td>Intel nuc8i5</td><td>咸鱼 未开封  官保</td><td>¥2200</td></tr><tr><td>西数 黑盘 sn750</td><td>500G</td><td>¥579</td></tr><tr><td>U盘</td><td>自己有</td><td>¥0</td></tr><tr><td>白苹果拆机卡</td><td>我舍弃了(穷)</td><td>¥0</td></tr></tbody></table><p> Intel nuc8i5 黑苹果内存最高支持 2400 ,买2666 是因为 换下来 有的笔记本也能用 .(内存现在最高支持64G)</p><h1 id="设置bios"><a href="#设置bios" class="headerlink" title="设置bios"></a>设置bios</h1><ol><li>开机时，连续点按 F2 进入 BIOS，为了避免之前有其他不合适的改动，建议先按 F9 重置 BIOS 默认设置。</li><li>Boot-&gt;Boot Priority-&gt;Legacy Boot Priority-&gt; « Legacy Boot » ：禁用</li><li>Boot-&gt;Boot Configuration-&gt;<br> UEFI Boot-&gt;« Fast Boot »： 禁用<br> UEFI Boot-&gt;« Boot USB Devices First » ： 启用<br> UEFI Boot-&gt;« Boot Network Devices Last » ：启用<br> Boot Devices-&gt;«Network Boot» ：设置为 « Disable »</li><li>Boot-&gt;Secure Boot-&gt; « Secure Boot » ：禁用</li><li>Security-&gt;Security Features-&gt; « Inter VT for directed I/VO (VT-d) » ： 禁用</li><li>Power-&gt;Secondary Power Settings-&gt; « Wake on LAN from S4/S5 » ： 设置为 « Stay Off »</li></ol><hr><h1 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h1><ol><li>准备一个 Fat32 格式的 U 盘（注意：U 盘名<strong>不要</strong>包含汉字和空格！！），剩余空间应大于 500MB。</li></ol><div class="note primay flat"><p>这里放弃了以前的安装方法,换成了在线安装.</p><p>clover 引导换成了 OpenCore</p></div><ol start="2"><li><p>下载大佬做好的  NUC8_MacOnlineInstaller.zip、EFI-OC-xxxxxx.zip 拷贝至 U 盘根目录并分别解压。(以前是用balenaEtcher 做启动盘)</p></li><li><p>将 U盘 插上 NUC8 并开机，立即按住 command/win 键并持续点按 R 键。OpenCore 支持 Cmd+R 快捷键进入 Recovery 模式，即可开始安装。</p></li></ol><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li><p>快捷键激活 Recovery 模式</p><p>U 盘插入 NUC 后，按下电源键并立即持续点按 F10，进入 BIOS 启动菜单，选择 UEFI 开头的 U 盘，按回车并立即 Cmd+R<br>（注意按回车和 Cmd+R 不能有明显停顿，Cmd+R 具体按法：Cmd为保持长按，R是连续点按，注意“长按”和“持续点按”的区别）<br>如果还是不行，可以持续点按 ESC 或 Option/Alt 键，出现 OC 引导菜单后，按空格，出现隐藏引导项“macOS Boot From Recovery”，选中它并回车进入。</p></li><li><p>选择“磁盘工具”，先格式化要安装 macOS 的硬盘：<br>选择根节点, 名称<code>MacOS</code>  , 格式<code>APFS</code>,方案<code>GUID分区图</code></p></li><li><p>联网–&gt;重新安装macos</p></li></ol><h1 id="EFI"><a href="#EFI" class="headerlink" title="EFI"></a>EFI</h1><ol><li><p>打开 Hackintool，选择“磁盘”页，如图挂载硬盘的 EFI 分区。</p></li><li><p>摇号，即生成随机三码</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201128053146108.png" alt="image-20201128053146108"></p></li><li><p>更该电源模式</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201128053243350.png" alt="image-20201128053243350"></p></li></ol><h1 id="更新驱动"><a href="#更新驱动" class="headerlink" title="更新驱动"></a>更新驱动</h1><p><a href="https://github.com/OpenIntelWireless">蓝牙和wifi https://github.com/OpenIntelWireless</a></p><p>别忘了修改bios</p>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 树莓派/openwrt 中搭建gitea</title>
      <link href="2020/03/01/Diy/gitea/"/>
      <url>2020/03/01/Diy/gitea/</url>
      
        <content type="html"><![CDATA[<h1 id="gitea"><a href="#gitea" class="headerlink" title=" gitea"></a><i class="fas fa-dog"></i> gitea</h1><div class="note primay flat"><p>gitea 就是 gogs 的小弟兄,一个自助的git服务</p><p><a href="https://docs.gitea.io/zh-cn/">中文文档</a>   <a href="https://gitea.io/en-us/">英文文档</a></p></div><h2 id="docker-运行"><a href="#docker-运行" class="headerlink" title="docker 运行"></a>docker 运行</h2><p>有很多方式,<code>docker</code>最省事,其他的看 <a href="https://docs.gitea.io/zh-cn/">中文文档</a> .</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 拉取镜像</span></span><br><span class="line">docker pull gitea/gitea:latest</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在宿主机创建挂在到镜像的文件夹. 文件夹目录随意, 但是要和下一条命令对应  </span></span><br><span class="line">sudo mkdir -p /var/lib/gitea</span><br><span class="line"></span><br><span class="line"><span class="comment">## docker run </span></span><br><span class="line">docker <span class="keyword">run</span><span class="bash"> -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## -d 后台运行</span></span><br><span class="line"><span class="comment">## --name= 给容器命名</span></span><br><span class="line"><span class="comment">## -p 外部端口:内部端口</span></span><br><span class="line"><span class="comment">## -v 外部要挂载的文件目录:容器内目录</span></span><br></pre></td></tr></table></figure><h2 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h2><p>在挂载文件目录时候,会报错.</p><p>可能是没有权限的问题</p><p>在<code>docker</code>&gt;<code>preferences</code>&gt;<code>resources</code>&gt;<code>file sharing</code>中添加你创建的文件目录</p><h2 id="访问-gitea"><a href="#访问-gitea" class="headerlink" title="访问 gitea"></a>访问 gitea</h2><p> 我是软路由的docker,运行的所以要访问软路由的ip.</p><p><code>192.168.3.123:10080</code></p><h2 id="安装gitea"><a href="#安装gitea" class="headerlink" title="安装gitea"></a>安装gitea</h2><p><img src="https://picgo.genji.xyz/blog/posts/image-20201005025016837.png" alt="image-20201005025016837"></p><p>先按照默认的来,熟练的话或者想用别的数据库,就直接改 </p><p>设置好<code>管理员账号</code>后 ,立刻安装.</p><p>重新打开网站 </p><p><code>192.168.3.123:10080</code></p><h2 id="配置-app-ini文件"><a href="#配置-app-ini文件" class="headerlink" title="配置 app.ini文件"></a>配置 app.ini文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你的路径/gitea/conf/app.ini</span><br></pre></td></tr></table></figure><p><a href="https://github.com/go-gitea/gitea/blob/master/custom/conf/app.example.ini">官方配置 example</a></p><p><a href="https://docs.gitea.io/zh-cn/config-cheat-sheet/#server">中文配置文档</a></p><p>我的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">## app.ini</span><br><span class="line"></span><br><span class="line">主要配置这些 其他的默认即可</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[server]</span><br><span class="line">APP_DATA_PATH    &#x3D; &#x2F;data&#x2F;gitea</span><br><span class="line">DOMAIN           &#x3D; git.genji.xyz</span><br><span class="line">SSH_DOMAIN       &#x3D; genji.xyz(这里要注意,不要写二级域名)</span><br><span class="line"></span><br><span class="line">#内部监听端口</span><br><span class="line">HTTP_PORT        &#x3D; 3000</span><br><span class="line"></span><br><span class="line"># 这里是你的访问网站的url(可以是你反向代理后的域名,可以使ip,看你具体的配置)</span><br><span class="line">ROOT_URL         &#x3D; https:&#x2F;&#x2F;git.genji.xyz</span><br><span class="line"></span><br><span class="line">## 是否允许ssh </span><br><span class="line">DISABLE_SSH      &#x3D; true</span><br><span class="line"></span><br><span class="line"># 这里千万别填 22 否则和你&#96;软路由&#96; 或者&#96;树莓派&#96;的ssh 冲突</span><br><span class="line">SSH_PORT         &#x3D; 2222</span><br><span class="line">SSH_LISTEN_PORT  &#x3D; 2222</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 这里是设置主题的 后面会说</span><br><span class="line"># gitea,arc-green 是自带的</span><br><span class="line">[ui]           </span><br><span class="line">DEFAULT_THEME &#x3D; genji                                                                               </span><br><span class="line">THEMES &#x3D;  gitea,arc-green,space,genji                                                               </span><br></pre></td></tr></table></figure><p>这里几个 ssh  和 url  要仔细点,</p><h2 id="提交公钥"><a href="#提交公钥" class="headerlink" title="提交公钥"></a>提交公钥</h2><p><code>用户设置</code>&gt;ssh/gpg key 添加  </p><h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><p><a href="https://gitea.com/gitea/awesome-gitea">click here网站里的最下面有主题</a></p><p>将主题 <code>theme-name.css</code> css(有的也有js) 文件放入  <code>\path\to\custom\public\css </code>.</p><p>然后修改<code>\path\to\custom\conf\app.ini</code></p><p>在<code> DEFAULT_THEME =  name</code>.</p><p>重新docker run ,登录你的个人设置中 更改.</p><p>你也可以看看文档 ,改改tmpl,css</p><h2 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h2><p>我的是192.168.123:10080</p><p>我得把这个端口映射到公网ip上,路由器的功能.别用光猫的端口映射(有点小bug )</p><p>然后你可以ddns ,就能一直域名访问了 .</p><p>你也可以直接放到 服务器 docker 里 , 反向代理到80.</p><p> 写得很粗!有问题请留言.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201005032748440.png" alt="image-20201005032748440"></p><p><img src="https://picgo.genji.xyz/blog/posts/image-20201005032836078.png" alt="image-20201005032836078"></p>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> gitea </tag>
            
            <tag> 端口映射 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法和Typora快捷键</title>
      <link href="2020/03/01/Mark/md/Markdown%20%E8%AF%AD%E6%B3%95/"/>
      <url>2020/03/01/Mark/md/Markdown%20%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="标题1-6"><a href="#标题1-6" class="headerlink" title="标题1-6"></a>标题1-6</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#</span></span><br><span class="line"><span class="section">##</span></span><br><span class="line"><span class="section">###</span></span><br><span class="line"><span class="section">####</span></span><br><span class="line"><span class="section">#####</span></span><br><span class="line"><span class="section">######</span></span><br></pre></td></tr></table></figure><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">换行</span><br><span class="line"></span><br><span class="line">两个以上空格 加 回车</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我是普通回车</p><p>我是两个空格加回车  </p><p>我是两个空格</p><p>我什么都不是</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br></pre></td></tr></table></figure><p><em>斜体文本</em><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong></p><p>最常用的是粗体</p><h2 id="分隔线-没有感情的分隔线"><a href="#分隔线-没有感情的分隔线" class="headerlink" title="分隔线(没有感情的分隔线)"></a>分隔线(没有感情的分隔线)</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">*</span> <span class="emphasis">* *</span> </span></span><br><span class="line"><span class="strong">**</span><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">- - - </span></span></span><br><span class="line"><span class="strong"><span class="emphasis">-----</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">我是看不出哦区别 我常用 ----- 好理解</span></span></span><br></pre></td></tr></table></figure><hr><hr><hr><hr><hr><h2 id="删除线-打脸专用"><a href="#删除线-打脸专用" class="headerlink" title="删除线(打脸专用)"></a>删除线(打脸专用)</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~打脸了~~</span><br></pre></td></tr></table></figure><p><del>打脸了</del></p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;带下划线文本&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure><p><u>带下划线文本</u></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="段落中代码"><a href="#段落中代码" class="headerlink" title="段落中代码"></a>段落中代码</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`hello`</span></span><br></pre></td></tr></table></figure><p><code>hello</code></p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```md</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">​```</span></span><br><span class="line"></span><br><span class="line">​<span class="code">```语言 + 回车</span></span><br></pre></td></tr></table></figure><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">baidu.com</span>) </span><br><span class="line"></span><br><span class="line">百度[][1]</span><br><span class="line">淘宝[][taobao]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">1</span>]:<span class="link">www.baidu.con</span></span><br><span class="line">[<span class="symbol">taobao</span>]:<span class="link">www.taobao.com</span></span><br><span class="line"></span><br><span class="line">command + k</span><br></pre></td></tr></table></figure><p><a href="baidu.com">百度</a> </p><p>百度<a href="www.baidu.con"></a><br>淘宝<a href="www.taobao.com"></a></p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">markdown</span>](<span class="link">https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png</span>)</span><br><span class="line"></span><br><span class="line">缩放得用 html css </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:25%;&quot;</span> /&gt;</span></span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl + command + i</span><br></pre></td></tr></table></figure><p><img src="https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png" alt="markdown"></p><img src="https://picgo.genji.xyz/blog/posts/c4a6db3cba16fc150e3db76ca3c326d2.png" style="zoom:25%;" /><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> hello</span><br><span class="line"><span class="bullet">+</span> hi</span><br><span class="line"><span class="bullet">+</span> bye</span><br><span class="line"><span class="bullet">*</span> hello</span><br><span class="line"><span class="bullet">-</span> hi</span><br><span class="line"><span class="bullet">-</span> bye</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>hello<ul><li>hi</li><li>bye</li></ul><ul><li>hello</li></ul><ul><li>hi</li><li>bye</li></ul></li></ol><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>Markdown 还能各种画图  数学公式 等等 </p><p>我敬而远之.</p>]]></content>
      
      
      <categories>
          
          <category> mark </category>
          
          <category> md </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 常用指令/快捷键</title>
      <link href="2020/02/15/Mark/mac%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>2020/02/15/Mark/mac%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#允许安装任何来源软件命令</span></span><br><span class="line">sudo spctl --master-disable</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭键盘 fn 功能按键 </span></span><br><span class="line">defaults write .GlobalPreferences com.apple.keyboard.fnState -bool yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">shift command  .   </span><br><span class="line">## 显示&#x2F;隐藏文件 </span><br><span class="line"></span><br><span class="line">command  alt esc  </span><br><span class="line">强制退出</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mark </category>
          
          <category> 快捷键 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodemailer</title>
      <link href="2020/02/04/%E5%89%8D%E7%AB%AF/node/Nodemailer/"/>
      <url>2020/02/04/%E5%89%8D%E7%AB%AF/node/Nodemailer/</url>
      
        <content type="html"><![CDATA[<h1 id="nodemailer"><a href="#nodemailer" class="headerlink" title="nodemailer"></a>nodemailer</h1><ol><li>npm install nodemailer</li><li>开启邮箱POP3/SMTP服务 各个邮箱开启方式不同</li><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mail.js</span></span><br><span class="line"><span class="keyword">const</span> nodemailer = <span class="built_in">require</span>(<span class="string">&#x27;nodemailer&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建发送邮件的请求对象</span></span><br><span class="line"><span class="keyword">let</span> transporter = nodemailer.createTransport(&#123;</span><br><span class="line">    host: <span class="string">&#x27;smtp.qq.com&#x27;</span>,    <span class="comment">//发送端邮箱类型（QQ邮箱）</span></span><br><span class="line">    port: <span class="number">465</span>,      <span class="comment">//端口号</span></span><br><span class="line">    secure: <span class="literal">true</span>, </span><br><span class="line">    auth: &#123;</span><br><span class="line">        user: <span class="string">&#x27;liulingyue@vip.qq.com&#x27;</span>, <span class="comment">// 发送方的邮箱地址（自己的）</span></span><br><span class="line">        pass: <span class="string">&#x27;*****&#x27;</span> <span class="comment">// mtp 验证码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params">mail, code</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> mailObj = &#123;</span><br><span class="line">        <span class="keyword">from</span>: <span class="string">&#x27;&quot;611的冰箱&quot; &lt;liulingyue@vip.qq.com&gt;&#x27;</span>,   <span class="comment">// 邮件名称和发件人邮箱地址</span></span><br><span class="line">        to: mail,   <span class="comment">//收件人邮箱地址（这里的mail是封装后方法的参数，代表收件人的邮箱地址）</span></span><br><span class="line">        subject: <span class="string">&#x27;验证码&#x27;</span>,   <span class="comment">//邮件标题</span></span><br><span class="line">        text: <span class="string">&#x27;您的验证码是：&#x27;</span>+ code, <span class="comment">// 邮件内容，这里的code是这个方法的参数，代表要发送的验证码信息，这里的内容可以自定义</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 发送邮件(封装成一个promise对象)，方便后面调用该方法</span></span><br><span class="line">    <span class="comment">//这部分代码直接复制粘贴即可，但是注意发送邮件的请求对象名称要和上面声明的名称保持一致（这里我的名称是transporter）</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">        transporter.sendMail(mailObj, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                reject()    <span class="comment">//出错</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                resolve()    <span class="comment">//成功</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123; send &#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//send.js</span></span><br><span class="line"><span class="keyword">var</span> Mail = <span class="built_in">require</span>(<span class="string">&#x27;./mail&#x27;</span>)  </span><br><span class="line"></span><br><span class="line">Mail.send(<span class="string">&#x27;460605674@qq.com&#x27;</span>, <span class="number">342135</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;QQ&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;host&quot;</span>: <span class="string">&quot;smtp.qq.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;port&quot;</span>: <span class="number">465</span>,</span><br><span class="line">        <span class="string">&quot;secure&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="string">&quot;126&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;host&quot;</span>: <span class="string">&quot;smtp.126.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;port&quot;</span>: <span class="number">465</span>,</span><br><span class="line">        <span class="string">&quot;secure&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;163&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;host&quot;</span>: <span class="string">&quot;smtp.163.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;port&quot;</span>: <span class="number">465</span>,</span><br><span class="line">        <span class="string">&quot;secure&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="随机6位验证码"><a href="#随机6位验证码" class="headerlink" title="随机6位验证码"></a>随机6位验证码</h1><p>我一开始有几个疑问?</p><ul><li><p>为什么验证码要6位,我只知道6比4安全.<br>知乎:人机交互理论中提到人的短期记忆容量为 7±2, 数字过多则记忆困难；数字太少的话安全性会不足。因此6是一个非常合适的数。</p></li><li><p>无数个人请求验证码,验证码重复无怎么办?<br>手机号,和邮箱不会重复, 哈哈哈 傻逼了我.</p></li><li><p>附上一些能用的东西</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">生成<span class="number">6</span>位验证码: </span><br><span class="line"> <span class="keyword">let</span> code = (<span class="string">&quot;000000&quot;</span> + <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">999999</span>)).slice(<span class="number">-6</span>);</span><br><span class="line"></span><br><span class="line">正则验证手机号: </span><br><span class="line"><span class="keyword">let</span> reg = <span class="regexp">/^(13[0-9]|14[01456879]|15[0-3,5-9]|16[2567]|17[0-8]|18[0-9]|19[0-3,5-9])\d&#123;8&#125;$/</span></span><br><span class="line"></span><br><span class="line">隐藏手机号中间字段:</span><br><span class="line"><span class="keyword">const</span> hiddenReg = <span class="regexp">/^\d&#123;3&#125;(?&lt;hidden&gt;\d&#123;4&#125;)\d&#123;4&#125;$/</span>;</span><br><span class="line">phoneNumber.replace(phoneNumber.match(hiddenReg).groups.hidden, <span class="string">&quot;****&quot;</span>);</span><br><span class="line">  </span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js爬虫 初体验</title>
      <link href="2020/02/04/%E5%89%8D%E7%AB%AF/node/js%E7%88%AC%E8%99%AB%20%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>2020/02/04/%E5%89%8D%E7%AB%AF/node/js%E7%88%AC%E8%99%AB%20%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="js爬虫-初体验-帮朋友完成他的作业"><a href="#js爬虫-初体验-帮朋友完成他的作业" class="headerlink" title="js爬虫 初体验 ( 帮朋友完成他的作业 )"></a>js爬虫 初体验 ( 帮朋友完成他的作业 )</h1><p><strong><em>一个不好好搞设计,没事闲着学python的的朋友</em></strong></p><p>妈的 帮她 搞完了 还没用上 !! 白学了一个小下午.</p><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><ul><li><p>要爬的网站 <a href="https://www.immd.gov.hk/hkt/stat_20201102.html">香港出入境人次</a></p></li><li><p>node 插件 <code> axios</code>  <code> cheerio(类似jq 的工具)</code> <code>dayjs</code> <code>mongoose</code></p></li><li><p>再找用什么爬东西的时候发现个 好用的 <code>Puppeteer</code> 有时间试试.</p></li><li><p>网站挺简单 没有反爬虫 </p></li></ul><h2 id="爬"><a href="#爬" class="headerlink" title="爬"></a>爬</h2><h3 id="连接数据库-创建schema"><a href="#连接数据库-创建schema" class="headerlink" title="连接数据库 创建schema"></a>连接数据库 创建schema</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//db.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">()=&gt;</span>&#123;</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line">mongoose.connect(<span class="string">&quot;mongodb://hongkang:123456@localhost:27017/hongkang&quot;</span>,&#123;</span><br><span class="line">useNewUrlParser:<span class="literal">true</span>,</span><br><span class="line">useUnifiedTopology:<span class="literal">true</span>,</span><br><span class="line">useCreateIndex:<span class="literal">true</span></span><br><span class="line">&#125;).then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;本地  连接数据库成功&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">.catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;连接数据库失败&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> schema = <span class="keyword">new</span> mongoose.Schema(&#123;</span><br><span class="line">  positionData: &#123;</span><br><span class="line">    type: <span class="built_in">Object</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  date: &#123;</span><br><span class="line">    type: <span class="built_in">String</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">module</span>.exports = mongoose.model(<span class="string">&quot;hongkang&quot;</span>, schema);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="先爬一天的数据试试"><a href="#先爬一天的数据试试" class="headerlink" title="先爬一天的数据试试"></a>先爬一天的数据试试</h3><p>一个小demo  写的不太工整哈哈</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getWebData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> title ,tableTitel= <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> catergory,positionData = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.get(<span class="string">`https://www.immd.gov.hk/hkt/stat_<span class="subst">$&#123;cur&#125;</span>.html`</span>);</span><br><span class="line">    <span class="keyword">const</span> $html = res.data;</span><br><span class="line">    <span class="keyword">const</span> $ = cheerio.load($html);</span><br><span class="line">    $(<span class="string">&quot;h1&quot;</span>).each(<span class="function">(<span class="params">i, el</span>) =&gt;</span> &#123;</span><br><span class="line">      title = el.children[<span class="number">0</span>].data;</span><br><span class="line">   </span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;table&quot;</span>).each(<span class="function">(<span class="params">i, el</span>) =&gt;</span> &#123;</span><br><span class="line">      tableTitel = el.attribs.title;</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;tr&quot;</span>).text(<span class="function">(<span class="params">i, el</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> str = el;</span><br><span class="line">      <span class="keyword">let</span> arg = <span class="built_in">JSON</span>.stringify(str)</span><br><span class="line">        .replace(<span class="regexp">/\&quot;/g</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        .replace(<span class="regexp">/\s/g</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        .split(<span class="string">&quot;\\n&quot;</span>)</span><br><span class="line">        .splice(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//提取分类catergory</span></span><br><span class="line">      <span class="keyword">if</span> (i &lt; <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">4</span>) &#123;</span><br><span class="line">        catergory = arg;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> enter = &#123;&#125;;</span><br><span class="line">        <span class="keyword">let</span> out = &#123;&#125;;</span><br><span class="line">        arg.forEach(<span class="function">(<span class="params">el, i</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; i &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">            enter[<span class="string">`<span class="subst">$&#123;catergory[i - <span class="number">1</span>]&#125;</span>`</span>] = arg[i];</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; i &lt;= <span class="number">8</span>) &#123;</span><br><span class="line">            out[<span class="string">`<span class="subst">$&#123;catergory[i - <span class="number">1</span>]&#125;</span>`</span>] = arg[i];</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        positionData[arg[<span class="number">0</span>]] = &#123;</span><br><span class="line">          enter,</span><br><span class="line">          out,</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    hongkang.create(&#123; positionData, <span class="attr">date</span>: cur &#125;); <span class="comment">//mongoose 增</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`已经获取<span class="subst">$&#123;cur&#125;</span>的数据`</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;error: &quot;</span>, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="爬所有的"><a href="#爬所有的" class="headerlink" title="爬所有的"></a>爬所有的</h3><p>这个网站其实数据是 1月24   这里用了day.js(moment 的小儿子 )</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> startDate =  <span class="string">&quot;2020-01-24&quot;</span></span><br><span class="line"><span class="keyword">var</span>  step =  <span class="number">0</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calDate</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> cur = dayjs(startDate)</span><br><span class="line">      .add(step, <span class="string">&quot;day&quot;</span>)</span><br><span class="line">      .format(<span class="string">&quot;YYYY/MM/DD&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cur</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getWebData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//... //////</span></span><br><span class="line"> <span class="keyword">let</span> cur =  calDate()</span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">      cur ==</span><br><span class="line">      dayjs()</span><br><span class="line">        .format(<span class="string">&quot;YYYY/MM/DD&quot;</span>)</span><br><span class="line">        .replace(<span class="regexp">/\//g</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="comment">//......</span></span><br><span class="line">  step++ </span><br><span class="line">  getWebData()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/Users/liulingyue/Desktop/image-20201202172703453.png" alt="image-20201202172703453" style="zoom:50%;" /><img src="/Users/liulingyue/Desktop/image-20201202172739655.png" alt="image-20201202172739655" style="zoom:50%;" /><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p>没啥说的 直接连数据库 写个接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line">app.use(cors());</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line">mongoose</span><br><span class="line">  .connect(<span class="string">&quot;mongodb://hongkang:123456@localhost:27017/hongkang&quot;</span>, &#123;</span><br><span class="line">    useNewUrlParser: <span class="literal">true</span>,</span><br><span class="line">    useUnifiedTopology: <span class="literal">true</span>,</span><br><span class="line">    useCreateIndex: <span class="literal">true</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;本地  连接数据库成功&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;连接数据库失败&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="comment">//------</span></span><br><span class="line">app.listen(<span class="number">3000</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;http://localhost:3000&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="comment">//------ 引入model</span></span><br><span class="line"><span class="keyword">const</span> model = <span class="built_in">require</span>(<span class="string">&quot;./models/hangkong&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//------ paramas 是时间 YYYYMMDD 20201010</span></span><br><span class="line">app.get(<span class="string">&quot;/api/:data&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> str = req.params.data;</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> model.find(&#123; <span class="attr">date</span>: str &#125;);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;data: &quot;</span>, data.length);</span><br><span class="line">  <span class="keyword">if</span> (data.length == <span class="number">0</span>) &#123;</span><br><span class="line">    res.send(<span class="number">200</span>, &#123; <span class="attr">message</span>: <span class="string">&quot;对不起数据还没有更新&quot;</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.send(<span class="number">200</span>, data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><ul><li><p><code>antd table datePicker</code></p></li><li><p>v-charts</p></li><li><p>toast (notify)</p></li></ul><p>有点丑,我都有点接受不了,但是朋友着急要 . 我还得先学习怎么爬哈哈 赶工!!</p><p><img src="/Users/liulingyue/Desktop/image-20201202173642251.png" alt="image-20201202173642251"></p><img src="/Users/liulingyue/Desktop/image-20201202173839733.png" alt="image-20201202173839733"  /><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>练个手,毕竟没用js爬过东西! </p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github action</title>
      <link href="2020/02/04/%E5%89%8D%E7%AB%AF/CI/CD/github_action/"/>
      <url>2020/02/04/%E5%89%8D%E7%AB%AF/CI/CD/github_action/</url>
      
        <content type="html"><![CDATA[<h2 id="github-action"><a href="#github-action" class="headerlink" title="github action"></a>github action</h2><p>​    之前用过不少类似工具 travis,circle,coding,daocloud(docker).但是吧 还是觉得github action要好用一些.</p><ol><li><p>语言</p><p><code>yaml</code><br>个人不太喜欢<code>jekins</code><br>注意下格式就行,前端也没啥写的.<br>最多就<br>(push后build,tar -zcvf, ssh  scp ,cd,rm ,mkdir,npm install, pm2 )</p></li><li><p>插件 </p><p>有很多开源的action , 用的时候直接 <code>use</code>: <code>插件名</code></p><p>就很好用,就很懒!</p></li><li><p>方便管理</p><p>代码和 CI/CD 在一个平台真的很好管理, 再也不用切来切去,  </p></li></ol><h2 id="最近用的action插件"><a href="#最近用的action插件" class="headerlink" title="最近用的action插件"></a>最近用的action插件</h2><p>基本用法可以看看 : <a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">阮一峰的github actions 教程</a></p><p>我只记录下最近用的action插件.</p><p>yaml 一定要注意格式  空格 和 tab</p><ol><li><p><a href="https://github.com/marketplace/actions/checkout">actions/checkout@v2</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">checkout</span></span><br><span class="line"><span class="attr">on:</span> <span class="string">push</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish:</span></span><br><span class="line"> <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"> <span class="attr">steps:</span></span><br><span class="line">   <span class="bullet">-</span></span><br><span class="line">     <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">     <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">     </span><br><span class="line"><span class="comment">#这样你就能获取到 repo  的文件</span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/marketplace/actions/setup-node-js-environment">setup-node</a>  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#basic</span></span><br><span class="line"><span class="attr">steps:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">node-version:</span> <span class="string">&#x27;12&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">test</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#Publish to npmjs and GPR with npm/yarn:</span></span><br><span class="line"><span class="attr">steps:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">node-version:</span> <span class="string">&#x27;10.x&#x27;</span></span><br><span class="line">    <span class="attr">registry-url:</span> <span class="string">&#x27;https://registry.npmjs.org&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">publish</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">NODE_AUTH_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.NPM_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">registry-url:</span> <span class="string">&#x27;https://npm.pkg.github.com&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">publish</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">NODE_AUTH_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p><a href="https://github.com/marketplace/actions/github-pages">Github pages</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">action</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> <span class="string">push</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="number">10</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">        </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ls</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">ls</span></span><br><span class="line">      <span class="bullet">-</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">if:</span> <span class="string">success()</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">crazy-max/ghaction-github-pages@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">target_branch:</span> <span class="string">gh-pages</span></span><br><span class="line">          <span class="attr">build_dir:</span> <span class="string">dist</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">GITHUB_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PAGETOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">   </span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p><a href="https://github.com/marketplace/actions/ssh-deploy">ssh deploy</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">npm</span> <span class="string">dependencies</span></span><br><span class="line">     <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Run</span> <span class="string">build</span> <span class="string">task</span></span><br><span class="line">     <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span> <span class="string">--if-present</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">Server</span></span><br><span class="line">     <span class="attr">uses:</span> <span class="string">easingthemes/ssh-deploy@v2.1.5</span></span><br><span class="line">     <span class="attr">env:</span></span><br><span class="line">         <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SERVER_SSH_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">         <span class="attr">ARGS:</span> <span class="string">&quot;-rltgoDzvO --delete&quot;</span></span><br><span class="line">         <span class="attr">SOURCE:</span> <span class="string">&quot;dist/&quot;</span></span><br><span class="line">         <span class="attr">REMOTE_HOST:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">         <span class="attr">REMOTE_USER:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_USER</span> <span class="string">&#125;&#125;</span></span><br><span class="line">         <span class="attr">TARGET:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.REMOTE_TARGET</span> <span class="string">&#125;&#125;</span></span><br><span class="line">         </span><br><span class="line"><span class="comment">#还有更多参数 端口等        </span></span><br></pre></td></tr></table></figure></li></ol><h2 id="action-badge"><a href="#action-badge" class="headerlink" title="action badge"></a>action badge</h2><h4 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/adding-a-workflow-status-badge">官方文档</a></h4><p><code>https://github.com/&lt;OWNER&gt;/&lt;REPOSITORY&gt;/workflows/&lt;WORKFLOW_FILE_PATH&gt;/badge.svg</code></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">something</span>](<span class="link">https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg</span>)</span><br></pre></td></tr></table></figure><p>链接形式:<a href="https://github.com/genjiXYZ/vue-parallax-banner"><img src="https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg" alt="something"></a></p><p>图片形式:<img src="https://github.com/genjiXYZ/vue-parallax-banner/workflows/npm%20publish%20by%20action/badge.svg" alt="something"></p><p>这个是动态的,根据你action执行的情况,显示不同状态.</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> github action </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github webhook</title>
      <link href="2020/02/03/%E5%89%8D%E7%AB%AF/CI/CD/github_webhooks/"/>
      <url>2020/02/03/%E5%89%8D%E7%AB%AF/CI/CD/github_webhooks/</url>
      
        <content type="html"><![CDATA[<h1 id="Web-hooks"><a href="#Web-hooks" class="headerlink" title="Web hooks"></a>Web hooks</h1><h2 id="什么是web-hooks"><a href="#什么是web-hooks" class="headerlink" title="什么是web hooks"></a>什么是web hooks</h2><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930151443628.png" alt="image-20200930151443628"></p><p>只不过 install bulid 等都是在你的服务器运行.</p><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>我就用宝塔面板自带的了.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930154309950.png" alt="image-20200930154309950"></p><p>填写 <code>任意名称</code>  和你要<code>执行的脚本</code>  ,提交后会给你 带有秘钥的 链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">比如 </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /www/wwwroot/hello/</span><br><span class="line">git <span class="built_in">clone</span> link</span><br><span class="line"><span class="built_in">cd</span> /文件夹</span><br><span class="line">npm install </span><br><span class="line">npm run build  </span><br><span class="line"><span class="built_in">cd</span> /文件夹</span><br><span class="line">pm2 start app.js  </span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>使用 postman  post 一下 ,</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930154106968.png" alt="image-20200930154106968"></p><p><img src="https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-19-40%401x.png" alt="image-20200930154359603"></p><p>可以看到调用次数增加,执行的日志也有记录 .</p><h2 id="github-setting"><a href="#github-setting" class="headerlink" title="github setting"></a>github setting</h2><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930154552727.png" alt="image-20200930154552727"></p><p>你可以直接填写带有秘钥的链接,也可以分开写.</p><p>over</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI/CD </tag>
            
            <tag> webhook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Travis CI/CD(二) 部署到服务器</title>
      <link href="2020/02/02/%E5%89%8D%E7%AB%AF/CI/CD/travis_server/"/>
      <url>2020/02/02/%E5%89%8D%E7%AB%AF/CI/CD/travis_server/</url>
      
        <content type="html"><![CDATA[<p><img src="https://picgo.genji.xyz/blog/posts/TravisC.png" alt="img"></p><h1 id="Travis-部署到服务器"><a href="#Travis-部署到服务器" class="headerlink" title="Travis 部署到服务器"></a>Travis 部署到服务器</h1><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><h3 id="确保你电脑有-ssh私钥"><a href="#确保你电脑有-ssh私钥" class="headerlink" title="确保你电脑有 ssh私钥"></a>确保你电脑有 ssh私钥</h3><p>没有的话</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;something you like&quot;</span> </span><br></pre></td></tr></table></figure><h3 id="将公钥copy到服务器"><a href="#将公钥copy到服务器" class="headerlink" title="将公钥copy到服务器"></a>将公钥copy到服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id root@服务器IP</span><br><span class="line"><span class="comment">## sh-copy-id root@110.110.112.11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 会在复制你电脑 public key 到 服务器 ~/.ssh/authorized_keys </span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 正常是.ssh 文件夹 700权限</span></span><br><span class="line"><span class="comment">## authorized_keys文件600权限</span></span><br><span class="line"><span class="comment">## chmod 600 authorized_keys </span></span><br><span class="line"><span class="comment">## chmod 700 -R .ssh</span></span><br></pre></td></tr></table></figure><h2 id="travis-环境变量"><a href="#travis-环境变量" class="headerlink" title="travis 环境变量"></a>travis 环境变量</h2><p>用到了 travis CLI 工具加密下你本机的 私钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">gem install travis</span><br><span class="line"></span><br><span class="line"><span class="comment">## 我推荐使用homebrew </span></span><br><span class="line"><span class="comment">## brew install travis</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">travis login --org</span><br><span class="line">travis login --pro</span><br><span class="line">travis login --com</span><br><span class="line"></span><br><span class="line">具体登录哪个,看你使用的哪个</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">❯ travis login --org</span><br><span class="line"></span><br><span class="line">输入github  账号 密码</span><br></pre></td></tr></table></figure><p>在travis 面板中<code>监听</code>你的项目   (github 已经存在的 repo)</p><p>在本地<code>项目目录</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## travis encrypt-file ssh_key --add</span></span><br><span class="line"></span><br><span class="line">travis encrypt-file ~/.ssh/id_rsa  --add</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1.自动在travis.yml 生成一段 配置脚本 </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">before_install:</span><br><span class="line">- openssl aes-256-cbc -K <span class="variable">$encrypted_024e66b057a6_key</span> -iv <span class="variable">$encrypted_024e66b057a6_iv</span></span><br><span class="line">  -<span class="keyword">in</span> id_rsa.enc -out ~\/.ssh/id_rsa -d</span><br><span class="line"></span><br><span class="line"><span class="comment">##别忘了 把 \ 删除       ~/.ssh/id_rsa -d</span></span><br><span class="line"></span><br><span class="line">2.自动在travis 环境变量中添加</span><br><span class="line"></span><br><span class="line">3.自动 生成 id_rsa.enc 文加密文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/Users/liulingyue/Desktop/hexo__butterfly/source/_posts/image-20200929025050217.png" alt="image-20200929025050217"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">通用版本</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在当前目录生成密钥</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&#x27;build@travis-ci.org&#x27;</span> -f ./deploy_rsa</span><br><span class="line"><span class="comment"># 使用Travis加密</span></span><br><span class="line">travis encrypt-file deploy_rsa --add</span><br><span class="line"><span class="comment"># 添加信任关系</span></span><br><span class="line">ssh-copy-id -i deploy_rsa.pub &lt;ssh-user&gt;@&lt;deploy-host&gt;</span><br><span class="line"><span class="comment"># 删除敏感文件</span></span><br><span class="line">rm -f deploy_rsa deploy_rsa.pub</span><br><span class="line"><span class="comment"># 将修改添加到git中</span></span><br><span class="line">git add deploy_rsa.enc .travis.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## </span></span><br><span class="line">-t <span class="built_in">type</span> -b bit -C comment -f file</span><br><span class="line"></span><br><span class="line">-i   identity_file</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="travis-配置文件"><a href="#travis-配置文件" class="headerlink" title="travis 配置文件"></a>travis 配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">12</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">npm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 这里注意 文件不同 配置不同(yarn-lock文件有影响 需要添加 -yarn )</span></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">yarn</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">## 触发分支</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加known_hosts    ~/.ssh/known_hosts</span></span><br><span class="line"><span class="comment">## ip 是你服务器的IP地址   在环境变量中手动添加</span></span><br><span class="line"><span class="attr">addons:</span></span><br><span class="line">  <span class="attr">ssh_known_hosts:</span> <span class="string">$&#123;IP&#125;</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">before_install:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">openssl</span> <span class="string">aes-256-cbc</span> <span class="string">-K</span> <span class="string">$encrypted_024e66b057a6_key</span> <span class="string">-iv</span> <span class="string">$encrypted_024e66b057a6_iv</span></span><br><span class="line">    <span class="string">-in</span> <span class="string">id_rsa.enc</span> <span class="string">-out</span> <span class="string">~/.ssh/id_rsa</span> <span class="string">-d</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ls</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">tar</span> <span class="string">-zcvf</span> <span class="string">hexo.tar.bz2</span> <span class="string">./public</span> <span class="comment"># 压缩</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">scp</span> <span class="string">-o</span> <span class="string">stricthostkeychecking=no</span> <span class="string">-r</span> <span class="string">./hexo.tar.bz2</span> <span class="string">root@$&#123;IP&#125;:/www/wwwroot/blog.genji.xyz</span> <span class="comment"># scp复制</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ssh</span> <span class="string">root@$&#123;IP&#125;</span> <span class="string">&#x27;cd /www/wwwroot/blog.genji.xyz &amp;&amp; tar -zxvf hexo.tar.bz2 &#x27;</span> <span class="comment"># 解压</span></span><br><span class="line">  <span class="comment"># - cd public</span></span><br><span class="line">  <span class="comment"># - echo &#x27;blog.genji.xyz&#x27; &gt; CNAME</span></span><br><span class="line"></span><br><span class="line"><span class="attr">after_success:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">do</span> <span class="string">something</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">## 部署到服务器不需要了 部署到github page可以这么设置  token 就是</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">pages</span></span><br><span class="line">  <span class="attr">skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github-token:</span> <span class="string">&quot;$GH_TOKEN&quot;</span></span><br><span class="line">  <span class="attr">keep-history:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">on:</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">local-dir:</span> <span class="string">public</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><ol><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh root@<span class="variable">$&#123;IP&#125;</span> <span class="string">&#x27;cd /www/wwwroot/blog.genji.xyz&#x27;</span></span><br><span class="line">219The authenticity of host <span class="string">&#x27;**.**.**.147 &#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">220ECDSA key fingerprint is SHA256:0nYNmoIDAHBbvDCtGI//PiDCRbD3twO9wQftM8abBEg.</span></span><br><span class="line"><span class="string">221Are you sure you want to continue connecting (yes/no)? </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-o StrictHostKeyChecking=no</span><br><span class="line"></span><br><span class="line">scp 或者 ssh 要添加 否则第一次连接时依然会要求你确认</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><pre><code class="bash"> ssh -o StrictHostKeyChecking=no root@$&#123;IP&#125; &#39;cd /www/wwwroot/blog.genji.xyz&#39;Warning: Permanently added &#39;ip&#39; (ECDSA) to the list of known hosts.root@ip&#39;s password: @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Permissions 0664 for &#39;/home/travis/.ssh/id_rsa&#39; are too open.It is required that your private key files are NOT accessible by others.This private key will be ignored.Load key &quot;/home/travis/.ssh/id_rsa&quot;: bad permissions</code></pre></li></ol><p>   权限问题 Permissions 0664</p><p>   before_install:<br>     - openssl aes-256-cbc -K $encrypted_024e66b057a6_key -iv $encrypted_024e66b057a6_iv<br>     -in id_rsa.enc -out ~/.ssh/id_rsa -d<br>     - chmod 600 ~/.ssh/id_rsa</p><pre><code> 改成600</code></pre><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Travis </tag>
            
            <tag> ssh </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Travis CI/CD(一) github pages</title>
      <link href="2020/02/01/%E5%89%8D%E7%AB%AF/CI/CD/travis_pages/"/>
      <url>2020/02/01/%E5%89%8D%E7%AB%AF/CI/CD/travis_pages/</url>
      
        <content type="html"><![CDATA[<h1 id="Travis-CI-CD-构建-github-pages-篇"><a href="#Travis-CI-CD-构建-github-pages-篇" class="headerlink" title="Travis CI/CD 构建(github pages 篇)"></a>Travis CI/CD 构建(github pages 篇)</h1><h3 id="在-github-action-没有正式发布前-就一直用-travis-circle-现在正准备向官方爸爸靠拢-毕竟github-action-拥有-2核-7GB-和-比较-的-活跃生态-别人写好的-actions"><a href="#在-github-action-没有正式发布前-就一直用-travis-circle-现在正准备向官方爸爸靠拢-毕竟github-action-拥有-2核-7GB-和-比较-的-活跃生态-别人写好的-actions" class="headerlink" title="在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)"></a>在 github  action  没有正式发布前 就一直用  travis /circle   , 现在正准备向官方爸爸靠拢 , 毕竟github action  拥有  2核 7GB  , 和 比较 的 活跃生态( 别人写好的 actions)</h3><hr><h2 id="什么是-Travis"><a href="#什么是-Travis" class="headerlink" title="什么是 Travis?"></a>什么是 Travis?</h2><p>说人话– 就是帮你 build  test  deploy</p><h2 id="价格-配置-限制"><a href="#价格-配置-限制" class="headerlink" title="价格 配置 限制"></a>价格 配置 限制</h2><p><del>travis 有两个网站 travis.com travis.org</del></p><p><del>travis.org  — 开源仓库 免费使用</del></p><p><del>travis.com — 主要面向 私有仓库</del></p><p>现在只有 <code>travis.com</code> 可以免费试用 但是有点条件  </p><p><img src="http://pic.genji.xyz/test/image-20200627163900305.png" alt="image-20200627163900305"></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><ol><li><strong>travis 初步设置</strong></li></ol><p><img src="http://pic.genji.xyz/test/image-20200627171223899.png" alt="image-20200627171223899"></p><center>1 设置     2同步 github 仓库     3选择你要使用travis 的仓库</center><ol start="2"><li><strong>GitHub 这是私人令牌( 获得部署到 gh-pages 权限)</strong></li></ol><p><img src="http://pic.genji.xyz/test/image-20200627172033567.png" alt="image-20200627172033567"></p><center>1    设置 2     私人令牌 3 创建新的令牌</center><p><img src="http://pic.genji.xyz/test/image-20200627172351276.png" alt="image-20200627172351276"></p><center>设置令牌的权限 有控制仓库权限即可,如要设置其他权限自行设置. <a traget="_blank" href="https://docs.travis-ci.com/user/deployment/pages/#further-configuration">官方文档</a>有进一步配置 </center><p><img src="http://pic.genji.xyz/test/image-20200627175338324.png" alt="image-20200627175338324"></p><center>复制你的令牌,然后添加到Travis 的环境变量中</center><p><img src="http://pic.genji.xyz/test/image-20200627175709667.png" alt="image-20200627175709667"></p><center>1在设置中    2创建变量名    3粘贴令牌</center>        <ol start="3"><li><strong>在项目根目录 创建  <code>.travis.yml</code>  文件</strong></li></ol><img src="http://pic.genji.xyz/test/image-20200627174914491.png" alt="image-20200627174914491" style="zoom: 50%;" />   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">yarn</span> <span class="string">install</span>  </span><br><span class="line">  <span class="bullet">-</span> <span class="string">yarn</span> <span class="string">build</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">pages</span></span><br><span class="line">  <span class="attr">skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github-token:</span> <span class="string">&quot;$GH_TOKEN&quot;</span></span><br><span class="line">  <span class="attr">keep-history:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">on:</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">local-dir:</span> <span class="string">dist</span></span><br></pre></td></tr></table></figure><hr><p>   <strong>然后重新 push  到仓库 即可 触发travis</strong> </p><p><img src="http://pic.genji.xyz/test/image-20200627180239377.png" alt="image-20200627180239377"></p><p><img src="http://pic.genji.xyz/test/image-20200627180524840.png" alt="image-20200627180524840"></p><p><strong>虽然成功了 ,但是应该会有个问题,就是 build 路径问题  ,设置下 <code>vue.config.js</code> 即可.</strong></p><p><strong>路径问题 太常见了, 去控制台看看 js css 文件, 改下路径 测试下即可.</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue.config.js</span></span><br><span class="line"><span class="built_in">module</span>.exports=&#123;</span><br><span class="line">publicPath:<span class="string">&quot;./&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://pic.genji.xyz/test/image-20200627181721917.png" alt="image-20200627181721917"></p><p><img src="http://pic.genji.xyz/test/image-20200627181814545.png" alt="image-20200627181814545"></p><p><strong>这里就是我们的 静态网站了!  以后只要 改代码 push  ,即可自动bulid并且push到gh-pages分支.</strong></p><h2 id="CNAME"><a href="#CNAME" class="headerlink" title="CNAME"></a><strong>CNAME</strong></h2><p><strong>配置CNAME  这样你就可以用自己的域名访问了.</strong></p><p><img src="http://pic.genji.xyz/test/image-20200627182429486.png" alt="image-20200627182429486"></p><p><strong>在这里填好自己的域名,然后去dns 服务商去添加解析记录</strong></p><p><img src="http://pic.genji.xyz/test/image-20200627182734908.png" alt="image-20200627182734908"></p><p><strong><user>  你github  叫什么 就填什么 (全部小写)</strong></p><p><strong>dns  刷新需要点时间  等个5分钟 基本上就好了</strong> </p><p><strong>你可以ping  你的域名   看看 ip  有没有指向 github.io 的ip</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">❯ ping github.io</span><br><span class="line">PING github.io (185.199.110.153): 56 data bytes</span><br><span class="line">64 bytes from 185.199.110.153: icmp_seq&#x3D;0 ttl&#x3D;53 time&#x3D;71.172 ms</span><br><span class="line">64 bytes from 185.199.110.153: icmp_seq&#x3D;1 ttl&#x3D;53 time&#x3D;71.182 ms</span><br><span class="line">64 bytes from 185.199.110.153: icmp_seq&#x3D;2 ttl&#x3D;53 time&#x3D;70.903 ms</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>更改cname 后 用你自己的域名打开,可能会一开始布局乱的现象,</strong></p><p><strong>说人话 : 用gihub 的域名  需要改<code>vue.config.js</code> 用自己的域名 不需要改</strong></p><h4 id="Pages-篇完"><a href="#Pages-篇完" class="headerlink" title="Pages 篇完"></a>Pages 篇完</h4><h4 id="有那里写的不对-或者有什么问题了-请在下面留言-留下你的邮箱-我会及时回复"><a href="#有那里写的不对-或者有什么问题了-请在下面留言-留下你的邮箱-我会及时回复" class="headerlink" title="有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)"></a>有那里写的不对 或者有什么问题了,请在下面留言(留下你的邮箱,我会及时回复)</h4><hr>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CI/CD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Travis </tag>
            
            <tag> github-pages </tag>
            
            <tag> CNAME </tag>
            
            <tag> CI/CD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 命令</title>
      <link href="2020/01/20/Mark/Docker/docker%E5%91%BD%E4%BB%A4/"/>
      <url>2020/01/20/Mark/Docker/docker%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-命令"><a href="#docker-命令" class="headerlink" title="docker 命令"></a>docker 命令</h1><div class="note info flat"><p>用到什么之后再添加.</p></div><h2 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker pull  name [:tag|@digest]</span><br><span class="line">docker pull debian</span><br><span class="line">docker pull debian:latest</span><br><span class="line">docker pull gitea/gitea:latest</span><br><span class="line">docker pull ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2</span><br></pre></td></tr></table></figure><h2 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d   --name=<span class="string">&quot;something&quot;</span> -p 90:80  -v /var/lib/gitea:/data gitea/gitea:latest --restart=always</span><br><span class="line"></span><br><span class="line">-d 后台</span><br><span class="line">--name 命名</span><br><span class="line">-p 端口映射 前内部 后外部</span><br><span class="line">-v 共享卷, 也可以理解挂载到相应目录 前外部 后内部</span><br><span class="line">--restart 重启时候 自动运行</span><br></pre></td></tr></table></figure><h2 id="docker-查看"><a href="#docker-查看" class="headerlink" title="docker 查看"></a>docker 查看</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="docker-命名"><a href="#docker-命名" class="headerlink" title="docker 命名"></a>docker 命名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rename oldName newName      (container) </span><br><span class="line">dokcer rename 容器ID name:tag (images)</span><br></pre></td></tr></table></figure><h2 id="docker-stop-start-restart"><a href="#docker-stop-start-restart" class="headerlink" title="docker stop/start/restart"></a>docker stop/start/restart</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop/start/restart id/ name</span><br></pre></td></tr></table></figure><h2 id="进入docker-容器"><a href="#进入docker-容器" class="headerlink" title="进入docker 容器"></a>进入docker 容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it id/name /bin/bash</span><br></pre></td></tr></table></figure><h2 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi imageID/REPOSITORY:TAG</span><br></pre></td></tr></table></figure><h2 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker rm CONTAINERID/name</span><br><span class="line"></span><br><span class="line">-f :通过 SIGKILL 信号强制删除一个运行中的容器。</span><br><span class="line"></span><br><span class="line">-l :移除容器间的网络连接，而非容器本身。</span><br><span class="line"></span><br><span class="line">-v :删除与容器关联的卷。</span><br></pre></td></tr></table></figure><h2 id="docker-导出"><a href="#docker-导出" class="headerlink" title="docker 导出"></a>docker 导出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker save name &gt;/root/name.tar</span><br><span class="line">docker load &lt;name.tar</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">export</span> 98ca36&gt; ubuntu.tar</span><br><span class="line">docker import</span><br></pre></td></tr></table></figure><ol><li>docker save保存的是镜像（image），docker export保存的是容器（container）；</li><li>docker load用来载入镜像包，docker import用来载入容器包，但两者都会恢复为镜像；</li><li>docker load不能对载入的镜像重命名，而docker import可以为镜像指定新名称。</li></ol><h2 id="docker-cp"><a href="#docker-cp" class="headerlink" title="docker cp"></a>docker cp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp 主机目录到/www/ddd 容器/www</span><br><span class="line">docker cp /www/ddd 96f7f14e99ab:/www</span><br><span class="line"></span><br><span class="line">cp 容器目录www  到主机tmp</span><br><span class="line">docker cp  96f7f14e99ab:/www /tmp/</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mark </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光猫桥接</title>
      <link href="2020/01/07/Diy/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
      <url>2020/01/07/Diy/%E8%B7%AF%E7%94%B1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="光猫修改为桥接模式"><a href="#光猫修改为桥接模式" class="headerlink" title="光猫修改为桥接模式"></a>光猫修改为桥接模式</h2><blockquote><p><code>光猫</code> 别让他干 <code>路由器</code> <code>交换机</code>的活.<br>各种智能家居设备加起来一共有 15 个.再加上4-5个朋友来!<code>断连</code>,<code>卡顿</code>不可避免</p></blockquote><h3 id="1-找电信小哥给你改"><a href="#1-找电信小哥给你改" class="headerlink" title="1. 找电信小哥给你改!"></a>1. 找电信小哥给你改!</h3><p>他在远端 用手机就直接改了!<br>虽然很方便,之前用了半年多也没有啥问题,但是就觉得不可控.</p><h3 id="2-登录光猫管理员账号密码"><a href="#2-登录光猫管理员账号密码" class="headerlink" title="2.登录光猫管理员账号密码"></a>2.登录光猫管理员账号密码</h3><p>普通的账号在光猫后面写着.<br>只能修改部分功能: 一些wifi设置(不同光猫功能不一样) DHCP 啥的比较鸡肋</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#管理员账号 </span><br><span class="line">telecomadmin</span><br><span class="line">#密码</span><br><span class="line">nE7jA%5m</span><br><span class="line"></span><br><span class="line">至少深圳电信 好像都是这个</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意备份或者截图</strong><br><strong>也要注意光猫的连线</strong></p></blockquote><p>改桥接<br><img src="https://picgo.genji.xyz/blog/posts/image-20200918013701149.png" alt="image-20200918013701149"></p><h2 id="路由器设置-PPPoE-上网"><a href="#路由器设置-PPPoE-上网" class="headerlink" title="路由器设置 PPPoE 上网"></a>路由器设置 PPPoE 上网</h2><p>大多数路由器一开始都是 DHCP 该成PPPoE然后填好 宽带的<code>账号密码</code>就行了</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200918014414681.png" alt="image-20200918014414681"></p><p>自动配置和手动配置  都行看你用到什么功能</p><h2 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h2><blockquote><p> <code>端口转发</code>我觉得有点像 nginx 的反向代理,</p><p><code>端口转发</code>可以把内网ip的某个端口映射到 公网ip上的某个端口</p></blockquote><p><img src="https://picgo.genji.xyz/blog/posts/image-20200918014747129.png" alt="image-20200918014747129"></p><p>这样我就能通过公网ip的80端口直接访问 内网192.168.3.100:10080</p><h2 id="ddns"><a href="#ddns" class="headerlink" title="ddns"></a>ddns</h2><p>公网ip有<code>动态</code>和<code>静态</code>的 ,一般家里申请的 都是<code>动态</code>的</p><p><code>ddns</code>适用于有公网ip 的</p><p>更多详情在我的另一篇记录里有(主页搜索ddns)</p><h2 id="DHCP静态绑定IP"><a href="#DHCP静态绑定IP" class="headerlink" title="DHCP静态绑定IP"></a>DHCP静态绑定IP</h2><p><code>DHCP</code> 没啥说的就是 自动分发IP子网掩码 设备连接时候不用手动填写ip了就</p><p><code>DHCP静态绑定IP</code>就是通过mac码绑定你的ip 使你的设备有固定的内网ip.</p><p>找到你的要绑定的设备, 然后自己填个ip 即可</p><blockquote><p>举个例子 我的cdn设置了白名单 192.168.3.xxx genji.xyz<br>这样你在本地预览时候也能访问图片!</p></blockquote><h2 id="vpn"><a href="#vpn" class="headerlink" title="vpn"></a>vpn</h2><blockquote><p>路由器自带的vpn都是垃圾 </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 光猫 </tag>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ddns</title>
      <link href="2020/01/06/Diy/ddns/"/>
      <url>2020/01/06/Diy/ddns/</url>
      
        <content type="html"><![CDATA[<h1 id="ddns"><a href="#ddns" class="headerlink" title="  ddns"></a><i class="fas fa-dog"></i>  ddns</h1><p>Dns ( domain name server )  </p><p>ddns  ( Dynamic domain name server )   就是前面加个  Dynamic  动态的 .</p><p>为什么要用ddns ? 而不是直接在 服务商dns解析  添加个a 记录 指向 你的ip 呢  ?</p><p>因为 你向电信爸爸申请的公网ip 是每天都变化的,甚至重启光猫有时候也会变.(没有公网ip的可以用内网穿透,这里不说了)</p><p>比如可以用下面 两个 ,等等.</p><a class="btn-beautify button--animated block blue larger" href="https://blog.genji.xyz/2020/01/05/frp/"   title="Frp"><i class="fas fa-dog fa-fw"></i><span>Frp</span></a><a class="btn-beautify button--animated block green larger" href="https://hsk.oray.com/"   title="花生壳"><i class="fas fa-paw fa-fw"></i><span>花生壳</span></a><hr><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><h3 id="利用路由器自带的ddns"><a href="#利用路由器自带的ddns" class="headerlink" title="利用路由器自带的ddns"></a>利用路由器自带的ddns</h3><h4 id="优点-不折腾-缺点-服务商少-有的路由器不支持多个域名"><a href="#优点-不折腾-缺点-服务商少-有的路由器不支持多个域名" class="headerlink" title="优点:不折腾  缺点:服务商少  有的路由器不支持多个域名"></a>优点:不折腾  缺点:服务商少  有的路由器不支持多个域名</h4><p>以我家的 <code>小米ax3600</code>为例,自带的ddns服务商就那么几个:</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917014105405.png" alt="image-20200917014105405"></p><p>这里注意下 图片里的 <code>账号密码</code> 就是你在服务商注册的账号和密码</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917014310786.png" alt="image-20200917014310786"></p><blockquote><p>主机名称  就是你在服务商(这里是花生壳)注册的域名.</p><p>一开始没懂什么是<code>主机名称</code>  哈哈 域名你就说域名呗..</p></blockquote><p>有的服务商第一次使用的话,可能需要你填写当前的公网ip.都没问题的话会显示:</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917015141777.png" alt="image-20200917015141777"></p><blockquote><p>这里注意下 小米路由器好像只能启用 一个,不能多个同时启用.</p></blockquote><p>这时候就可以用域名访问你的ip . ip变化的话,域名解析 自动改成你现在ip . </p><p>当然会有一定延迟,毕竟有个检查的时间.</p><p>如果你有二级域名也想解析到你的动态公网ip  ,就可以设置cname了</p><p>比如你的公网ip  是 8.8.8.8  ,然后通过ddns 记录到了  baidu.com 了,</p><p>这时候你把 nihao.baidu.com 通过cname 指向 baidu.com </p><p>访问 baidu.com nihao.baidu.com都会解析到你的公网ip</p><p>然后电信爸爸给你改成 8.8.8.9了  ,这时候路由器检查到了,然后就会向服务商请求,把ip改成了8.8.8.9</p><p>这里面有一个  检查间隔的时间 和服务商 ttl 的时间 .</p><p>同理 nihao.baidu.com 的服务商也有个ttl时间 </p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917025246755.png" alt="image-20200917025246755"></p><p>反正就是套娃 很慢.</p><p>所以就有了方案二</p><hr><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>通过旁路由的ddns直接解析到你域名的服务商</p><p>因为小米路由器的服务商有限 没有腾讯云 或者阿里 </p><p>所以要用下旁路由的 ddns ,一般来说旁路有支持的服务商很多的:</p><img src="https://picgo.genji.xyz/blog/posts/image-20200917021109249.png" alt="image-20200917021109249" style="zoom: 50%;" /><p>这样就少了个中间商 赚差价</p><p>但是问题来了<img src="https://picgo.genji.xyz/blog/posts/image-20200917021236263.png" alt="image-20200917021236263"></p><p>这里还是用 用户名 和 密码 的方式,但是服务商都要用 token 秘钥啥的了</p><p>如果 你的服务商 支持 用户名 和 密码 的方式.就可以直接用了.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917021829641.png" alt="image-20200917021829641"></p><blockquote><p>注意如果你是旁路由这里就不能是默认的<code>网络</code>了,因为这里ip是你主路由dhcp给旁路由的ip 比如:192.168.3.200,不是真正公网ip,要改成url的方式.</p></blockquote><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917022152035.png" alt="image-20200917022152035"></p><p>可以用自带的,也可用 <a href="http://ip.3322.net/">http://ip.3322.net/</a> ,访问这个链接可以返回你的公网ip</p><p>我是腾讯的dnspod,不支持账号和密码了,所以要换个新的ddns  ipk</p><h2 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h2><p>在github 没找到旁路由好用的ddns ipk  ,找到了个py脚本.</p><p>而且是最近更新的 ,也支持腾讯的dnspod.</p><p><a href="https://github.com/NewFuture/DDNS">https://github.com/NewFuture/DDNS</a></p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917022425545.png" alt="image-20200917022425545"></p><p>说明很详细.不多赘述</p><p>申请个 秘钥 记住id  和token,吧文件传到 软路由 重启不会重置的文件夹里 我这里传到了/mnt/……….</p><p>配置下<code>config.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;$schema&quot;</span>: <span class="string">&quot;https://ddns.newfuture.cc/schema/v2.8.json&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;debug&quot;</span>: <span class="literal">false</span>, </span><br><span class="line">  <span class="attr">&quot;dns&quot;</span>: <span class="string">&quot;dnspod&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;你的秘钥id&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;index4&quot;</span>: <span class="string">&quot;default&quot;</span>,<span class="comment">///获取ipv4方式 </span></span><br><span class="line">  <span class="attr">&quot;index6&quot;</span>: <span class="string">&quot;default&quot;</span>, <span class="comment">//获取ipv6方式 </span></span><br><span class="line">  <span class="attr">&quot;ipv4&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;baidu.com&quot;</span>, </span><br><span class="line">    <span class="string">&quot;nihao.baidu.com&quot;</span></span><br><span class="line">  ], </span><br><span class="line">  <span class="attr">&quot;ipv6&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;newfuture.cc&quot;</span>, </span><br><span class="line">    <span class="string">&quot;ipv6.ddns.newfuture.cc&quot;</span></span><br><span class="line">  ], </span><br><span class="line">  <span class="attr">&quot;proxy&quot;</span>: <span class="literal">null</span>, </span><br><span class="line">  <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;YOUR TOKEN or KEY for DNS Provider&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;ttl&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">&quot;cache&quot;</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>填好了就设置个计划任务 让他每5分钟 执行一次 ,因为  我设置了 <code>&quot;cache&quot;:true</code> 所以没有变就不提交,改变了再提交.</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200917022541974.png" alt="image-20200917022541974"></p><h3 id="如何设置计划任务"><a href="#如何设置计划任务" class="headerlink" title="如何设置计划任务"></a>如何设置计划任务</h3><p>好多* 好乱</p><p>这里引用下这篇文章 <a href="https://www.mivm.cn/openwrt-crontab/">https://www.mivm.cn/openwrt-crontab/</a></p><p>例子：<code>0 6 * * * reboot</code></p><p>每天6点0分执行<code>reboot</code>命令。因为只设置了“分”和“时”，“日月周”都是通配符，所以只要当前时间是 6点0分，不管当前是几月几日周几都会被执行。</p><p>还是例子：<code>0 6 * * 1,3 reboot</code></p><p>每周一和周三的6点0分执行<code>reboot</code>命令。因为“周”被设置为了<code>1,3</code>，逗号是将多个值分开，当条件达到其中一个值时便会执行。所以只有在周一或者是周三的6点0分才会被执行，当然，也不管当前是几月几日。</p><p>再来个例子：<code>0 6 * 3-6 1,3 reboot</code></p><p>这个例子的月改为了<code>3-6</code>，连字符的作用是指定范围，它就是在三月至六月的每周一和每周三的6点0分执行<code>reboot</code>命令。其实也可以这样写<code>0 6 * 3,4,5,6 1,3 reboot</code>，不过这样不够简洁，推荐还是使用连字符。</p><p>斜杠例子：<code>0 */3 * * * reboot</code></p><p>斜杠的作用是跳过某些特定值。你可以把它看作一个除法，当结果等于整数时才会执行。上面个例子，把时写成了<code>*/3</code>，星号表示任何值、/表示除法、3表示除数。那么，如果现在是1点，1/3 不是整数，就不会被执行，如果是9点，9/3 是整数，它就可以被执行。不知道我这样说大家有没有理解。（<a href="https://github.com/Hill-98">小山</a>数学是体育老师教的）</p><p>最后一个例子：<code>*/10 */3 * * * reboot</code></p><p>这个例子有两个斜杠，分别是分和时，那么不但要满足当前“分”除于10是整数，还需要满足“时”除于3是整数，比如1点10分，虽然“分”满足了条件，不过“时”并没有，只有当前时间为3点40分，这样的情况下，才会触发执行。</p><h3 id="计划任务注意事项"><a href="#计划任务注意事项" class="headerlink" title="计划任务注意事项"></a>计划任务注意事项</h3><p>我们先来说一下上面那个重启设备，那种写法其实是错误的，正确的写法应该是：<code>0 6 * * * sleep 60 &amp;&amp; reboot</code>。</p><p>为什么呢？因为当设备重启后，计划任务的守护进程被启动，便会立即检查一遍是否有任务需要被执行，设备重启时间一般是小于1分钟的，所以当设备重启后，就又会触发这个重启任务，直到时间不匹配为止，而延迟60秒再重启设备可以避免这种错误。</p><p>当日或周同时被设定为固定值时，那么其中的一个条件被满足时，任务就会被执行，不会等到两个条件均满足。（这么苛刻的条件，能满足的估计不多。）</p><p>命令中双引号使用 % 时，需要加反斜杠转义，错误的例子：<code>0 6 * * * touch /tmp/$(date &quot;%Y&quot;)</code>，正确的例子：<code>0 6 * * * touch /tmp/$(date &quot;\%Y&quot;)</code>。</p><h2 id="完结撒花"><a href="#完结撒花" class="headerlink" title="完结撒花"></a>完结撒花</h2>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ddns </tag>
            
            <tag> 旁路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp 内网穿透</title>
      <link href="2020/01/05/Diy/frp/"/>
      <url>2020/01/05/Diy/frp/</url>
      
        <content type="html"><![CDATA[<h1 id="frp-内网穿透-映射"><a href="#frp-内网穿透-映射" class="headerlink" title="frp 内网穿透/映射"></a>frp 内网穿透/映射</h1><h4 id="办网时候-尽量要公网ip-阿里或者腾讯的-学生服务器-1m带宽-都不够吃屎的"><a href="#办网时候-尽量要公网ip-阿里或者腾讯的-学生服务器-1m带宽-都不够吃屎的" class="headerlink" title="办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的."></a>办网时候 尽量要公网ip   阿里或者腾讯的 学生服务器 1m带宽 都不够吃屎的.</h4><hr><h2 id="工具-github-frp"><a href="#工具-github-frp" class="headerlink" title="工具 github  frp"></a>工具 github  frp</h2><p><a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p><p>不同系统下载不同  工具包</p><p><img src="https://picgo.genji.xyz/blog/posts/frp2.png" alt="frp2"></p><p><img src="https://picgo.genji.xyz/blog/posts/frp.png" alt="frp"></p><h2 id="配置服务器端"><a href="#配置服务器端" class="headerlink" title="配置服务器端"></a>配置服务器端</h2><ol><li>ssh 服务器 </li><li>下载工具包 </li><li>解压 里面有个frps.ini</li><li>设置端口</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="comment">#require</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#option</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#udp</span></span><br><span class="line"><span class="attr">bind_udp_port</span> = <span class="number">7001</span>   </span><br><span class="line"><span class="comment">#tcp</span></span><br><span class="line"><span class="attr">kcp_bind_pot</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#密码</span></span><br><span class="line"><span class="attr">token</span> = qaz123</span><br><span class="line"></span><br><span class="line"><span class="comment">#其他</span></span><br><span class="line"><span class="attr">log_level</span> = info</span><br><span class="line"><span class="attr">log_max_days</span> = <span class="number">3</span></span><br><span class="line"><span class="attr">max_pool_count</span> = <span class="number">5</span></span><br><span class="line"><span class="attr">max_ports_per_client</span> = <span class="number">0</span></span><br><span class="line"><span class="attr">tcp_mux</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">disable_log_color</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">log_file</span> = /www/server/panel/plugin/btp_frps/temp/frps.log</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​    </p><ol start="5"><li>运行</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh</span><br><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure><ol start="6"><li>开放端口  服务器本地的 和 服务商的 安全组   </li></ol><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><ol><li><p>也下载个工具包 我这里是mac  下载的是 drawin 版本的</p></li><li><p>解压 有个frpc.ini 文件</p></li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = 公网ip地址</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">token</span> = qaz123</span><br><span class="line"></span><br><span class="line"><span class="section">[web]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="comment">#要映射的端口</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8080</span>  </span><br><span class="line"><span class="attr">local_ip</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">custom_domains</span> = 域名或者公网ip</span><br><span class="line"><span class="attr">remotr_port</span>= <span class="number">8080</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>运行(路径要对) </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;frpc -c .&#x2F;frpc.ini</span><br></pre></td></tr></table></figure><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>没啥难度</p><p>可选充值代替品(也挺贵): </p><p>花生壳 每月免费1G 速度可以 </p><p>nat123  老古董</p><p>ngrok  </p><p>服务器带宽1m ,吃了屎一样难受 . 管电信要个公网ip 不香么 ,如果动态公网ip,可以用ddns.</p>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 终端 设置代理</title>
      <link href="2020/01/03/Mark/%E7%BB%88%E7%AB%AF%E4%BB%A3%E7%90%86/"/>
      <url>2020/01/03/Mark/%E7%BB%88%E7%AB%AF%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>更新: 发现了个更便捷的的,更灵活方便</p><p>clash 复制终端代理命令</p><p><img src="https://picgo.genji.xyz/blog/posts/lly2021-03-08_11-35-58%401x.png"></p><p>然后终端复制 =&gt; 回车 =&gt; git / brew 等 超级快</p><hr><div class="note info flat"><p>所有的前提你能 文明富强上网  </p><p>端口看你们代理怎么设置的 常见的1080 1086 7890</p><p>我用的<code>clash</code> 所以默认的是7890,  而且是混合的(http socks5都为7890)</p></div><h1 id="git-设置代理"><a href="#git-设置代理" class="headerlink" title="git 设置代理"></a>git 设置代理</h1><h2 id="http-https"><a href="#http-https" class="headerlink" title="http / https"></a>http / https</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;全局 </span><br><span class="line"></span><br><span class="line">git config --global http.proxy http:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class="line">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class="line"></span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;只为 github </span><br><span class="line">git config --global http.https:&#x2F;&#x2F;github.com.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class="line">git config --global https.https:&#x2F;&#x2F;github.com.proxy https:&#x2F;&#x2F;127.0.0.1:7890</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="socks5"><a href="#socks5" class="headerlink" title="socks5"></a>socks5</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:7890</span><br><span class="line">git config --global https.https://github.com.proxy socks5://127.0.0.1:7890</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p><code>~/.ssh/config</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 必须是 github.com</span><br><span class="line">Host github.com</span><br><span class="line">   HostName github.com</span><br><span class="line">   User git</span><br><span class="line">   # 走 HTTP 代理</span><br><span class="line">   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport&#x3D;8080</span><br><span class="line">   # 走 socks5 代理（如 Shadowsocks）</span><br><span class="line">   # ProxyCommand nc -v -x 127.0.0.1:1080 %h %p</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="终端设置代理"><a href="#终端设置代理" class="headerlink" title="终端设置代理"></a>终端设置代理</h1><p>git clone  确实很快了</p><p>但是npm,homebrew呢</p><p>Npm   你可以用 nrm 切换taobao源,但是有的时候并不是最新的会报错或者未知bug</p><p>homebrew 就更慢了 切换中科/清华源  要改好多设置,而且有的软件还没有,不太好用.</p><p>所以这时候要用 这个方法了</p><p>##bash</p><p><code>~/.bash_profile</code>文件添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_on</span></span>()&#123;</span><br><span class="line"><span class="built_in">export</span> http_proxy=socks5://127.0.0.1:7890</span><br><span class="line"><span class="built_in">export</span> https_proxy=socks5://127.0.0.1:7890</span><br><span class="line"><span class="built_in">export</span> all_proxy=socks5://127.0.0.1:7890</span><br><span class="line">curl cip.cc </span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;****** 当前终端 已开启代理 ******&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">proxy_off</span></span>()&#123;</span><br><span class="line">        <span class="built_in">unset</span> http_proxy</span><br><span class="line">        <span class="built_in">unset</span> https_proxy</span><br><span class="line">        <span class="built_in">unset</span> all_proxy</span><br><span class="line">curl cip.cc</span><br><span class="line">        <span class="built_in">echo</span> -e <span class="string">&#x27;****** 当前终端 已关闭代理 ******&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在终端输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"></span><br><span class="line">proxy_on    //打开</span><br><span class="line"></span><br><span class="line">proxy_off //关闭</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h2><p>修改<code>~/.zshrc</code> </p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> proxyON=<span class="string">&quot;</span></span><br><span class="line"><span class="string">export http_proxy=socks5://127.0.0.1:7890</span></span><br><span class="line"><span class="string">export https_proxy=socks5://127.0.0.1:7890</span></span><br><span class="line"><span class="string">export all_proxy=socks5://127.0.0.1:7890</span></span><br><span class="line"><span class="string">curl cip.cc </span></span><br><span class="line"><span class="string">echo -e &#x27;****** 当前终端 已开启代理 ******&#x27;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> proxyOFF=<span class="string">&quot;</span></span><br><span class="line"><span class="string">    unset http_proxy</span></span><br><span class="line"><span class="string">        unset https_proxy</span></span><br><span class="line"><span class="string">        unset all_proxy</span></span><br><span class="line"><span class="string">curl cip.cc</span></span><br><span class="line"><span class="string">        echo -e &#x27;****** 当前终端 已关闭代理 ******&#x27;</span></span><br><span class="line"><span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p>我一般是用zsh 而且是默认的 所有后面就省掉了<code>source ~/.bash_profile</code> </p><p>直接终端 <code>proxyON</code> /<code>proxyOFF</code>搞起</p><p>效果</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">❯ proxyON</span><br><span class="line">IP      : 58.153.107.xxx</span><br><span class="line">地址    : 中国  香港  pccw.com</span><br><span class="line"></span><br><span class="line">数据二  : 香港 | 电讯盈科有限公司</span><br><span class="line"></span><br><span class="line">数据三  : 中国香港 | 电讯盈科</span><br><span class="line"></span><br><span class="line">URL     : http://www.cip.cc/58.153.107.120</span><br><span class="line"></span><br><span class="line">****** 当前终端 已开启代理 ******</span><br><span class="line">❯ proxyOFF</span><br><span class="line">IP      : xxx.xxx.87.203</span><br><span class="line">地址    : 中国  广东  深圳</span><br><span class="line">运营商  : 电信</span><br><span class="line"></span><br><span class="line">数据二  : 广东省深圳市 | 电信</span><br><span class="line"></span><br><span class="line">数据三  : 中国广东深圳 | 电信</span><br><span class="line"></span><br><span class="line">URL     : http://www.cip.cc/14.155.87.203</span><br><span class="line">****** 当前终端 已关闭代理 ******</span><br></pre></td></tr></table></figure><h2 id="Alfred-执行"><a href="#Alfred-执行" class="headerlink" title="Alfred 执行"></a>Alfred 执行</h2><p><img src="https://picgo.genji.xyz/blog/posts/image-20200919154645223.png" alt="image-20200919154645223"></p><p>在alfre workflow中添加即可</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200930144414936.png" alt="image-20200930144414936"></p>]]></content>
      
      
      <categories>
          
          <category> mark </category>
          
          <category> proxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> proxy </tag>
            
            <tag> 终端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>报错!Fxxk!</title>
      <link href="2020/01/02/Mark/error/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/"/>
      <url>2020/01/02/Mark/error/%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title=" git"></a><i class="fab fa-github-square"></i> git</h1><h3 id="error-failed-to-push-some-refs-to-‘git-github-com"><a href="#error-failed-to-push-some-refs-to-‘git-github-com" class="headerlink" title="error: failed to push some refs to ‘git@github.com"></a>error: failed to push some refs to ‘git@github.com</h3><p>resolve: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><br/><h3 id="删除git文件"><a href="#删除git文件" class="headerlink" title="删除git文件"></a>删除git文件</h3><p>resolve</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached filename</span><br></pre></td></tr></table></figure><hr><h1 id="npm"><a href="#npm" class="headerlink" title=" npm"></a><i class="fab fa-npm"></i> npm</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Node Sass could not find a binding for your current environment: OS X 64-bit with Node.js 12.x</span><br><span class="line"></span><br><span class="line">Found bindings for the following environments:</span><br><span class="line">  - OS X 64-bit with Node.js 13.x</span><br><span class="line"></span><br><span class="line">## 前阵 更新了node  又降级到 12  </span><br><span class="line"></span><br><span class="line">解决:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm rebuild node-sass</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="node"><a href="#node" class="headerlink" title=" node"></a><i class="fab fa-node"></i> node</h1><h1 id="docker"><a href="#docker" class="headerlink" title=" docker"></a><i class="fab fa-docker"></i> docker</h1><p>在旁路由 docker run 一个 镜像时候 出现<br>java.Net.UnknownHostException </p><p> 首先觉得是host 问题所以添加host,<br> <div class="note [info] [no-icon] flat"><p>不在直接在容器中 <code>/etc/hosts</code> 直接添加 容器容器回重置 ,<br><code> --add-hotst  yourdomain.com:IP</code>  </p></div></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:8080 --add-host api.test.com:10.100.33.101</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后 docker exec -it contaierID /bin/bash 进入容器内终端<br>依然ping不通  然后搜到一个 方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启 NAT 转发</span></span><br><span class="line"> firewall-cmd --zone=public --add-masquerade --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="something……"><a href="#something……" class="headerlink" title="something……"></a>something……</h1>]]></content>
      
      
      <categories>
          
          <category> mark </category>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 同时push到 多个仓库</title>
      <link href="2020/01/02/Mark/git/git_push%E5%A4%9A%E4%B8%AA%E4%BB%93%E5%BA%93/"/>
      <url>2020/01/02/Mark/git/git_push%E5%A4%9A%E4%B8%AA%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="git-push-到多个仓库"><a href="#git-push-到多个仓库" class="headerlink" title="git push 到多个仓库"></a>git push 到多个仓库</h1><h2 id="手动档"><a href="#手动档" class="headerlink" title="手动档"></a>手动档</h2><p>随便初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br><span class="line">touch README.md</span><br><span class="line">git add .</span><br><span class="line">git commit -m<span class="string">&quot;some thing&quot;</span></span><br><span class="line">gti remote add origin   git@gitee.com:liulingyue/test.git</span><br><span class="line"></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>每个仓库都有这些话吧 .</p><p> 创建后有一个.git 隐藏文件  里面有个config</p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200704010944468.png" alt="image-20200704010944468"></p><p>这时候添加一个新的仓库 ,  注意 <code> add</code> 后面不能是origin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add hello  git@gitee.com:liulingyue/ddddfdfdfdfdfd.git</span><br></pre></td></tr></table></figure><p><img src="https://picgo.genji.xyz/blog/posts/image-20200704005128019.png" alt="image-20200704005128019"></p><p>再看 config  多出来个东西    <code>remote &quot;hello&quot;</code>.</p><p>这样就可以手动push  任意仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push origin </span><br><span class="line">git push hello </span><br></pre></td></tr></table></figure><hr><h2 id="自动档"><a href="#自动档" class="headerlink" title="自动档"></a>自动档</h2><p><img src="https://picgo.genji.xyz/blog/posts/image-20200704005845355.png" alt="image-20200704005845355"></p><p> 直接添加 </p><p>直接 git push </p><p><img src="https://picgo.genji.xyz/blog/posts/image-20200704010013126.png" alt="image-20200704010013126"></p>]]></content>
      
      
      <categories>
          
          <category> mark </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 命令</title>
      <link href="2020/01/02/Mark/git/git%E5%91%BD%E4%BB%A4/"/>
      <url>2020/01/02/Mark/git/git%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="公钥"><a href="#公钥" class="headerlink" title="公钥"></a>公钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;xxxxx@xxxxx.com&quot;</span>  </span><br></pre></td></tr></table></figure><p>-t   type   -C  commit</p><p>可以设置passphrase ( 安全保障 但自动部署有点麻烦 )</p><br><h3 id="手残二连"><a href="#手残二连" class="headerlink" title="手残二连"></a>手残二连</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><br><h3 id="脑残五连"><a href="#脑残五连" class="headerlink" title="脑残五连"></a>脑残五连</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin      https || ssh </span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><br><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy https://127.0.0.1:1087</span><br><span class="line">git config --global https.https://github.com.proxy https://127.0.0.1:1087</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:1086</span><br><span class="line">git config --global https.https://github.com.proxy socks5://127.0.0.1:1086</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="取消代理"><a href="#取消代理" class="headerlink" title="取消代理"></a>取消代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><br><h3 id="删除git文件"><a href="#删除git文件" class="headerlink" title="删除git文件"></a>删除git文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached filename</span><br></pre></td></tr></table></figure><br><h3 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git branch             //list 分支</span><br><span class="line">git branch  name       //创建</span><br><span class="line">git checkout name      //切换</span><br><span class="line">git checkout -b        //创建并切换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git checkout -b name origin/name  //取远程分支合并到本地</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mark </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md 外挂标签</title>
      <link href="2020/01/01/Diy/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/"/>
      <url>2020/01/01/Diy/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="提示块"><a href="#提示块" class="headerlink" title="提示块"></a>提示块</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">[class]   : default | primary | success | info | warning | danger.</span><br><span class="line">[no-icon] : Disable icon in note.</span><br><span class="line"></span><br><span class="line">All parameters are optional.</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note default flat"><p>default 提示塊標籤</p></div><div class="note primary no-icon flat"><p>primary 提示塊標籤</p></div><div class="note success flat"><p>success 提示塊標籤</p></div><div class="note info flat"><p>info 提示塊標籤</p></div><div class="note warning flat"><p>warning 提示塊標籤</p></div><div class="note danger flat"><p>danger 提示塊標籤</p></div><h2 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line"><span class="code">    title Key elements in Product X</span></span><br><span class="line"><span class="code">    &quot;Calcium&quot; : 42.96</span></span><br><span class="line"><span class="code">    &quot;Potassium&quot; : 50.05</span></span><br><span class="line"><span class="code">    &quot;Magnesium&quot; : 10.01</span></span><br><span class="line"><span class="code">    &quot;Iron&quot; :  5</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><div class="mermaid">pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5</div><h2 id="tab"><a href="#tab" class="headerlink" title="tab"></a>tab</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="btn"><a href="#btn" class="headerlink" title="btn"></a>btn</h2><a class="btn-beautify button--animated [color] [style] [layout] [position] [size]" href="/%5Burl%5D"   title="[text]"><i class="[icon] fa-fw"></i><span>[text]</span></a><a class="btn-beautify button--animated green larger" href="http://blog.genji.xyz"   title="hello"><i class="far fa-hand-point-right fa-fw"></i><span>hello</span></a><h2 id="front-matter"><a href="#front-matter" class="headerlink" title="front-matter"></a>front-matter</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 【必需】頁面標題 </span><br><span class="line">date: 【必需】頁面創建日期 </span><br><span class="line">updated: 【可選】文章更新日期 </span><br><span class="line">tags:  【可選】文章標籤 </span><br><span class="line">categories: 【可選】文章分類 数组 [1,2,3]表示1&gt;2&gt;3 子分类</span><br><span class="line">keywords: 【可選】文章關鍵字 </span><br><span class="line">description: 【可選】文章描述</span><br><span class="line">top_img 【可選】文章頂部圖片</span><br><span class="line">comments: 【可選】顯示文章評論模塊 (默認 true)</span><br><span class="line">cover:  【可選】文章縮略圖 (如果沒有設置 top_img, 文章頁頂部將顯示縮略圖，可設為 false &#x2F; 圖片地址 &#x2F; 留空)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">toc:</span><br><span class="line">toc_number:</span><br><span class="line">auto_open:</span><br><span class="line">copyright:</span><br><span class="line">copyright_author:</span><br><span class="line">copyright_author_href:</span><br><span class="line">copyright_url:</span><br><span class="line">copyright_info:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;demo.jerryc.me&#x2F;posts&#x2F;dc584b87&#x2F;#Front-matter</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> diy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> md </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端 rem自适应</title>
      <link href="2020/01/01/%E5%89%8D%E7%AB%AF/css/responsive_rem/"/>
      <url>2020/01/01/%E5%89%8D%E7%AB%AF/css/responsive_rem/</url>
      
        <content type="html"><![CDATA[<h1 id="移动端-rem-自适应"><a href="#移动端-rem-自适应" class="headerlink" title="移动端 rem 自适应"></a>移动端 rem 自适应</h1><h3 id="1-rem-–-gt-html-font-size-100px-or-625"><a href="#1-rem-–-gt-html-font-size-100px-or-625" class="headerlink" title="1. rem –&gt; html{font-size: 100px   or 625%   };"></a>1. rem –&gt; html{font-size: 100px   or 625%   };</h3><p>   chrome强制字体最小值为12px，低于12px按12px处理.<br>   1rem=10px就变成1rem=12px，出现偏差.</p><h3 id="2-lt-meta-name-39-viewport-39-content-39-width-device-width-initial-scale-1-user-scale-no-39-gt"><a href="#2-lt-meta-name-39-viewport-39-content-39-width-device-width-initial-scale-1-user-scale-no-39-gt" class="headerlink" title="2. &lt;meta name=&#39;viewport&#39; content=&#39;width=device-width,initial-scale=1,user-scale=no&#39; /&gt;"></a>2. <code>&lt;meta name=&#39;viewport&#39; content=&#39;width=device-width,initial-scale=1,user-scale=no&#39; /&gt;</code></h3><h3 id="3-高清适配方案中iPhone-X全屏兼容："><a href="#3-高清适配方案中iPhone-X全屏兼容：" class="headerlink" title="3. 高清适配方案中iPhone X全屏兼容："></a>3. 高清适配方案中iPhone X全屏兼容：</h3><p>  1、需要在viewport中添加 viewport-fit=cover，js和meta标签中都要添加；<br>  2、同时iPhone X屏幕底部圆弧区域占位高度使用 calc(constant(safe-area-inset-bottom) * 3) 作为padding-bottom， margin-bottom等高度属性的值。iPhone X上，高清适配方案中，此值等价于.34rem，即34逻辑像素。根据实际情况可以修改* 3这个系数来调整占位区域的高度，但一定要使用constant(safe-area-inset-bottom)。在ios11下，非iPhone X的设备此值为0，使用时需要注意样式覆盖的情况。</p><h3 id="postcss-px2rem"><a href="#postcss-px2rem" class="headerlink" title="postcss   px2rem"></a>postcss   px2rem</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vue.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      postcss: &#123;</span><br><span class="line">        plugins: [</span><br><span class="line">          <span class="built_in">require</span>(<span class="string">&quot;autoprefixer&quot;</span>)(),</span><br><span class="line">          <span class="built_in">require</span>(<span class="string">&quot;postcss-plugin-px2rem&quot;</span>)(&#123;</span><br><span class="line">            rootValue: <span class="number">100</span>, <span class="comment">//换算基数， 默认100  ，这样的话把根标签的字体规定为1rem为100px,这样就可以从设计稿上量出多少个px直接在代码中写多上px了。</span></span><br><span class="line">            <span class="comment">// unitPrecision: 5, //允许REM单位增长到的十进制数字。</span></span><br><span class="line">            propWhiteList: [], <span class="comment">//默认值是一个空数组，这意味着禁用白名单并启用所有属性。</span></span><br><span class="line">            exclude: <span class="regexp">/(node_module)/</span>, <span class="comment">//默认false，可以（reg）利用正则表达式排除某些文件夹的方法，例如/(node_module)\/如果想把前端UI框架内的px也转换成rem，请把此属性设为默认值</span></span><br><span class="line">            selectorBlackList: [<span class="string">&quot;html&quot;</span>], <span class="comment">//要忽略并保留为px的选择器</span></span><br><span class="line">            <span class="comment">// ignoreIdentifier: false,  //（boolean/string）忽略单个属性的方法，启用ignoreidentifier后，replace将自动设置为true。</span></span><br><span class="line">            <span class="comment">// replace: true, // （布尔值）替换包含REM的规则，而不是添加回退。</span></span><br><span class="line">            mediaQuery: <span class="literal">false</span>, <span class="comment">//（布尔值）允许在媒体查询中转换px。</span></span><br><span class="line">            minPixelValue: <span class="number">3</span>, <span class="comment">//设置要替换的最小像素值(3px会被转rem)。 默认 0</span></span><br><span class="line">          &#125;),</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100px</span>   or <span class="number">625%</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">    rem() &#123;</span><br><span class="line">      <span class="keyword">var</span> designWidth = <span class="number">750</span>,</span><br><span class="line">        rem2px = <span class="number">100</span>;</span><br><span class="line">      <span class="built_in">document</span>.documentElement.style.fontSize =</span><br><span class="line">        (((<span class="built_in">window</span>.innerWidth / designWidth) * rem2px) / <span class="number">16</span>) * <span class="number">100</span> + <span class="string">&quot;%&quot;</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="built_in">this</span>.rem(),</span><br><span class="line">      <span class="built_in">window</span>.addEventListener(</span><br><span class="line">        <span class="string">&quot;resize&quot;</span>,</span><br><span class="line">        () =&gt; &#123;</span><br><span class="line">          <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">          <span class="keyword">let</span> timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.rem()</span><br><span class="line">          &#125;, <span class="number">200</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="literal">false</span></span><br><span class="line">      );</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><blockquote><p>也可 将 fontsize  填入黑名单 , 媒体查询控制 字体的大小 避免 文字过小  .</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rem </tag>
            
            <tag> meta </tag>
            
            <tag> postcss </tag>
            
            <tag> px2rem </tag>
            
            <tag> 移动端 </tag>
            
            <tag> 响应式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tips</title>
      <link href="2020/01/01/%E5%89%8D%E7%AB%AF/html/html%E5%B0%8F%E8%AE%B0%E5%BD%95/"/>
      <url>2020/01/01/%E5%89%8D%E7%AB%AF/html/html%E5%B0%8F%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Tips"><a href="#Tips" class="headerlink" title=" Tips"></a><i class="fas fa-book"></i> Tips</h1><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:XXX@126.com&quot;</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">## 点击发送邮件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tips </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
